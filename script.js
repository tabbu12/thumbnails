function var1change(e){
  localStorage.setItem("var1", document.getElementById("var1").value);
}
function var2change(e){
  localStorage.setItem("var2", document.getElementById("var2").value);
}
function var3change(e){
  localStorage.setItem("var3", document.getElementById("var3").value);
}
function var4change(e){
  localStorage.setItem("var4", document.getElementById("var4").value);
}
document.getElementById("text1").value = localStorage.getItem("textone") || "";
function text1(){
  localStorage.setItem("textone",document.getElementById("text1").value);
 
}
document.getElementById("text2").value = localStorage.getItem("texttwo") || "";
function text2(){
  localStorage.setItem("texttwo",document.getElementById("text2").value);
 
}
document.getElementById("text3").value = localStorage.getItem("textthree") || "";
function text3(){
  localStorage.setItem("textthree",document.getElementById("text3").value);
 
}
document.getElementById("text4").value = localStorage.getItem("textfour") || "";
function text4(){
  localStorage.setItem("textfour",document.getElementById("text4").value);
 
}

setTimeout(() => {
  

    let daily = [
      {
        title: "అతిపెద్ద శుభవార్తలు ఉన్నాయి",
        thumbnail: "ఈరోజు మీ జీవితంలోనే అతిపెద్ద శుభవార్త!",
        matter: "ఈరోజు మీకు మీ జీవితంలోనే అతిపెద్ద శుభవార్త అందుతుంది దాన్ని విన్న తరవాత మీ ఆనందానికి హద్దులు ఉండవు ",
      },
      {
        title: "ఒక స్త్రీ వల్ల ధనాలభం",
        thumbnail: "ఒక స్త్రీ వల్ల ఇలా ధనాలభం పొందే అవకాశం!",
        matter: "ఈరోజు మీకు మీ జీవిత భాగస్వామి వల్ల ధనాలభం పొందే అవకాశం ఉంది మీరు మాత్రం మీ జీవిత భాగస్వామి ని పూర్తిగా నమ్మాలి శుభం జరుగుతుంది ",
      },
      {
        title: "ఒక స్త్రీ పగబట్టి ఇలా",
        thumbnail: "ఒక స్త్రీ పగబట్టి చేసే ప్రయత్నాలు తెలిస్తే షాక్!",
        matter: "ఈరోజు ఒక స్త్రీ పాత కక్షలు పెట్టుకొని మీ మీద పగబట్టి మిమ్మల్ని ఆర్ధికంగా నష్టపరుచడానికి చెయ్యని ప్రయత్నలంటూ ఉండవు కాని మీ మంచి మనస్సు వల్ల దేవుడు మీ మీద అన్ని ప్రయత్నాలను విఫలం చేస్తారు",
      },
      {
        title: "కొత్త స్త్రీ తో స్నేహం",
        thumbnail: "2 శుభవార్తలు + ఒక కొత్త స్త్రీ తో స్నేహం",
        matter: "ఈరోజు మీరు రెండు పెద్ద శుభవార్తలు వింటారు మరియు అనుకోకుండా మీరు ఒక కొత్త స్త్రీ తో కలిసి ఆకస్మికంగా స్నేహం చేస్తారు",
      },
      {
        title: "పెద్ద శుభవార్తలు ఉన్నాయి",
        thumbnail: "పెద్ద శుభవార్తలు + ఈవిషయంలో జాగ్రత్త",
        matter: "ఈరోజు శుభప్రదంగా ఉంటుంది మీరు ఈరోజు పెద్ద శుభవార్తలు వింటారు ఆ శుభవార్తలు విన్న తరువాత ఆనండంలూ మద్యపానం సేవించడానికి ప్రయత్నాలు చేస్తారు ఇలా చెయ్యకండి మీ ఆరోగ్యం దెబ్బతీస్తుంది జాగ్రత్తగా ఉండండి ",
      },
      {
        title: "ఒక స్త్రీ పగబట్టి ఇలా",
        thumbnail: "ఒక స్త్రీ పగబట్టి ఈవిధంగా చేస్తుంది జాగ్రత్త",
        matter: "ఈరోజు మీ మీద ఒక స్త్రీ పగబట్టి హాని చెయ్యాలని చూస్తున్నారు , మరియు మీ మీద ఒక స్త్రీ ఏడుపు ఉంది మీ వ్యాపారం మరియు అభివృద్ధి మీద ఏడుస్తున్నారు జాగ్రత్తగా ఉండండి",
      },
      {
        title: "బంధువులే మీ సేత్రువులు",
        thumbnail: "మీ బంధువులే మీ సేత్రువులు జాగ్రత్త",
        matter: "మీ బంధువుల్లో కొందరు మీ సేత్రువులు ఉన్నారు వాళ్ళు ఎప్పుడు అవకాశం దొరికితే మిమ్మల్ని నష్టం చెయ్యాలని చూస్తున్నారు ఎవ్వరితో కూడా మీ వ్యాపారం గురించి చెప్పకండి జాగ్రత్తగా ఉండండి వెంనేపోటు పొడుస్తారు",
      }, 
      {
        title: "ఒక స్త్రీ మోసం చేస్తారు",
        thumbnail: "ఒక స్త్రీ ఇలా మోసం చేస్తుంది జాగ్రత్త!",
        matter: "ఈరోజు మీరు ఏంతో నమ్మిన ఒక స్త్రీ మిమ్మల్ని మోసం చేసే అవకాశం ఉంది జాగ్రత్తగా ఉండండి , మీరు మంచివారు కాని అందరు మంచివారు ఉండరు ఎవ్వరిని గుడ్డిగా నమ్మవద్దు",
      },
      {
        title: "ఒక స్త్రీ వల్ల డబ్బులు",
        thumbnail: "ఒక స్త్రీ వలన ఆదాయం + ఈవిషయాల్లో జాగ్రత్త",
        matter: "ఈరోజు మీకు చాలా మంచిరోజు నేడు మీకు మీ జీవిత భాగస్వామి బల్ల ధనాలభం కలుగుతుంది మరియు మీరు మీ జీవిత భాగస్వామి వల్ల చాలా సంతోషంగా ఉంటారు మీ బాధ్యతే ఏంటంటే మీరు కుడా వారిని సంతోషంగా ఉంచండి ",
      },
      {
        title: "స్త్రీ వల్ల శుభవార్తలు",
        thumbnail: "ఒక స్త్రీ వల్ల శుభవార్తలు ! తెలిస్తే షాక్!",
        matter: "ఈరోజు మీకు చాలా మంచిరోజు ఈరోజు మీకు ఒక స్త్రీ వల్ల శుభవార్తలు అందుతాయి ఈలోకంలో మీరే అదృష్టవంతులు అని ఈరోజు మీకు అనిపిస్తుంది మీరు మాత్రం ఆ శుభవార్తలు వినగానే షాక్ అవ్వడం ఖాయం",
      },
      {
        title: "స్త్రీ కాళ్ళ వద్దకు",
        thumbnail: "కోరుకున్న స్త్రీ కాళ్ళ వద్దకు వస్తుంది",
        matter: "ఈరోజు మీరు కూరుకున్న స్త్రీ మీ వ్యాపారం మరియు అభివృద్ధి చూసి వారు మీ కాళ్ళ వద్దకు వస్తారు కాని మీరు మాత్రం మీ వ్యాపారం మరియు అభివృద్ధి ని ఆపకండి ",
      },
      {
        title: "ఒక స్త్రీ మోసం చేస్తారు",
        thumbnail: "ఒక స్త్రీ వెన్నెపాటు పొడుస్తారు జాగ్రత్త!",
        matter: "ఈరోజు మీరు ఎంతగా నమ్మిన ఒక స్త్రీ మిమ్మల్ని మోసం చేస్తారు , దీనివల్ల మీరు మానసికంగా డిప్రెషన్ లోకి పోవచ్చు జాగ్రత్తగా ఉండండి లోకంలో డబ్బే అంత అని తెలుసుకోండి డబ్బు ఉంటె మీరే రాజు మీరే మంత్రి",
      },
      {
        title: "స్త్రీ వల్ల శుభవార్తలు",
        thumbnail: "ఒక స్త్రీ వల్ల శుభవార్తలు ! తెలిస్తే ఎగిరి గంటేస్తారు",
        matter: "ఈరోజు మీరు ఒక స్త్రీ వల్ల శుభవార్తలు అందుకుంటారు ఈలోకంలో మీరే అదృష్టవంతులు అని ఈరోజు మీకు అనిపిస్తుంది మీరు మాత్రం ఆ శుభవార్తలు వినగానే మీరు ఎగిరి గంతెయ్యడం మాత్రం ఖాయం",
      },
      {
        title: "ఒక స్త్రీ వల్ల ఘూరం",
        thumbnail: "ఒక స్త్రీ వల్ల ఘోరం జరుగుతుంది జాగ్రత్త!",
        matter: "ఈరోజు మీరు ఒక స్త్రీ వల్ల భారిగా నష్టపూతారు దీనివల్ల మీరు బాధ పాడుతారు కాని దానివల్ల ఏమి లాభం లేదు ఇప్పటికైనా పోయింది ఏమిలేదు అన్ని మరిచి మీరు మీ లక్ష్యం మీద దృష్తి పెడితే శుభం కలుగుతుంది",
      },
      {
        title: "కుటుంబంలో వీరికి మరనగందం",
        thumbnail: "కుటుంబంలో వీరికి మరణ గండం జాగ్రత్త!",
        matter: "ఈరోజు మీ కుటుంబంలో పెద్దవారిని ఎలెక్ట్రానిక్ వస్తువులనుంచి దూరంగా ఉంచండి ప్రమాదాలు జరిగే అవకాశాలు ఉన్నాయి అప్ప్రమత్తంగా ఉండండి వారి ఆరోగ్యం మీద శ్రెద్ద పెట్టండి శుభం కలుగుతుంది ",
      },
      {
        title: "అందమైన స్త్రీ తో ",
        thumbnail: "ఈరోజు అదృష్టం మీదే! అందమైన స్త్రీ తో",
        matter: "ఈరోజు ఈ మొత్తం ప్రపంచంలో మీరే అదృష్టవంతులు అని మీకు అనిపిస్తుంది ఈరోజు మీరు మీకు నచ్చిన ఇక అందమైన స్త్రీ తో బయటకు వెళ్లి సినిమాలు షికార్లు అని జాలిగా గడుపుతారు",
      },
      {
        title: "స్త్రీ తో మనసులోని మాట",
        thumbnail: "అందమైన స్త్రీ తో మనసులోని మాట చెప్తారు ",
        matter: "ఈరోజు మీరు మీకు నచ్చిన ఒక అందమైన స్త్రీ తో ఎప్పటినుంచో చెప్పాలనుకుంటున్న మీ మనస్సులోని మాట ఈరోజు చెపుతారు మరియు ఇలా చేస్తే ఈరోజు మీరు షాకింగ్ న్యూస్ వింటారు ",
      },
      {
        title: "పెద్ద శుభవార్తలు ఉన్నాయి",
        thumbnail: "పెద్ద శుభవార్తలు + ఒక స్త్రీ పగబట్టి ఇలా చేస్తది",
        matter: "ఈరోజు మీరు పెద్ద శుభవార్తలు వింటారు మరియు ఈరోజు ఒక స్త్రీ పగబట్టి మీ శుభవార్తల మీద ఈర్ష తో నష్టం చెయ్యడానికి ప్రయత్నాలు చేస్తారు కాని మీరు మీ అదృష్టం వల్ల తప్పించుకుంటారు",
      },
      {
        title: "ఒక స్త్రీ తో సరదాగా ఉలా",
        thumbnail: "ఒక స్త్రీ తో సరదాగా ఇలా చేస్తారు...! జాగ్రత్త",
        matter: "ఈరోజు మీరు సరదా కోసం మీ ప్రేయసితో బయటకు పోయి సినిమాలకు రెస్టారెంట్లకు పోయి చివరికి మీరు మీ దగ్గర ఉన్న డబ్బును మొత్తం ఐపోచేస్తారు జాగ్రత్తగా ఉండండి డబ్బును ఈరోజు మీరు ఆదా చేస్తే అవి మీకు రేపు పనికి వస్తాయి",
      },
      {
        title: "స్త్రీ వల్ల ఆనందం",
        thumbnail: "ఒక స్త్రీ వల్ల ఆనందానికి హద్దులు ఉండవు",
        matter: "ఈరోజు మీ జీవితానికి అర్ధమోచ్చే ఒక పెద్ద బంగారు శుభావర్తని మీ జీవిత భాగస్వామి మీకు అందిస్తారు ఈరోజు మీరు ఒక అందమైన స్త్రీ తో జాలిగా గడుపుతారు ఈరోజు ఆ అందమైన స్త్రీ వల్ల ఆకస్మికంగా ధనలాభం పొందే అవకాశం కుడా ఉంది",
      },
      {
        title: "వీరితో గొడవలు జాగ్రత్త",
        thumbnail: "ఈరోజు వీరితో గొడవలు జరుగుతాయి జాగ్రత్త",
        matter: "ఈరోజు మీరు ఎప్పటినుంచో గొడవ పదాలనుకుంటున్న మీ సేత్రువులు మిమ్మల్ని గెలకడంతో మీరు వారితో గొడవ పడొచ్చు కాని గొడవ పరిష్కారం కాదని మీరు తెలుసుకూవాలి కాని గొడవ జరిగితే మాత్రం గెలిసేది మీరే",
      },
      {
        title: "అందమైన స్త్రీ తో ఇలా",
        thumbnail: "ఒక అందమైన స్త్రీ తో సరదాలు + ఆకస్మిక ధనాలభం",
        matter: "ఈరోజు మీరు ఒక అందమైన స్త్రీ తో జాలిగా గడుపుతారు ఈరోజు ఆ అందమైన స్త్రీ వల్ల ఆకస్మికంగా ధనలాభం పొందే అవకాశం కుడా ఉంది",
      },
      {
        title: "స్త్రీ వల్ల నష్టాలు",
        thumbnail: "ఓక స్త్రీ వల్ల భారీగా నష్టపోతారు జాగ్రత్త!",
        matter: "ఈరోజు మీరు మీ జీవిత భాగస్వామి చేసిన ఒక తప్పు వల్ల బిజినెస్ లో భారి నష్టాలను చూస్తారు దీనివల్ల మీరు వారిమీద కోప్పడుతారు ఆఖరికి దీంట్లో వాళ్ళు కావాలని చెయ్యలేదని తెలుసుకొని క్షమిస్తారు",
      },
      {
        title: "ఒక స్త్రీ పగబట్టి ఇలా",
        thumbnail: "ఒక స్త్రీ పగబట్టి ఈవిధంగా చేస్తుంది",
        matter: "ఈరోజు మీ మీద ఎప్పటినుంచో కక్ష పెట్టుకున్న ఒక స్త్రీ ఈరోజు పగతీర్చుకోవడానికి మిమ్మల్ని మానసికంగా హాని చేస్తారు అది కుడా విఫలం అయితే శారీరికంగా హాని చేస్తారు జాగ్రత్తగా ఉండండి ",
      },
      {
        title: "ఒక స్త్రీ తో గొడవలు",
        thumbnail: "ఈరోజు ఒక స్త్రీ తో గొడవలు జరుగుతాయి",
        matter: "ఈరోజు మీకు ఒక స్త్రీ తో గొడవలు జరుగుతాయి మీరు ఎంత ఒద్దు అనుకున్న గొడవలు తప్పవు దీనిని ద్రుష్టిలో పెట్టుకొని మీరు గొడవని ఆపలేరు అయితే మీరు కోపంలో మీరు చెప్పే మాటలపై మీరు తరువాత ఆందోళన పాడుతారు జాగ్రత్త key",
      },
      {
        title: "స్త్రీ తో మనసులోని మాట",
        thumbnail: "ఒక స్త్రీ తో మనసులోని విషయం మాట్లాడతారు",
        matter: "ఈరోజు మీరు ఒక స్త్రీ తో మీ మనసులోని మాట మాట్లాడుతారు మీరు వారిని ఇష్టపడుతున్నారని వారితో చెపుతారు ఈవిషయం చెప్పినతరువాత మీకు ఒక షాకింగ్ వార్త అందుతుంది జాలిగా గడుపుతారు",
      },
      {
        title: "జీవితంలో ఒక స్త్రీ ఎంట్రీ",
        thumbnail: "మీ జీవితంలో ఒక స్త్రీ ఎంట్రీ .. అన్ని శుభవర్తలే",
        matter: "ఈరోజు మీ జీవితంలో ఒక కొత్త స్త్రీ వస్తుంది తను చాల బుద్ధిమంతురాలు మరియు అందానికి యువరాణి మీకు ఆ స్త్రీ చాల నచ్చుతుంది మరియు మీరు ఆ స్త్రీ తో స్నేహం కూడా చెయ్యడానికి ప్రయత్నాలు చేస్తారు",
      },
      {
        title: "ఒక స్త్రీ వల్ల మోసపోతారు",
        thumbnail: "ఒక స్త్రీ ని గుడ్డిగా నమ్మవద్దు! మీరు మోసపోవచ్చు",
        matter: "మీరు ప్రాణంగా ప్రేమించిన స్త్రీ ఈరోజు మిమ్మల్ని విదిచిపోవడంతో మీరు తట్టుకోలేరు మీరు డిప్రెషన్ లో కూడా పోవచ్చు కాని అదే సమయంలో మీ తల్లితండ్రులవల్ల మీకు జీవితం అంటే ఒక అర్ధం ఒస్తుంది వారి కోసమే బ్రతుకుతారు",
      },
      
      {
        title: "స్త్రీ వల్ల బంగారు శుభవార్త",
        thumbnail: "ఒక స్త్రీ వల్ల బంగారు శుభవార్తలు + ఇలా చేయకండి",
        matter: "ఈరోజు మీ జీవితానికి అర్ధమోచ్చే ఒక పెద్ద బంగారు శుభావర్తని మీ జీవిత భాగస్వామి మీకు అందిస్తారు ఆ శుభవార్త మీ జీవితాన్నే మార్చేస్తుంది కాబట్టి ఈరోజు మీరు ఆనందంలో మీరు ఎం చేయ్యలనుకున్తున్నారో ఆ పనులన్నీ చేసేస్తారు",
      },
    
      {
        title: "ప్రియమైన స్త్రీ ని కలుస్తారు",
        thumbnail: "ఒక ప్రియమైన స్త్రీ ని కలుస్తారు + ఆకస్మిక ధనాలభం",
        matter: "ఈరోజు మీరు మీకు ఏంటో ప్రియమైన స్త్రీ ని కలుస్తారు కలిసి సరదాగా మాట్లాడుకుంటారు ఇంకా ఈరోజు చివరిలో మీకు ఆకస్మిక ధనలాభం కలుగడంతో మీ ఆనందానికి హద్దులు ఉండవు ఆనందంలో పార్టి కూడా చేసుకుంటారు",
      },
      {
        title: "2 పెద్ద శుభవార్తలు",
        thumbnail: "2 పెద్ద శుభవార్తలు + ఈవిషయంలో జాగ్రత్త!",
        matter: "ఈరోజు మీరు ఎప్పటినుండో ఎదురుచూస్తున్న శుభవార్త వింటారు మరియు మీరు అనుకోకుండా ఒక స్త్రీ వల్ల ఇంకొక శుభవార్తలు అందుకుంటారు సంతోషంలో మీరు మద్యం సేవించవచ్చు ఇలా చెయ్యకండి జాగ్రత్త",
      },
      {
        title: "ఒక స్త్రీ వల్ల గొడవలు",
        thumbnail: "ఒక స్త్రీ వల్ల గొడవలు + ఆకస్మిక సంఘటనలు",
        matter: "ఈరోజు మీరు మీకు నచ్చిన ఒక స్త్రీ కోసం వేరే వాళ్లతో గొడవలలో పలుగోనతారు కాని ఆకస్మికంగా ఆ గొడవ చాల పెద్దగా కావడంతో మీరు గొడవని ముగించడానికి ప్రయత్స్తారు కాని మీరు జాగ్రత్తగా ఉండాలి దెబ్బలు కూడా తగలోచ్చు",
      },
      {
        title: "స్త్రీ వల్ల ప్రమాదాలు",
        thumbnail: "ఒక స్త్రీ వల్ల ప్రమాదాలు ముంచుకోస్తున్నాయి జాగ్రత్త",
        matter: "ఈరోజు మీకు ఒక స్త్రీ వల్ల ప్రమాదాలు మున్చుకోస్తునాయి కాబట్టి మీరు అప్ప్రమత్తంగా ఉండండి వాహనాలు నడిపెటప్పుడు ఒక స్త్రీ ని ఆకర్షించడానికి మీరు మీ వాహనాన్ని అతివేగంలో నడుపుతారు దీనివల్ల ప్రమాదం కూడా జరుగవచ్చు",
      },
      {
        title: "ఒక స్త్రీ నష్టం చేస్తారు",
        thumbnail: "ఒక స్త్రీ ఈవిధంగా నష్టం చేస్తున్నారు + ఇలా చెయ్యండి",
        matter: "మీరు మిమ్మల్ని ప్రేమిస్తున్నారు అనుకుంటున్నా స్త్రీ మీదగ్గర మీ డబ్బుకోసమే ఉన్నారు . ఈరోజు బయట ఆ స్త్రీ మిమ్మల్ని షాపింగ్ కు తెసుకేల్లి మీ లక్షలు నష్టం చేస్తారు జాగ్రత్త",
      },
      {
        title: "మంచి శుభవార్తలు ఉన్నాయి",
        thumbnail: "మంచి శుభవార్తలు + ఈవిషయాల్లో జాగ్రత్త",
        matter: "ఈరోజు మీ జీవితానికి అర్ధమోచ్చే ఒక పెద్ద బంగారు శుభావర్తని మీ జీవిత భాగస్వామి మీకు అందిస్తారు ఆ శుభవార్త మీ జీవితాన్నే మార్చేస్తుంది  సంతోషంలో మీరు మద్యం సేవించవచ్చు ఇలా చెయ్యకండి జాగ్రత్త",
      },
      {
        title: "ఒక స్త్రీ తో గొడవ",
        thumbnail: "ఈరోజు ఒక స్త్రీ తో గొడవ జరుగుతుంది జాగ్రత్త",
        matter: "ఈరోజు మీకు ఒక స్త్రీ తో ఆస్తి మరియు దనం విషయంలో గొడవలు జరుగుతాయి కాని గొడవలో మీరు నూరు జారి చెప్పకుదని మాటలు చెపుతారు గొడవ తరువాత మీరు ఎందుకుచేప్పరని బాధపడి ఆ స్త్రీ తో క్షమాపణ అడుగుతారు దీని బదులు మీరు ముందే నూరు అదుపులో పెట్టుకోండి",
      },
      {
        title: "సేత్రువులు ఇలా చేస్తారు",
        thumbnail: "రహస్య సెత్రువులు ఈవిధంగా చేస్తున్నారు జాగ్రత్త",
        matter: "ఈరోజు రహస్య సేత్రువులు మీకు తెలియకుండానె మిమ్మల్ని ఆర్ధికంగా మరియు మీ కుతుమ్బంన్ని హాని చెయ్యడానికి చెయ్యని ప్రయత్నలుండవు కాబట్టి మీరు ముందే జాగ్రత్తగా ఉండండి ఎవ్వరిని గుడ్డిగా నమ్మవద్దు మోసపోవచ్చు",
      },
      {
        title: "అమ్మాయి కాళ్ళ వద్దకు",
        thumbnail: "అందమైన అమ్మాయి మీ కాళ్ళ వద్దకు వస్తుంది",
        matter: "ఈరోజు మీ స్వప్న సుందరి మీ ఉన్నత చదువులు మరియు వ్యాపారంలో అభివృద్ధి చూసి ఒచ్చి మీ కాళ్ళ వద్దకు పడుతది . ఈరోజు మీరు పడ్డ కష్టం వ్యర్ధం కాలేదని మీరు తెలుసుకుంటారు వ్యాపారం మరియు చదువులూ ఇంకా ముందుకు సాగాలని మీకు మోటివేషన్ దొరుకుతుంది",
      },
      {
        title: "స్త్రీ వల్ల పెద్ద శుభవార్త",
        thumbnail: "ఒక స్త్రీ వల్ల పెద్ద శుభవార్త + ఆకస్మిక ధనాలభం",
        matter: "ఈరోజు మీకు ఒక స్త్రీ వల్ల పెద్ద శుభవార్త అందుతుంది మరియు వార్త వినంగానే మీ మడ్ ఒక్కసారిగా మంచిగా మారడంతో మీరు మీ పార్టనర్ తో కలిసి సినిమాకు పోతారు మరియు రాత్రి సమయంలో మీకు ధనలాభం కలుగుతుంది ",
      },
      {
        title: "స్త్రీ తో సరదాగా ఉలా",
        thumbnail: "ఒక స్త్రీ తో కలిసి సరదాగా చేసే పనులు తెలిస్తే షాక్ !",
        matter: "ఈరోజు మీరు టైం పాస్ చెయ్యడానికి ఒక స్త్రీ తో కలిసి ఒక మంచి రెస్టారెంట్ కు వెళ్లి భూజనం చెయ్యడం ఇష్టపడుతారు మరియు సినిమాకు పోయి జాలిగా గడుపుతారు ఈరోజు మీకు ఎప్పటికి గుర్తుండిపోయేలా గడుపుతారు",
      },
      {
        title: "సెత్రువులు ఇలా చేస్తారు",
        thumbnail: "పెద్ద శుభవార్తలు + సెత్రువులు ఇలా చేస్తారు",
        matter: "ఈరోజు మీకు చాల పెద్ద శుభవార్తలు అందుతాయి దీనితో మీరు చాల సంతోషంగా ఉంటారు మీ సంతోషం మీ సేత్రువులు చూడలేరు వారు మీకు ఎదో ఒక హాని చెయ్యాలని చూస్తారు కాని రోజు ఆకరికి ఏమి చెయ్యలేక అలిసి వెళ్ళిపోతారు",
      },
      {
        title: "ప్రాణగండం ఉంది జాగ్రత్త",
        thumbnail: "వీరితో గొడవలు + ప్రాణగండం ఉంది జాగ్రత్త",
        matter: "ఈరోజు మీకు మీ సేత్రువులతో గొడవలు జరుగుతాయి మరియు మీరు ఈరోజు మీ కోపాన్ని అడుపులూ ఉంచాలి లేదంటే మీకు గొడవలో తీవ్ర గాయలవల్ల ప్రాణగండం ఉంది దేవుడ్ని స్మరించండి గొడవ దేనికి కూడా సమాధానం కాదు అని మీరు తెలుసుకోవాలి",
      },
      {
        title: "స్త్రీ వల్ల పండగలు",
        thumbnail: "ఒక స్త్రీ వల్ల ఈరోజు పండుగలా ఉంటుంది",
        matter: "ఈరోజు ఒక స్త్రీ వల్ల వేడుకలా ఉంటుంది మీకు నచ్చిన స్త్రీ తో ఈరోజు మీరు బయటకు పోతారు మరియు వారితో సినిమాలకు పోయి జాలిగా గడుపుతారు ఆ స్త్రీ వల్ల రోజు చివర్లో ధనాలభం కూడా కావొచ్చు శుభం కలుగుతుంది ",
      },
      {
        title: "స్త్రీ మోసం చేస్తుంది",
        thumbnail: "ఒక స్త్రీ ఇలా మోసం చేస్తది + ఇలా చెయ్యండి",
        matter: "ఈరోజు మీరు గుడ్డిగా నమ్మిన ఒక స్త్రీ మిమ్మల్ని మోసం చేస్తది దేనిని మీరు తట్టుకోలేరు కోపంలూ మీరు డిప్రెషన్ లో కూడా పోవచ్చు కాని మీ తల్లి తండ్రులకు ఈ విషయం తెలిసి వారు మిమ్మల్ని దీని నుండి బయటకు తెస్తారు",
      },
      {
        title: "స్త్రీ మీ కాళ్ళ వద్దకు",
        thumbnail: "ఒద్దు అన్న స్త్రీ మీ కాళ్ళ వద్దకు వస్తుంది",
        matter: "మీ దగ్గర డబ్బులు లేవు మీరు బిచ్చగాల్లు అని మిమ్మల్ని వదిలి పాయిన ఆ స్త్రీ ఈరోజు మీ అభివృద్ధి మరియు మీ ఉన్నత చదువులు చూసి మల్లి మీ కాళ్ళ వద్దకు ఒస్తుంది మల్లి తనను దగ్గరుకు తెసుకున్తారా? కామెంట్ లో చెప్పండి  ",
      },
    
      {
        title: "పెద్ద శుభవార్తలు ఉన్నాయి",
        thumbnail: "పెద్ద శుభవార్తలు ఉన్నాయి + స్త్రీ వల్ల పండుగ",
        matter: "ఈరోజు మీకోసం పెద్ద శుభవార్తలు ఎదురుచుస్తునాయి మీరు పడ్డ కష్టానికి ప్రతిఫలం ఈరోజు మీకు శుభవార్త అందుతుంది మరియు మీ అభివృద్ది ని చూసి ",
      },
      {
        title: "స్త్రీ వల్ల ధనలాభం",
        thumbnail: "అందమైన స్త్రీ వల్ల ధనలాభం + పెద్ద శుభవార్త",
        matter: "ఈరోజు ఒక అందమైన స్త్రీ వల్ల ధనాలభం కలుగుతుంది ఇంకా రోజు మధ్యలో మీకు పెద్ద శుభవార్త అందుతుంది మీకు ఆ శుభవార్త అందుతదని మీరు కలలో కూడా ఉహించి ఉండరు కాని మీ అదృష్టం వల్ల మీకు ఆ శుభవార్తః అందుతుంది ",
      },
      {
        title: "కుటుంబంలో వీరికి ప్రాణగండం",
        thumbnail: "మీ కుటుంబంలో వీరికి ఇలా ప్రాణగండం జాగ్రత్త",
        matter: "ఈరోజు మీ కుటుంబంలో వ్రుదుల అనారోగ్యం వల్ల వారికి ప్రాణగండం ఉంది కాబట్టి పుష్టిక ఆహారాన్ని సేవించాలి మరియు దేవుడ్ని స్మరించాలి మీరు చేసిన పుణ్యకార్యాల వల్ల దేవుడు మీ గండాన్ని తొలగిస్తారు శుభం జరుగుతుంది",
      },
      {
        title: "స్త్రీ వల్ల శుభవార్తలు",
        thumbnail: "మీరు ఊహించని స్త్రీ శుభవార్తలు చెప్తారు ",
        matter: "ఈరోజు మీరు కలలో కూడా ఉహించని ఒక అందమైన స్త్రీ నోటితో మీరు శుభావర్తలు వింటారు ఈవార్త వినగానే మీ మనస్సు గాలిలో తేలినట్లు అయిపోతుంది మీరు మీ బంధువులందరితో ఈ వార్తని పంచుకుంటారు జాలిగా గడుపుతారు",
      },
      {
        title: "స్త్రీ మీ కాళ్ళ వద్దకు",
        thumbnail: "మీరు కావాలనుకున్న స్త్రీ మీ కాళ్ళ వద్దకు",
        matter: "ఈరోజు మీరు ఎప్పటినున్డూ కోరుకుంటున్న స్త్రీ మీ అదృష్టం కొద్ది మీ దగ్గర సహాయం కోరుతూ వస్తుంది మీరు కాని తనకు సహాయం చేస్తే మాత్రం మీ ఇద్దరి మధ్య బంధం ఇంకా గట్టిపడుతుంది కాని ఆ సహాయం చెయ్యడానికి కొద్దిగా శ్రీమ పడాల్సి ఉంటది",
      },
    
      {
        title: "పెద్ద శుభవార్తలు ఉన్నాయి",
        thumbnail: "పెద్ద శుభవార్తలు + ఒక స్త్రీ ఇలా చేస్తుంది",
        matter: "ఈరోజు మీకు మీరు ఎన్నో సంవచరాల నుండి ఎదురుచూస్తున్న శుభవార్త ఒకటి అందడం వల్ల మీరు సంతోషంగా ఎగిరి గంతులేస్తారు మరియు మీ మిత్రులకి పార్టి ఇస్తారు మొత్తానికి ఈరోజు జాలిగా గడుపుతారు కాని ఆ శుభవార్త మీ జీవితాన్ని మార్చేస్తుంది",
      },
      {
        title: "ఒక స్త్రీ మోసం చేస్తారు",
        thumbnail: "ఒక స్త్రీ మిమ్మల్ని ఈవిధంగా మోసం చేస్తున్నారు",
        matter: "ఈరోజు మీరు కళ్ళు ముసి నమ్మిన ఒక స్త్రీ మిమ్మల్ని వెంనేపోటు పొడుస్తారు మిమ్మల్ని కాదని మోసం చేస్తారు దీనితో మీరు చాల బాధ పాడుతారు కాని మీ తల్లితండ్రులు మీకు సపోర్టుగా ఉంటారు దీనివల్ల వాళ్ళని మించిన వారు లేరని మీకు తెలుస్తుంది",
      },
      {
        title: "స్త్రీ తో మనసులోని మాట",
        thumbnail: "నచ్చిన స్త్రీ తో మీ మనసులోని మాట చెపుతారు",
        matter: "మీరు ప్రతిరోజూ కలలో చూసే మీకు నచ్చిన ఒక స్త్రీ తో ఈరోజు మీరు మీ మనస్సులోని మాట చెపుదామని మీరు ఫిక్స్ అవుతారు ఇలా చెయ్యడానికి ఇదే సరైన సమయం శుభవార్తలు కూడా అందవచ్చు ఏది జరిగినా మన మంచికే అని గుర్తుపెట్టుకోండి ",
      },
      {
        title: "ఎవరంలో ఇలా జరిగిద్ది",
        thumbnail: "ఈవారంలో ఏం జరుగుతుందో తెలిస్తే షాక్",
        matter: "ఈవారంలో మీ వృత్తికి మీరే రాజు మీరే మంత్రి బిజినెస్ లో మిమ్మల్ని మించినోల్లు ఎవ్వరు ఉండరు కొత్త స్త్రీ తో పరిచయాలు జరుగుతాయి మరియు ధనాలభం కలుగుతుంది",
      },
      {
        title: "వీరే మీ సెత్రువులు",
        thumbnail: "వీరే మీ సెత్రువులు + ఒక స్త్రీ తో జాగ్రత్త",
        matter: "ఈరోజు మీరు మీ సేత్రువుల పేర్లు తెలుసుకుంటారు మరియు ఒక స్త్రీ మీ రహస్య సేత్రువు మీకు ఇప్పటివరుకు కలిగిన హాని మొత్తం మీ సేత్రువులనుంచే అని ఈరోజు మీకు తెలిసి వస్తుంది అప్ప్రమత్తంగా ఉండండి",
      },
      {
        title: "స్త్రీ కాళ్ళ వద్దకు",
        thumbnail: "మీరు ఒద్దు అని విడిచిపోయిన స్త్రీ కాళ్ళ వద్దకు",
        matter: "మీరు డబ్బు లేనివారు అని మిల్లల్ని చులకనగా చుసిన ఒక స్త్రీ ఈరోజు మీ వ్యాపారం మరియు అభివృద్ధి చూసి మల్లి మీ కాళ్ళ వద్దకు వస్తుంది కాని వచ్చిన తరువాత మీరు మీ దృష్టి ని అటు మల్లిన్చాకండి మీ వ్యాపారాన్ని ఇంకా పెంచుతూనే ఉండాలి",
      },
      {
        title: "ఒక స్త్రీ వల్ల శుభవార్తలు",
        thumbnail: "ఒక స్త్రీ వల్ల అతిపెద్ద శుభవార్తలు తెలిస్తే షాక్",
        matter: "ఈరోజు మీ జీవితంలూ ఎప్పుడు అందని శుభవార్తలు ఈరోజు మీకు ఒక స్త్రీ వల్ల అందుతాయి వాటిని విని మీరు ఎగిరి గంతులేస్తారు మీ ఆనందానికి హద్దులు ఉండవు ఆ శుభవార్తలు మీ జీవితాన్నే మార్చేస్తాయి రెడీగా ఉండండి ",
      },
      {
        title: "ఒక స్త్రీ పగబట్టి ఇలా",
        thumbnail: "ఒక స్త్రీ పగబట్టి చేసే ప్రయత్నాలు చుస్తే చాక్",
        matter: "ఈరోజు మీపైన ఎంతోకాలంగా కక్షగుడి మీ ప్రానసేత్రువు ఒక స్త్రీ మిమ్మల్ని అన్ని విధాలుగా హాని చెయ్యడానికి ప్రయత్నాలు చేస్తారు కాని మీరు చాలా ధైర్యవంతులు కావడంతో మీరు వాటన్నిటినుంచి సులభంగా తప్పించుకుంటారు ",
      },
      {
        title: "పెద్ద శుభవార్తలు ఉన్నాయి",
        thumbnail: "పెద్ద శుభవార్తలు ఉన్నాయి వీరు నక్కతోకతొక్కారు",
        matter: "ఈరోజు మీరునక్కతోకతొక్కారు మీకు ఈరోజు పెద్ద శుభవార్తలు అందుతాయి వాటిని విని మీ మనసు గాలిలో తేలడం మాత్రం ఖాయం ఈరోజు మీకు శుభవార్తలు విన్న తరువాత ఆనదందానికి హద్దులు ఉండవు ఎగిరి గంతులు వేస్తారు",
      },
      {
        title: "ఒక స్త్రీ వల్ల ప్రాణగండం",
        thumbnail: "ఒక స్త్రీ వల్ల ప్రాణగండం + ఈవిషయాల్లో జాగ్రత్త",
        matter: "ఈరోజు మీకు ఒక స్త్రీ వల్ల ప్రాణగండం ఉంది ఎలా అంటే ఈరోజు మీరు ఒక స్త్రీ ని ఆకట్టుకోవడానికి వాహనాన్ని అతివేగంతో నడుపడంతో మీకు ఆపదలు జరిగే అవకాశం ఉంది జాగ్రత్తగా ఉండండి మరియు వాహనాన్ని ఇంటిదగ్గర మీకోసం ఎదురుచూస్తున్నా వాళ్ళ కోసం నెమ్మదిగా తోలండి",
      },
      {
        title: "స్త్రీ తో ఇలా చేస్తారు",
        thumbnail: "శుభవార్త తెలిస్తే ఎగిరి గంటెస్తారు ఒక స్త్రీ తో",
        matter: "ఈరోజు మీ రోజువారి బ్రతుకులూ ఒక్కసారిగా పెద్ద శుభవార్త ఒకటి అందడంవల్ల మీరు మీ ప్రేయసితో కలిసి ఎంజాయ్ చెయ్యడానికి బయటకు సినిమాలు అని షికార్లకు పోతారు ఈరోజు మీ జీవితంలో ఎప్పటికి గుర్తుండిపోతుంది",
      },
      {
        title: "స్త్రే తో సరదాగా ఉలా",
        thumbnail: "అందమైన స్త్రీ తో సరదా కోసం ఇలా చేస్తారు ",
        matter: "ఈరోజు మీకు చాల అదృష్టమైన రోజు మీరు కలలో కూడా ఉహించని అందమైన స్త్రీ తో ఈరోజు మీరు సరదాగా షికారుకు వెళ్లి జాలిగా గడుపుతారు మరియు మీ ఇద్దరి బంధం దీనివల్ల ఇంకా ద్రుదపడుతుంది",
      },
      {
        title: "ఒక స్త్రీ కాళ్ళ దగ్గర",
        thumbnail: "శుభవార్త ! ఒక స్త్రీ ఈరోజు మీ కాళ్ళ దగ్గర",
        matter: "ఈరోజు శుభవార్త అందుతుంది మీరు పేదవాళ్ళు అని మిమ్మల్ని వదిలిపొఇన ఒక స్త్రీ ఈరోజు మీ అభివృద్ధి మరియు దానం చూసి మల్లి మీ కాళ్ళ దగ్గర రావడం ఖాయం",
      },
      {
        title: "స్త్రీ వల్ల గుండెలుపగిలే వార్త",
        thumbnail: "ఒక స్త్రీ వల్ల గుండెలు పగిలే వార్తలు జాగ్రత్త",
        matter: "ఈరోజు మీరు ఎంతగా నమ్మిన స్త్రీ తరుపునుంచి మీకు గుండెలు పగిలే వార్తలు వింటారు ఆ వార్తలు ఏంటంటే వారి ఆరోగ్యం అస్సలు బాగాలేదు మరియు ఆసుపత్రిలూ వారికి చాల ఖర్చులు ఉన్నాయి ఇది విన్న తరువాత మీరు వారిని ఆర్ధికంగా సహాయం చేస్తారు",
      },
      {
        title: "ఒక స్త్రీ మిమ్మల్ని హాని",
        thumbnail: "ఒక స్త్రీ ఇలా హాని చేస్తుంది ఇప్పుడే తెలుసుకోండి",
        matter: "ఈరోజు మీకు ఒక స్త్రీ పగబట్టి శారీరికంగా హాని చెయ్యడానికి చెయ్యని ప్రయత్నాలు ఉండవు కావున మీరు బయటకు వెళ్ళేటప్పుడు దేవుడ్ని స్మరించి జాగ్రత్తగా వెళ్ళండి మీకు ఎలాంటి హాని కలగదు",
      },
      {
        title: "మీ మీద స్త్రీ దృష్టి",
        thumbnail: "మీ మీద ఒక స్త్రీ చేసుదృష్టి జాగ్రత్త",
        matter: "మీ మీద ఒక స్త్రీ చేడుద్రుష్టి ఈలోకంలో చేడుద్రుష్టి అనేది ఒక రాజుని కూడా బిచ్చగాడు లా చెయ్యొచ్చు మీ సంపద మీద ఒక స్త్రీ ఏడుస్తుంది ఇది మీరు జాగ్రత్తగా ఉండాల్సిన సమయం అప్ప్రమత్తంగా ఉండండి",
      },
      {
        title: "ఒక స్త్రీ వల్ల శుభవార్తలు",
        thumbnail: "అన్ని శుభవార్తలే మీ జీవితంలో ఒక స్త్రీ ఎంట్రీ",
        matter: "ఎప్పటినుండో బ్రేక్ లో ఉన్న మీ జీవితం ఒక స్త్రీ రావడంతో దూసుకుపోతుంది , అవును ఈరోజు మీకు అన్ని శుభవార్తలు అందుతాయి మరియు మీ జీవితంలూ ఒక స్త్రీ ఎంట్రీ ఇస్తుంది ",
      },
      {
        title: "స్త్రీ వల్ల పెద్ద శుభవార్తలు",
        thumbnail: "ఒక స్త్రీ వల్ల 3 పెద్ద శుభవార్తలు + ఇలా చెయ్యకండి",
        matter: "ఈరోజు మీరు ఒక స్త్రీ వల్ల మూడు పెద్ద శుభావర్హలు అందుకుంటారు మరియు శుభవార్తలు అందుకున్న వెంటనే మీరు ఆ విషయాలను మీ తల్లి తండ్రులకు ముందుగా చెపుతారు ఎందుకంటే ఈలోకంలో వారిని మించి మీకు ఎవ్వరు లేరు",
      },
    ];
    const today = new Date();
    let tomorrow = new Date(today);
    tomorrow.setDate(tomorrow.getDate() + 2);
  
    let dayOfWeekIndex = tomorrow.getDay();
    let dayOfWeekArray = [
      "sunday",
      "monday",
      "tuesday",
      "wednesday",
      "thursday",
      "friday",
      "saturday"
    ];
  
    
  
    let monthIndex = tomorrow.getMonth();
    let monthArray = [
      "january",
      "february",
      "march",
      "april",
      "may",
      "june",
      "july",
      "august",
      "september",
      "october",
      "november",
      "december",
    ];
  let count = Number(localStorage.getItem("count") )|| 0;
    let dayname = dayOfWeekArray[dayOfWeekIndex];
    let monthname = monthArray[monthIndex];
    let datenumber = tomorrow.getDate().toString().padStart(2, "0");
  
    const textInput = document.getElementById("text-input");
    const textInput2 = document.getElementById("text-input2");
    const fontSelect = document.getElementById("text-input");
    const colorSelect = document.getElementById("color-select");
    const sizeRange1 = document.getElementById("size-range-1");
    const sizeRange2 = document.getElementById("size-range-2");
    const positionRangeX = document.getElementById("position-range-x");
    const previewContainer = document.getElementById("preview-container");
    const previewCanvas = document.getElementById("preview-canvas");
    const downloadButton = document.getElementById("download-button");
  textInput2.value = datenumber;
  
  const DailyOnceSet = function(){
  
    let currentDate = new Date();
    let currentDay = currentDate.getDate();
      localStorage.setItem('thumbdate', currentDay);
    }
    const Shiftdown = function () {
      let today = new Date().getDate();
      let yesterday = localStorage.getItem('thumbdate') || "";
      if(today!=yesterday){
        if(Number(localStorage.getItem("count"))+1>daily.length){
          localStorage.setItem("count",0);
        }
        else{
          
        localStorage.setItem("count",++count);
        localStorage.setItem("var4",daily[count].thumbnail);
        localStorage.setItem("var3", daily[count-1].thumbnail)
        localStorage.setItem("var2", daily[count-2].thumbnail)
        localStorage.setItem("var1", daily[count-3].thumbnail)



        }
      }  
    }
  
  Shiftdown();
  DailyOnceSet();
  
  let var4 = localStorage.getItem("var4");
  let var3;
  let var2;
  let var1;
  if (count ==0){
    localStorage.setItem("var3", daily[67].thumbnail)
    var3 = localStorage.getItem("var3");
    localStorage.setItem("var2", daily[66].thumbnail)
    var2 = localStorage.getItem("var2");
    localStorage.setItem("var1", daily[65].thumbnail)
    var1 = localStorage.getItem("var1");
  }
  else if(count ==1){
    localStorage.setItem("var3", daily[0].thumbnail)
    var3 = localStorage.getItem("var3");
    localStorage.setItem("var2", daily[67].thumbnail)
    var2 = localStorage.getItem("var2");
    localStorage.setItem("var1", daily[66].thumbnail)
    var1 = localStorage.getItem("var1");
  }
  else if(count ==2){
    localStorage.setItem("var3", daily[1].thumbnail)
    var3 = localStorage.getItem("var3");
    localStorage.setItem("var2", daily[0].thumbnail)
    var2 = localStorage.getItem("var2");
    localStorage.setItem("var1", daily[67].thumbnail)
    var1 = localStorage.getItem("var1");
  }
  else{
    var3 = localStorage.getItem("var3");
    var2 = localStorage.getItem("var2");
    var1 = localStorage.getItem("var1");
  }
document.getElementById("var1").value = var1;
document.getElementById("var2").value = var2;
document.getElementById("var3").value = var3;
document.getElementById("var4").value = var4;
  
    let currentImage = null;
    let previewImage = null;
    let fontSize1;
    // Load default image
    const defaultImage = new Image();
    //!
  
    textInput.value = var4;
    defaultImage.src  = "rasiphalaluintelugumidhuna.jpg" 
    
  
   
    
    
    
    
    defaultImage.onload = () => {
      currentImage = defaultImage;
      updatePreview();
    };
  
    textInput.addEventListener("input", () => {
      updatePreview();
    });
  
    textInput2.addEventListener("input", () => {
      updatePreview();
    });
  
    fontSelect.addEventListener("input", () => {
      updatePreview();
    });
  
    colorSelect.addEventListener("input", () => {
      updatePreview();
    });
  
    sizeRange1.addEventListener("input", () => {
      updatePreview();
    });
  
    sizeRange2.addEventListener("input", () => {
      updatePreview();
    });
  
    positionRangeX.addEventListener("input", () => {
      updatePreview();
    });
  
    function updatePreview() {
      if (!currentImage) return;
  
      const text = textInput.value;
      const text2 = textInput2.value;
      const color = "white"; // Set text2 color to white
      const canvas = document.createElement("canvas");
      const ctx = canvas.getContext("2d");
  
      const image = currentImage;
  
      canvas.width = image.width;
      canvas.height = image.height;
  
      ctx.drawImage(image, 0, 0);
  
      const positionX1 = 10; // Fixed X-coordinate for text1 (leftmost position)
      const positionY1 = 1730; // Fixed Y-coordinate for text1 (bottom - 600 pixels up)
  
      fontSize1 = 250; // Initial font size for text1
      ctx.font = `${fontSize1}px 'Anek Telugu'`;
      let textWidth = ctx.measureText(text).width;
  
      // Decrease font size until the text fits within the canvas width
      while (textWidth > canvas.width - 1) {
        fontSize1 -= 1;
        ctx.font = `${fontSize1}px 'Anek Telugu'`;
        textWidth = ctx.measureText(text).width;
      }
  
      let stretchRatio1;
    // Calculate vertical stretch factor for text1
    if (document.querySelector("#text-input").value.length > 48) {
      const originalHeight1 = fontSize1;
      const targetHeight1 = originalHeight1 + 100; // Vertical stretch factor, adjust as needed
      stretchRatio1 = targetHeight1 / originalHeight1;
    } else if (document.querySelector("#text-input").value.length < 30) {
      const originalHeight1 = fontSize1;
      const targetHeight1 = originalHeight1+15; // Vertical stretch factor, adjust as needed
      stretchRatio1 = targetHeight1 / originalHeight1;
    } else if (document.querySelector("#text-input").value.length > 40) {
      const originalHeight1 = fontSize1;
      const targetHeight1 = originalHeight1 + 40; // Vertical stretch factor, adjust as needed
      stretchRatio1 = targetHeight1 / originalHeight1;
    } else {
      const originalHeight1 = fontSize1;
      const targetHeight1 = originalHeight1 + 30; // Vertical stretch factor, adjust as needed
      stretchRatio1 = targetHeight1 / originalHeight1;
    }
    ctx.strokeStyle = "black";
ctx.lineWidth = 10;
ctx.lineJoin = "round"; // Use round corners for the stroke
    ctx.save();
    ctx.translate(positionX1, positionY1);
    ctx.scale(1, stretchRatio1);
    ctx.fillStyle = color;
ctx.strokeText(text, 0, 0);
    ctx.fillText(text, 0, 0);
    ctx.restore();
      const fixedpos = 2400;
      const fixedPositionY = 830; // Fixed position for text2
      let size2 = 620; // Get the value of sizeRange2
      
      // Calculate the desired height increase factor
      const heightIncreaseFactor = 40; // You can adjust this value as needed
      
      // Calculate the transformation matrix for vertical scaling
      const scaleX = 1;
      const scaleY = 1 + heightIncreaseFactor / 100;
      
      ctx.save(); // Save the current state of the canvas
      
      // Apply the vertical scaling transformation
      ctx.scale(scaleX, scaleY);
      
      ctx.font = `${size2}px 'Archivo Black', sans-serif`;
      ctx.fillStyle = "white"; // Set text2 color to white
      
      // Add border to text2
      ctx.lineWidth = 40;
      ctx.strokeText(text2, fixedpos, fixedPositionY);
      ctx.fillText(text2, fixedpos, fixedPositionY);
      
      ctx.restore(); // Restore the saved state of the canvas
      
      let month = monthname;
      let day = dayname;
      
      // Add a new element (PNG) in the middle of the canvas
      let middleX;
      let middleY;
      const pngElement = new Image();
      pngElement.src = `${month}.png`;
      
      if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("simha")){
        middleX =1700;
        middleY =900;
      pngElement.onload = () => {
        const pngWidth = 4000; // Width of the PNG element
        const pngHeight = 1800; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);
      }
      }
      else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("simha")){
        middleX =1800;
        middleY =830;
      pngElement.onload = () => {
        const pngWidth = 3500; // Width of the PNG element
        const pngHeight = 1800; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
      }
      else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("simha")){
        middleX =2050;
        middleY =830;
      pngElement.onload = () => {
        const pngWidth = 3500; // Width of the PNG element
        const pngHeight = 1850; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
      }
      else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("simha")){
        middleX =2050;
        middleY =870;
      pngElement.onload = () => {
        const pngWidth = 3500; // Width of the PNG element
        const pngHeight = 2000; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
      }
      else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("simha")){
        middleX =2050;
        middleY =830;
      pngElement.onload = () => {
        const pngWidth = 4150; // Width of the PNG element
        const pngHeight = 2000; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
      }
      else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("simha")){
        middleX =2050;
        middleY =830;
      pngElement.onload = () => {
        const pngWidth = 4150; // Width of the PNG element
        const pngHeight = 2000; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
      }
  
      else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("simha")){
        middleX =1890;
        middleY =980;
      pngElement.onload = () => {
        const pngWidth = 2600; // Width of the PNG element
        const pngHeight = 2500; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
      }
      else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("simha")){
        middleX =2090;
        middleY =900;
      pngElement.onload = () => {
        const pngWidth = 3300; // Width of the PNG element
        const pngHeight = 3000; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
      }
  
  
      else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("simha")){
        middleX =1900;
        middleY =900;
      pngElement.onload = () => {
        const pngWidth = 2500; // Width of the PNG element
        const pngHeight = 2500; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
      }
      else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("simha")){
        middleX =1950;
        middleY =820;
      pngElement.onload = () => {
        const pngWidth = 2500; // Width of the PNG element
        const pngHeight = 2200; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
      }
      else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("simha")){
        middleX =1900;
        middleY =900;
      pngElement.onload = () => {
        const pngWidth = 3000; // Width of the PNG element
        const pngHeight =2500; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
      }
  
      else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("simha")){
        middleX =1850;
        middleY =830;
      pngElement.onload = () => {
        const pngWidth = 2800; // Width of the PNG element
        const pngHeight =2000; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
      }
  
      if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("vruschika")){
        middleX =1800;
        middleY =930;
      pngElement.onload = () => {
        const pngWidth = 3300; // Width of the PNG element
        const pngHeight = 1800; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);
      }
      }
  
      else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("vruschika")){
        middleX =1900;
        middleY =900;
      pngElement.onload = () => {
        const pngWidth = 2800; // Width of the PNG element
        const pngHeight =1650; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
      }
      else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("vruschika")){
        middleX =2050;
        middleY =880;
      pngElement.onload = () => {
        const pngWidth = 3500; // Width of the PNG element
        const pngHeight = 1700; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
      }
      else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("vruschika")){
        middleX =2050;
        middleY =930;
      pngElement.onload = () => {
        const pngWidth = 2900; // Width of the PNG element
        const pngHeight = 1650; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
      }
      else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("vruschika")){
       middleX =2100;
        middleY =900;
      pngElement.onload = () => {
        const pngWidth = 3500; // Width of the PNG element
        const pngHeight = 1800; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
      }
      else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("vruschika")){
        middleX =2090;
        middleY =880;
      pngElement.onload = () => {
        const pngWidth = 2800; // Width of the PNG element
        const pngHeight = 1700; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
      }
  
      else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("vruschika")){
        middleX =1950;
        middleY =1000;
      pngElement.onload = () => {
        const pngWidth = 2200; // Width of the PNG element
        const pngHeight = 2100; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
      }
      else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("vruschika")){
        middleX =2090;
        middleY =960;
      pngElement.onload = () => {
        const pngWidth = 3300; // Width of the PNG element
        const pngHeight = 2800; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);
      }
      }
  
  
      else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("vruschika")){
        middleX =1900;
        middleY =950;
      pngElement.onload = () => {
        const pngWidth = 2500; // Width of the PNG element
        const pngHeight = 2500; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);
      }
      }
  
      else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("vruschika")){
        middleX =2050;
        middleY =900;
      pngElement.onload = () => {
        const pngWidth = 2100; // Width of the PNG element
        const pngHeight = 2000; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
      }
      else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("vruschika")){
        middleX =1980;
        middleY =1000;
      pngElement.onload = () => {
        const pngWidth = 2500; // Width of the PNG element
        const pngHeight =2400; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
      }
  
      else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("vruschika")){
        middleX =1950;
        middleY =900;
      pngElement.onload = () => {
        const pngWidth = 2400; // Width of the PNG element
        const pngHeight =1700; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
      }
  
  
  
  
  
  
      if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("tula")){
        middleX =1800;
        middleY =930;
      pngElement.onload = () => {
        const pngWidth = 3300; // Width of the PNG element
        const pngHeight = 1800; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);
      }
      }
  
      else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("tula")){
        middleX =1830;
        middleY =900;
      pngElement.onload = () => {
        const pngWidth = 3200; // Width of the PNG element
        const pngHeight =1650; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
      }
      else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("tula")){
        middleX =2100;
        middleY =880;
      pngElement.onload = () => {
        const pngWidth = 3300; // Width of the PNG element
        const pngHeight = 1700; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
      }
      else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("tula")){
        middleX =2050;
        middleY =900;
      pngElement.onload = () => {
        const pngWidth = 2900; // Width of the PNG element
        const pngHeight = 1650; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
      }
      else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("tula")){
       middleX =2100;
        middleY =900;
      pngElement.onload = () => {
        const pngWidth = 3500; // Width of the PNG element
        const pngHeight = 1800; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
      }
      else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("tula")){
        middleX =2090;
        middleY =880;
      pngElement.onload = () => {
        const pngWidth = 2800; // Width of the PNG element
        const pngHeight = 1700; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
      }
  
      else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("tula")){
        middleX =1920;
        middleY =1000;
      pngElement.onload = () => {
        const pngWidth = 2350; // Width of the PNG element
        const pngHeight = 2100; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
      }
      else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("tula")){
        middleX =2090;
        middleY =960;
      pngElement.onload = () => {
        const pngWidth = 3300; // Width of the PNG element
        const pngHeight = 2800; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);
      }
      }
  
  
      else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("tula")){
        middleX =1900;
        middleY =950;
      pngElement.onload = () => {
        const pngWidth = 2500; // Width of the PNG element
        const pngHeight = 2500; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);
      }
      }
  
      else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("tula")){
        middleX =2000;
        middleY =900;
      pngElement.onload = () => {
        const pngWidth = 2300; // Width of the PNG element
        const pngHeight = 2000; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
      }
      else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("tula")){
        middleX =1900;
        middleY =1000;
      pngElement.onload = () => {
        const pngWidth = 2800; // Width of the PNG element
        const pngHeight =2400; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
      }
  
      else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("tula")){
        middleX =1880;
        middleY =900;
      pngElement.onload = () => {
        const pngWidth = 2600; // Width of the PNG element
        const pngHeight =1700; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
      }
  
  
  
  
  
      if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("kumbha")){
        middleX =1800;
        middleY =930;
      pngElement.onload = () => {
        const pngWidth = 3300; // Width of the PNG element
        const pngHeight = 2000; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);
      }
      }
  
      else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("kumbha")){
        middleX =1830;
        middleY =850;
      pngElement.onload = () => {
        const pngWidth = 3200; // Width of the PNG element
        const pngHeight =1850; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
      }
      else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("kumbha")){
        middleX =2100;
        middleY =850;
      pngElement.onload = () => {
        const pngWidth = 3300; // Width of the PNG element
        const pngHeight = 1900; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
      }
      else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("kumbha")){
        middleX =2050;
        middleY =850;
      pngElement.onload = () => {
        const pngWidth = 2900; // Width of the PNG element
        const pngHeight = 1850; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
      }
      else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("kumbha")){
       middleX =2100;
        middleY =870;
      pngElement.onload = () => {
        const pngWidth = 3500; // Width of the PNG element
        const pngHeight = 1800; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
      }
      else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("kumbha")){
        middleX =2090;
        middleY =850;
      pngElement.onload = () => {
        const pngWidth = 2800; // Width of the PNG element
        const pngHeight = 1900; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
      }
  
      else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("kumbha")){
        middleX =1920;
        middleY =1000;
      pngElement.onload = () => {
        const pngWidth = 2350; // Width of the PNG element
        const pngHeight = 2300; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
      }
      else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("kumbha")){
        middleX =2090;
        middleY =960;
      pngElement.onload = () => {
        const pngWidth = 3300; // Width of the PNG element
        const pngHeight = 2800; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);
      }
      }
  
  
      else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("kumbha")){
        middleX =1900;
        middleY =920;
      pngElement.onload = () => {
        const pngWidth = 2500; // Width of the PNG element
        const pngHeight = 2500; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);
      }
      }
  
      else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("kumbha")){
        middleX =2000;
        middleY =870;
      pngElement.onload = () => {
        const pngWidth = 2350; // Width of the PNG element
        const pngHeight = 2000; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
      }
      else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("kumbha")){
        middleX =1900;
        middleY =950;
      pngElement.onload = () => {
        const pngWidth = 2800; // Width of the PNG element
        const pngHeight =2400; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
      }
  
      else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("kumbha")){
        middleX =1880;
        middleY =900;
      pngElement.onload = () => {
        const pngWidth = 2600; // Width of the PNG element
        const pngHeight =1700; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
      }
  
  
  
      if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("midhuna")){
        middleX =1800;
        middleY =930;
      pngElement.onload = () => {
        const pngWidth = 3300; // Width of the PNG element
        const pngHeight = 2000; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);
      }
      }
  
      else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("midhuna")){
        middleX =1830;
        middleY =850;
      pngElement.onload = () => {
        const pngWidth = 3200; // Width of the PNG element
        const pngHeight =1850; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
      }
      else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("midhuna")){
        middleX =2000;
        middleY =850;
      pngElement.onload = () => {
        const pngWidth = 3300; // Width of the PNG element
        const pngHeight = 1900; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
      }
      else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("midhuna")){
        middleX =2050;
        middleY =920;
      pngElement.onload = () => {
        const pngWidth = 2900; // Width of the PNG element
        const pngHeight = 1850; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
      }
      else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("midhuna")){
       middleX =2000;
        middleY =870;
      pngElement.onload = () => {
        const pngWidth = 3600; // Width of the PNG element
        const pngHeight = 1800; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
      }
      else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("midhuna")){
        middleX =2090;
        middleY =850;
      pngElement.onload = () => {
        const pngWidth = 2800; // Width of the PNG element
        const pngHeight = 1900; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
      }
  
      else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("midhuna")){
        middleX =1870;
        middleY =1000;
      pngElement.onload = () => {
        const pngWidth = 2500; // Width of the PNG element
        const pngHeight = 2300; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
      }
      else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("midhuna")){
        middleX =2090;
        middleY =960;
      pngElement.onload = () => {
        const pngWidth = 3300; // Width of the PNG element
        const pngHeight = 2800; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);
      }
      }
  
  
      else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("midhuna")){
        middleX =1900;
        middleY =920;
      pngElement.onload = () => {
        const pngWidth = 2500; // Width of the PNG element
        const pngHeight = 2500; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);
      }
      }
  
      else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("midhuna")){
        middleX =2000;
        middleY =870;
      pngElement.onload = () => {
        const pngWidth = 2350; // Width of the PNG element
        const pngHeight = 2000; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
      }
      else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("midhuna")){
        middleX =1900;
        middleY =1000;
      pngElement.onload = () => {
        const pngWidth = 2800; // Width of the PNG element
        const pngHeight =2400; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
      }
  
      else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("midhuna")){
        middleX =1880;
        middleY =900;
      pngElement.onload = () => {
        const pngWidth = 2600; // Width of the PNG element
        const pngHeight =1700; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
      }
  
  
  
      if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("makara")){
        middleX =1800;
        middleY =930;
      pngElement.onload = () => {
        const pngWidth = 3300; // Width of the PNG element
        const pngHeight = 2000; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);
      }
      }
  
      else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("makara")){
        middleX =1830;
        middleY =850;
      pngElement.onload = () => {
        const pngWidth = 3200; // Width of the PNG element
        const pngHeight =1850; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
      }
      else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("makara")){
        middleX =2100;
        middleY =830;
      pngElement.onload = () => {
        const pngWidth = 3300; // Width of the PNG element
        const pngHeight = 1900; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
      }
      else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("makara")){
        middleX =2050;
        middleY =900;
      pngElement.onload = () => {
        const pngWidth = 2900; // Width of the PNG element
        const pngHeight = 1850; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
      }
      else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("makara")){
       middleX =2000;
        middleY =870;
      pngElement.onload = () => {
        const pngWidth = 3600; // Width of the PNG element
        const pngHeight = 1800; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
      }
      else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("makara")){
        middleX =2090;
        middleY =850;
      pngElement.onload = () => {
        const pngWidth = 2800; // Width of the PNG element
        const pngHeight = 1900; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
      }
  
      else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("makara")){
        middleX =1870;
        middleY =980;
      pngElement.onload = () => {
        const pngWidth = 2500; // Width of the PNG element
        const pngHeight = 2500; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
      }
      else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("makara")){
        middleX =2090;
        middleY =960;
      pngElement.onload = () => {
        const pngWidth = 3300; // Width of the PNG element
        const pngHeight = 2800; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);
      }
      }
  
  
      else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("makara")){
        middleX =1900;
        middleY =920;
      pngElement.onload = () => {
        const pngWidth = 2500; // Width of the PNG element
        const pngHeight = 2500; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);
      }
      }
  
      else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("makara")){
        middleX =2000;
        middleY =870;
      pngElement.onload = () => {
        const pngWidth = 2350; // Width of the PNG element
        const pngHeight = 2000; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
      }
      else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("makara")){
        middleX =1900;
        middleY =950;
      pngElement.onload = () => {
        const pngWidth = 2800; // Width of the PNG element
        const pngHeight =2400; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
      }
  
      else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("makara")){
        middleX =1880;
        middleY =880;
      pngElement.onload = () => {
        const pngWidth = 2600; // Width of the PNG element
        const pngHeight =1800; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
      }
  
  
  
  
  
  
  
  
      if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("dhanussu")){
        middleX =1800;
        middleY =930;
      pngElement.onload = () => {
        const pngWidth = 3300; // Width of the PNG element
        const pngHeight = 2000; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);
      }
      }
  
      else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("dhanussu")){
        middleX =1830;
        middleY =850;
      pngElement.onload = () => {
        const pngWidth = 3200; // Width of the PNG element
        const pngHeight =1850; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
      }
      else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("dhanussu")){
        middleX =2100;
        middleY =830;
      pngElement.onload = () => {
        const pngWidth = 3300; // Width of the PNG element
        const pngHeight = 1900; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
      }
      else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("dhanussu")){
        middleX =2050;
        middleY =900;
      pngElement.onload = () => {
        const pngWidth = 2900; // Width of the PNG element
        const pngHeight = 1850; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
      }
      else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("dhanussu")){
       middleX =2000;
        middleY =870;
      pngElement.onload = () => {
        const pngWidth = 3600; // Width of the PNG element
        const pngHeight = 1800; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
      }
      else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("dhanussu")){
        middleX =2090;
        middleY =850;
      pngElement.onload = () => {
        const pngWidth = 2800; // Width of the PNG element
        const pngHeight = 1900; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
      }
  
      else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("dhanussu")){
        middleX =1870;
        middleY =980;
      pngElement.onload = () => {
        const pngWidth = 2500; // Width of the PNG element
        const pngHeight = 2500; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
      }
      else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("dhanussu")){
        middleX =2090;
        middleY =960;
      pngElement.onload = () => {
        const pngWidth = 3300; // Width of the PNG element
        const pngHeight = 2800; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);
      }
      }
  
  
      else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("dhanussu")){
        middleX =1900;
        middleY =920;
      pngElement.onload = () => {
        const pngWidth = 2500; // Width of the PNG element
        const pngHeight = 2500; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);
      }
      }
  
      else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("dhanussu")){
        middleX =2000;
        middleY =870;
      pngElement.onload = () => {
        const pngWidth = 2350; // Width of the PNG element
        const pngHeight = 2000; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
      }
      else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("dhanussu")){
        middleX =1920;
        middleY =950;
      pngElement.onload = () => {
        const pngWidth = 2800; // Width of the PNG element
        const pngHeight =2400; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
      }
  
      else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("dhanussu")){
        middleX =1880;
        middleY =880;
      pngElement.onload = () => {
        const pngWidth = 2600; // Width of the PNG element
        const pngHeight =1800; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
      }
  
  
  
      if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("vrushabha")){
        middleX =1720;
        middleY =950;
      pngElement.onload = () => {
        const pngWidth = 3300; // Width of the PNG element
        const pngHeight = 1800; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);
      }
      }
  
      else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("vrushabha")){
        middleX =1850;
        middleY =900;
      pngElement.onload = () => {
        const pngWidth = 2950; // Width of the PNG element
        const pngHeight =1650; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
      }
      else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("vrushabha")){
        middleX =2050;
        middleY =920;
      pngElement.onload = () => {
        const pngWidth = 3400; // Width of the PNG element
        const pngHeight = 1600; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
      }
      else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("vrushabha")){
        middleX =2050;
        middleY =930;
      pngElement.onload = () => {
        const pngWidth = 2900; // Width of the PNG element
        const pngHeight = 1650; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
      }
      else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("vrushabha")){
       middleX =2100;
        middleY =910;
      pngElement.onload = () => {
        const pngWidth = 3750; // Width of the PNG element
        const pngHeight = 1600; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
      }
      else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("vrushabha")){
        middleX =2090;
        middleY =880;
      pngElement.onload = () => {
        const pngWidth = 2800; // Width of the PNG element
        const pngHeight = 1700; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
      }
  
      else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("vrushabha")){
        middleX =1890;
        middleY =1050;
      pngElement.onload = () => {
        const pngWidth = 2400; // Width of the PNG element
        const pngHeight = 1700; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
      }
      else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("vrushabha")){
        middleX =2090;
        middleY =980;
      pngElement.onload = () => {
        const pngWidth = 3300; // Width of the PNG element
        const pngHeight = 2800; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);
      }
      }
  
  
      else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("vrushabha")){
        middleX =1900;
        middleY =980;
      pngElement.onload = () => {
        const pngWidth = 2500; // Width of the PNG element
        const pngHeight = 1700; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);
      }
      }
  
      else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("vrushabha")){
        middleX =1990;
        middleY =960;
      pngElement.onload = () => {
        const pngWidth = 2400; // Width of the PNG element
        const pngHeight = 1600; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
      }
      else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("vrushabha")){
        middleX =1890;
        middleY =1000;
      pngElement.onload = () => {
        const pngWidth = 2500; // Width of the PNG element
        const pngHeight =2000; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
      }
  
      else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("vrushabha")){
        middleX =1870;
        middleY =960;
      pngElement.onload = () => {
        const pngWidth = 2700; // Width of the PNG element
        const pngHeight =1400;// Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
      }
  
  
  
  
      if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("meena")){
        middleX =1800;
        middleY =930;
      pngElement.onload = () => {
        const pngWidth = 3300; // Width of the PNG element
        const pngHeight = 1800; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);
      }
      }
  
      else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("meena")){
        middleX =1830;
        middleY =900;
      pngElement.onload = () => {
        const pngWidth = 3200; // Width of the PNG element
        const pngHeight =1650; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
      }
      else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("meena")){
        middleX =2100;
        middleY =880;
      pngElement.onload = () => {
        const pngWidth = 3300; // Width of the PNG element
        const pngHeight = 1700; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
      }
      else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("meena")){
        middleX =2050;
        middleY =940;
      pngElement.onload = () => {
        const pngWidth = 2900; // Width of the PNG element
        const pngHeight = 1650; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
      }
      else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("meena")){
       middleX =2000;
        middleY =900;
      pngElement.onload = () => {
        const pngWidth = 3800; // Width of the PNG element
        const pngHeight = 1500; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
      }
      else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("meena")){
        middleX =2090;
        middleY =880;
      pngElement.onload = () => {
        const pngWidth = 2800; // Width of the PNG element
        const pngHeight = 1700; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
      }
  
      else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("meena")){
        middleX =1920;
        middleY =1000;
      pngElement.onload = () => {
        const pngWidth = 2350; // Width of the PNG element
        const pngHeight = 2100; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
      }
      else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("meena")){
        middleX =2090;
        middleY =960;
      pngElement.onload = () => {
        const pngWidth = 3300; // Width of the PNG element
        const pngHeight = 2800; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);
      }
      }
  
  
      else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("meena")){
        middleX =1900;
        middleY =950;
      pngElement.onload = () => {
        const pngWidth = 2500; // Width of the PNG element
        const pngHeight = 2500; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);
      }
      }
  
      else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("meena")){
        middleX =2000;
        middleY =900;
      pngElement.onload = () => {
        const pngWidth = 2300; // Width of the PNG element
        const pngHeight = 2000; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
      }
      else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("meena")){
        middleX =1900;
        middleY =1000;
      pngElement.onload = () => {
        const pngWidth = 2800; // Width of the PNG element
        const pngHeight =2400; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
      }
  
      else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("meena")){
        middleX =1880;
        middleY =900;
      pngElement.onload = () => {
        const pngWidth = 2600; // Width of the PNG element
        const pngHeight =1700; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
      }
  
  
  
  
      if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("mesha")){
        middleX =1720;
        middleY =950;
      pngElement.onload = () => {
        const pngWidth = 3300; // Width of the PNG element
        const pngHeight = 1800; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);
      }
      }
  
      else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("mesha")){
        middleX =1850;
        middleY =900;
      pngElement.onload = () => {
        const pngWidth = 2950; // Width of the PNG element
        const pngHeight =1650; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
      }
      else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("mesha")){
        middleX =2050;
        middleY =920;
      pngElement.onload = () => {
        const pngWidth = 3400; // Width of the PNG element
        const pngHeight = 1600; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
      }
      else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("mesha")){
        middleX =2050;
        middleY =930;
      pngElement.onload = () => {
        const pngWidth = 2900; // Width of the PNG element
        const pngHeight = 1650; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
      }
      else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("mesha")){
       middleX =2100;
        middleY =910;
      pngElement.onload = () => {
        const pngWidth = 3750; // Width of the PNG element
        const pngHeight = 1600; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
      }
      else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("mesha")){
        middleX =2090;
        middleY =880;
      pngElement.onload = () => {
        const pngWidth = 2800; // Width of the PNG element
        const pngHeight = 1700; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
      }
  
      else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("mesha")){
        middleX =1890;
        middleY =1050;
      pngElement.onload = () => {
        const pngWidth = 2400; // Width of the PNG element
        const pngHeight = 1700; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
      }
      else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("mesha")){
        middleX =2090;
        middleY =980;
      pngElement.onload = () => {
        const pngWidth = 3300; // Width of the PNG element
        const pngHeight = 2800; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);
      }
      }
  
  
      else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("mesha")){
        middleX =1900;
        middleY =980;
      pngElement.onload = () => {
        const pngWidth = 2500; // Width of the PNG element
        const pngHeight = 1700; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);
      }
      }
  
      else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("mesha")){
        middleX =1990;
        middleY =960;
      pngElement.onload = () => {
        const pngWidth = 2400; // Width of the PNG element
        const pngHeight = 1600; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
      }
      else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("mesha")){
        middleX =1890;
        middleY =1000;
      pngElement.onload = () => {
        const pngWidth = 2500; // Width of the PNG element
        const pngHeight =2000; // Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
      }
  
      else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("mesha")){
        middleX =1870;
        middleY =960;
      pngElement.onload = () => {
        const pngWidth = 2700; // Width of the PNG element
        const pngHeight =1400;// Height of the PNG element
        ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
      }
  
  
  
  
  
  
  
  
  
  
  
  
  
  
      // Add new element (PNG) in the middle of the canvas
      let middlesX ;
      let middlesY;
      const pngElements = new Image();
      pngElements.src = `${day}.png`;
      if(`${pngElements.src}`.includes("friday.png")){
        middlesX =1700;
        middlesY =940;
      pngElements.onload = () => {
        const pngWidth = 3000; // Width of the PNG element
        const pngHeight = 1800; // Height of the PNG element
        ctx.drawImage(pngElements, middlesX - pngWidth / 2, middlesY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
      }
      else{
        middlesX =1700;
        middlesY =900;
        pngElements.onload = () => {
          const pngWidth = 3000; // Width of the PNG element
          const pngHeight = 1800; // Height of the PNG element
          ctx.drawImage(pngElements, middlesX - pngWidth / 2, middlesY - pngHeight / 2, pngWidth, pngHeight);
          // Call the function to update the preview
          updatePreviewCanvas(image);}
      }
  
  
  
  
  
  
  
  
      function updatePreviewCanvas(image) {
        previewCanvas.width = previewContainer.clientWidth;
        previewCanvas.height = (previewContainer.clientWidth / image.width) * image.height;
  
        const scaleFactor = calculateScaleFactor(
          image.width,
          image.height,
          previewCanvas.width,
          previewCanvas.height
        );
        const previewCtx = previewCanvas.getContext("2d");
        previewCtx.clearRect(0, 0, previewCanvas.width, previewCanvas.height);
        previewCtx.drawImage(canvas, 0, 0, previewCanvas.width, previewCanvas.height);
  
        // Store the preview image separately
        previewImage = canvas.toDataURL();
  
        downloadButton.disabled = false;
      }
    }
   
  
    function calculateScaleFactor(originalWidth, originalHeight, maxWidth, maxHeight) {
      const widthScaleFactor = originalWidth / maxWidth;
      const heightScaleFactor = originalHeight / maxHeight;
  
      return Math.max(widthScaleFactor, heightScaleFactor, 1);
    }
    setTimeout(() => {
      const link = document.createElement("a");
      link.download = "rasiphalaluintelugumidhuna";
      link.href = previewImage; // Use the preview image data URL
      link.click();
    }, 6000);
 

  
  let funk = ()=>{
    const link = document.createElement("a");
      link.download = "image";
      link.href = previewImage; // Use the preview image data URL
      link.click();
  }
  

},10000);
setTimeout(() =>{
  

  let daily = [
    {
      title: "అతిపెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "ఈరోజు మీ జీవితంలోనే అతిపెద్ద శుభవార్త!",
      matter: "ఈరోజు మీకు మీ జీవితంలోనే అతిపెద్ద శుభవార్త అందుతుంది దాన్ని విన్న తరవాత మీ ఆనందానికి హద్దులు ఉండవు ",
    },
    {
      title: "ఒక స్త్రీ వల్ల ధనాలభం",
      thumbnail: "ఒక స్త్రీ వల్ల ఇలా ధనాలభం పొందే అవకాశం!",
      matter: "ఈరోజు మీకు మీ జీవిత భాగస్వామి వల్ల ధనాలభం పొందే అవకాశం ఉంది మీరు మాత్రం మీ జీవిత భాగస్వామి ని పూర్తిగా నమ్మాలి శుభం జరుగుతుంది ",
    },
    {
      title: "ఒక స్త్రీ పగబట్టి ఇలా",
      thumbnail: "ఒక స్త్రీ పగబట్టి చేసే ప్రయత్నాలు తెలిస్తే షాక్!",
      matter: "ఈరోజు ఒక స్త్రీ పాత కక్షలు పెట్టుకొని మీ మీద పగబట్టి మిమ్మల్ని ఆర్ధికంగా నష్టపరుచడానికి చెయ్యని ప్రయత్నలంటూ ఉండవు కాని మీ మంచి మనస్సు వల్ల దేవుడు మీ మీద అన్ని ప్రయత్నాలను విఫలం చేస్తారు",
    },
    {
      title: "కొత్త స్త్రీ తో స్నేహం",
      thumbnail: "2 శుభవార్తలు + ఒక కొత్త స్త్రీ తో స్నేహం",
      matter: "ఈరోజు మీరు రెండు పెద్ద శుభవార్తలు వింటారు మరియు అనుకోకుండా మీరు ఒక కొత్త స్త్రీ తో కలిసి ఆకస్మికంగా స్నేహం చేస్తారు",
    },
    {
      title: "పెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "పెద్ద శుభవార్తలు + ఈవిషయంలో జాగ్రత్త",
      matter: "ఈరోజు శుభప్రదంగా ఉంటుంది మీరు ఈరోజు పెద్ద శుభవార్తలు వింటారు ఆ శుభవార్తలు విన్న తరువాత ఆనండంలూ మద్యపానం సేవించడానికి ప్రయత్నాలు చేస్తారు ఇలా చెయ్యకండి మీ ఆరోగ్యం దెబ్బతీస్తుంది జాగ్రత్తగా ఉండండి ",
    },
    {
      title: "ఒక స్త్రీ పగబట్టి ఇలా",
      thumbnail: "ఒక స్త్రీ పగబట్టి ఈవిధంగా చేస్తుంది జాగ్రత్త",
      matter: "ఈరోజు మీ మీద ఒక స్త్రీ పగబట్టి హాని చెయ్యాలని చూస్తున్నారు , మరియు మీ మీద ఒక స్త్రీ ఏడుపు ఉంది మీ వ్యాపారం మరియు అభివృద్ధి మీద ఏడుస్తున్నారు జాగ్రత్తగా ఉండండి",
    },
    {
      title: "బంధువులే మీ సేత్రువులు",
      thumbnail: "మీ బంధువులే మీ సేత్రువులు జాగ్రత్త",
      matter: "మీ బంధువుల్లో కొందరు మీ సేత్రువులు ఉన్నారు వాళ్ళు ఎప్పుడు అవకాశం దొరికితే మిమ్మల్ని నష్టం చెయ్యాలని చూస్తున్నారు ఎవ్వరితో కూడా మీ వ్యాపారం గురించి చెప్పకండి జాగ్రత్తగా ఉండండి వెంనేపోటు పొడుస్తారు",
    }, 
    {
      title: "ఒక స్త్రీ మోసం చేస్తారు",
      thumbnail: "ఒక స్త్రీ ఇలా మోసం చేస్తుంది జాగ్రత్త!",
      matter: "ఈరోజు మీరు ఏంతో నమ్మిన ఒక స్త్రీ మిమ్మల్ని మోసం చేసే అవకాశం ఉంది జాగ్రత్తగా ఉండండి , మీరు మంచివారు కాని అందరు మంచివారు ఉండరు ఎవ్వరిని గుడ్డిగా నమ్మవద్దు",
    },
    {
      title: "ఒక స్త్రీ వల్ల డబ్బులు",
      thumbnail: "ఒక స్త్రీ వలన ఆదాయం + ఈవిషయాల్లో జాగ్రత్త",
      matter: "ఈరోజు మీకు చాలా మంచిరోజు నేడు మీకు మీ జీవిత భాగస్వామి బల్ల ధనాలభం కలుగుతుంది మరియు మీరు మీ జీవిత భాగస్వామి వల్ల చాలా సంతోషంగా ఉంటారు మీ బాధ్యతే ఏంటంటే మీరు కుడా వారిని సంతోషంగా ఉంచండి ",
    },
    {
      title: "స్త్రీ వల్ల శుభవార్తలు",
      thumbnail: "ఒక స్త్రీ వల్ల శుభవార్తలు ! తెలిస్తే షాక్!",
      matter: "ఈరోజు మీకు చాలా మంచిరోజు ఈరోజు మీకు ఒక స్త్రీ వల్ల శుభవార్తలు అందుతాయి ఈలోకంలో మీరే అదృష్టవంతులు అని ఈరోజు మీకు అనిపిస్తుంది మీరు మాత్రం ఆ శుభవార్తలు వినగానే షాక్ అవ్వడం ఖాయం",
    },
    {
      title: "స్త్రీ కాళ్ళ వద్దకు",
      thumbnail: "కోరుకున్న స్త్రీ కాళ్ళ వద్దకు వస్తుంది",
      matter: "ఈరోజు మీరు కూరుకున్న స్త్రీ మీ వ్యాపారం మరియు అభివృద్ధి చూసి వారు మీ కాళ్ళ వద్దకు వస్తారు కాని మీరు మాత్రం మీ వ్యాపారం మరియు అభివృద్ధి ని ఆపకండి ",
    },
    {
      title: "ఒక స్త్రీ మోసం చేస్తారు",
      thumbnail: "ఒక స్త్రీ వెన్నెపాటు పొడుస్తారు జాగ్రత్త!",
      matter: "ఈరోజు మీరు ఎంతగా నమ్మిన ఒక స్త్రీ మిమ్మల్ని మోసం చేస్తారు , దీనివల్ల మీరు మానసికంగా డిప్రెషన్ లోకి పోవచ్చు జాగ్రత్తగా ఉండండి లోకంలో డబ్బే అంత అని తెలుసుకోండి డబ్బు ఉంటె మీరే రాజు మీరే మంత్రి",
    },
    {
      title: "స్త్రీ వల్ల శుభవార్తలు",
      thumbnail: "ఒక స్త్రీ వల్ల శుభవార్తలు ! తెలిస్తే ఎగిరి గంటేస్తారు",
      matter: "ఈరోజు మీరు ఒక స్త్రీ వల్ల శుభవార్తలు అందుకుంటారు ఈలోకంలో మీరే అదృష్టవంతులు అని ఈరోజు మీకు అనిపిస్తుంది మీరు మాత్రం ఆ శుభవార్తలు వినగానే మీరు ఎగిరి గంతెయ్యడం మాత్రం ఖాయం",
    },
    {
      title: "ఒక స్త్రీ వల్ల ఘూరం",
      thumbnail: "ఒక స్త్రీ వల్ల ఘోరం జరుగుతుంది జాగ్రత్త!",
      matter: "ఈరోజు మీరు ఒక స్త్రీ వల్ల భారిగా నష్టపూతారు దీనివల్ల మీరు బాధ పాడుతారు కాని దానివల్ల ఏమి లాభం లేదు ఇప్పటికైనా పోయింది ఏమిలేదు అన్ని మరిచి మీరు మీ లక్ష్యం మీద దృష్తి పెడితే శుభం కలుగుతుంది",
    },
    {
      title: "కుటుంబంలో వీరికి మరనగందం",
      thumbnail: "కుటుంబంలో వీరికి మరణ గండం జాగ్రత్త!",
      matter: "ఈరోజు మీ కుటుంబంలో పెద్దవారిని ఎలెక్ట్రానిక్ వస్తువులనుంచి దూరంగా ఉంచండి ప్రమాదాలు జరిగే అవకాశాలు ఉన్నాయి అప్ప్రమత్తంగా ఉండండి వారి ఆరోగ్యం మీద శ్రెద్ద పెట్టండి శుభం కలుగుతుంది ",
    },
    {
      title: "అందమైన స్త్రీ తో ",
      thumbnail: "ఈరోజు అదృష్టం మీదే! అందమైన స్త్రీ తో",
      matter: "ఈరోజు ఈ మొత్తం ప్రపంచంలో మీరే అదృష్టవంతులు అని మీకు అనిపిస్తుంది ఈరోజు మీరు మీకు నచ్చిన ఇక అందమైన స్త్రీ తో బయటకు వెళ్లి సినిమాలు షికార్లు అని జాలిగా గడుపుతారు",
    },
    {
      title: "స్త్రీ తో మనసులోని మాట",
      thumbnail: "అందమైన స్త్రీ తో మనసులోని మాట చెప్తారు ",
      matter: "ఈరోజు మీరు మీకు నచ్చిన ఒక అందమైన స్త్రీ తో ఎప్పటినుంచో చెప్పాలనుకుంటున్న మీ మనస్సులోని మాట ఈరోజు చెపుతారు మరియు ఇలా చేస్తే ఈరోజు మీరు షాకింగ్ న్యూస్ వింటారు ",
    },
    {
      title: "పెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "పెద్ద శుభవార్తలు + ఒక స్త్రీ పగబట్టి ఇలా చేస్తది",
      matter: "ఈరోజు మీరు పెద్ద శుభవార్తలు వింటారు మరియు ఈరోజు ఒక స్త్రీ పగబట్టి మీ శుభవార్తల మీద ఈర్ష తో నష్టం చెయ్యడానికి ప్రయత్నాలు చేస్తారు కాని మీరు మీ అదృష్టం వల్ల తప్పించుకుంటారు",
    },
    {
      title: "ఒక స్త్రీ తో సరదాగా ఉలా",
      thumbnail: "ఒక స్త్రీ తో సరదాగా ఇలా చేస్తారు...! జాగ్రత్త",
      matter: "ఈరోజు మీరు సరదా కోసం మీ ప్రేయసితో బయటకు పోయి సినిమాలకు రెస్టారెంట్లకు పోయి చివరికి మీరు మీ దగ్గర ఉన్న డబ్బును మొత్తం ఐపోచేస్తారు జాగ్రత్తగా ఉండండి డబ్బును ఈరోజు మీరు ఆదా చేస్తే అవి మీకు రేపు పనికి వస్తాయి",
    },
    {
      title: "స్త్రీ వల్ల ఆనందం",
      thumbnail: "ఒక స్త్రీ వల్ల ఆనందానికి హద్దులు ఉండవు",
      matter: "ఈరోజు మీ జీవితానికి అర్ధమోచ్చే ఒక పెద్ద బంగారు శుభావర్తని మీ జీవిత భాగస్వామి మీకు అందిస్తారు ఈరోజు మీరు ఒక అందమైన స్త్రీ తో జాలిగా గడుపుతారు ఈరోజు ఆ అందమైన స్త్రీ వల్ల ఆకస్మికంగా ధనలాభం పొందే అవకాశం కుడా ఉంది",
    },
    {
      title: "వీరితో గొడవలు జాగ్రత్త",
      thumbnail: "ఈరోజు వీరితో గొడవలు జరుగుతాయి జాగ్రత్త",
      matter: "ఈరోజు మీరు ఎప్పటినుంచో గొడవ పదాలనుకుంటున్న మీ సేత్రువులు మిమ్మల్ని గెలకడంతో మీరు వారితో గొడవ పడొచ్చు కాని గొడవ పరిష్కారం కాదని మీరు తెలుసుకూవాలి కాని గొడవ జరిగితే మాత్రం గెలిసేది మీరే",
    },
    {
      title: "అందమైన స్త్రీ తో ఇలా",
      thumbnail: "ఒక అందమైన స్త్రీ తో సరదాలు + ఆకస్మిక ధనాలభం",
      matter: "ఈరోజు మీరు ఒక అందమైన స్త్రీ తో జాలిగా గడుపుతారు ఈరోజు ఆ అందమైన స్త్రీ వల్ల ఆకస్మికంగా ధనలాభం పొందే అవకాశం కుడా ఉంది",
    },
    {
      title: "స్త్రీ వల్ల నష్టాలు",
      thumbnail: "ఓక స్త్రీ వల్ల భారీగా నష్టపోతారు జాగ్రత్త!",
      matter: "ఈరోజు మీరు మీ జీవిత భాగస్వామి చేసిన ఒక తప్పు వల్ల బిజినెస్ లో భారి నష్టాలను చూస్తారు దీనివల్ల మీరు వారిమీద కోప్పడుతారు ఆఖరికి దీంట్లో వాళ్ళు కావాలని చెయ్యలేదని తెలుసుకొని క్షమిస్తారు",
    },
    {
      title: "ఒక స్త్రీ పగబట్టి ఇలా",
      thumbnail: "ఒక స్త్రీ పగబట్టి ఈవిధంగా చేస్తుంది",
      matter: "ఈరోజు మీ మీద ఎప్పటినుంచో కక్ష పెట్టుకున్న ఒక స్త్రీ ఈరోజు పగతీర్చుకోవడానికి మిమ్మల్ని మానసికంగా హాని చేస్తారు అది కుడా విఫలం అయితే శారీరికంగా హాని చేస్తారు జాగ్రత్తగా ఉండండి ",
    },
    {
      title: "ఒక స్త్రీ తో గొడవలు",
      thumbnail: "ఈరోజు ఒక స్త్రీ తో గొడవలు జరుగుతాయి",
      matter: "ఈరోజు మీకు ఒక స్త్రీ తో గొడవలు జరుగుతాయి మీరు ఎంత ఒద్దు అనుకున్న గొడవలు తప్పవు దీనిని ద్రుష్టిలో పెట్టుకొని మీరు గొడవని ఆపలేరు అయితే మీరు కోపంలో మీరు చెప్పే మాటలపై మీరు తరువాత ఆందోళన పాడుతారు జాగ్రత్త key",
    },
    {
      title: "స్త్రీ తో మనసులోని మాట",
      thumbnail: "ఒక స్త్రీ తో మనసులోని విషయం మాట్లాడతారు",
      matter: "ఈరోజు మీరు ఒక స్త్రీ తో మీ మనసులోని మాట మాట్లాడుతారు మీరు వారిని ఇష్టపడుతున్నారని వారితో చెపుతారు ఈవిషయం చెప్పినతరువాత మీకు ఒక షాకింగ్ వార్త అందుతుంది జాలిగా గడుపుతారు",
    },
    {
      title: "జీవితంలో ఒక స్త్రీ ఎంట్రీ",
      thumbnail: "మీ జీవితంలో ఒక స్త్రీ ఎంట్రీ .. అన్ని శుభవర్తలే",
      matter: "ఈరోజు మీ జీవితంలో ఒక కొత్త స్త్రీ వస్తుంది తను చాల బుద్ధిమంతురాలు మరియు అందానికి యువరాణి మీకు ఆ స్త్రీ చాల నచ్చుతుంది మరియు మీరు ఆ స్త్రీ తో స్నేహం కూడా చెయ్యడానికి ప్రయత్నాలు చేస్తారు",
    },
    {
      title: "ఒక స్త్రీ వల్ల మోసపోతారు",
      thumbnail: "ఒక స్త్రీ ని గుడ్డిగా నమ్మవద్దు! మీరు మోసపోవచ్చు",
      matter: "మీరు ప్రాణంగా ప్రేమించిన స్త్రీ ఈరోజు మిమ్మల్ని విదిచిపోవడంతో మీరు తట్టుకోలేరు మీరు డిప్రెషన్ లో కూడా పోవచ్చు కాని అదే సమయంలో మీ తల్లితండ్రులవల్ల మీకు జీవితం అంటే ఒక అర్ధం ఒస్తుంది వారి కోసమే బ్రతుకుతారు",
    },
    
    {
      title: "స్త్రీ వల్ల బంగారు శుభవార్త",
      thumbnail: "ఒక స్త్రీ వల్ల బంగారు శుభవార్తలు + ఇలా చేయకండి",
      matter: "ఈరోజు మీ జీవితానికి అర్ధమోచ్చే ఒక పెద్ద బంగారు శుభావర్తని మీ జీవిత భాగస్వామి మీకు అందిస్తారు ఆ శుభవార్త మీ జీవితాన్నే మార్చేస్తుంది కాబట్టి ఈరోజు మీరు ఆనందంలో మీరు ఎం చేయ్యలనుకున్తున్నారో ఆ పనులన్నీ చేసేస్తారు",
    },
  
    {
      title: "ప్రియమైన స్త్రీ ని కలుస్తారు",
      thumbnail: "ఒక ప్రియమైన స్త్రీ ని కలుస్తారు + ఆకస్మిక ధనాలభం",
      matter: "ఈరోజు మీరు మీకు ఏంటో ప్రియమైన స్త్రీ ని కలుస్తారు కలిసి సరదాగా మాట్లాడుకుంటారు ఇంకా ఈరోజు చివరిలో మీకు ఆకస్మిక ధనలాభం కలుగడంతో మీ ఆనందానికి హద్దులు ఉండవు ఆనందంలో పార్టి కూడా చేసుకుంటారు",
    },
    {
      title: "2 పెద్ద శుభవార్తలు",
      thumbnail: "2 పెద్ద శుభవార్తలు + ఈవిషయంలో జాగ్రత్త!",
      matter: "ఈరోజు మీరు ఎప్పటినుండో ఎదురుచూస్తున్న శుభవార్త వింటారు మరియు మీరు అనుకోకుండా ఒక స్త్రీ వల్ల ఇంకొక శుభవార్తలు అందుకుంటారు సంతోషంలో మీరు మద్యం సేవించవచ్చు ఇలా చెయ్యకండి జాగ్రత్త",
    },
    {
      title: "ఒక స్త్రీ వల్ల గొడవలు",
      thumbnail: "ఒక స్త్రీ వల్ల గొడవలు + ఆకస్మిక సంఘటనలు",
      matter: "ఈరోజు మీరు మీకు నచ్చిన ఒక స్త్రీ కోసం వేరే వాళ్లతో గొడవలలో పలుగోనతారు కాని ఆకస్మికంగా ఆ గొడవ చాల పెద్దగా కావడంతో మీరు గొడవని ముగించడానికి ప్రయత్స్తారు కాని మీరు జాగ్రత్తగా ఉండాలి దెబ్బలు కూడా తగలోచ్చు",
    },
    {
      title: "స్త్రీ వల్ల ప్రమాదాలు",
      thumbnail: "ఒక స్త్రీ వల్ల ప్రమాదాలు ముంచుకోస్తున్నాయి జాగ్రత్త",
      matter: "ఈరోజు మీకు ఒక స్త్రీ వల్ల ప్రమాదాలు మున్చుకోస్తునాయి కాబట్టి మీరు అప్ప్రమత్తంగా ఉండండి వాహనాలు నడిపెటప్పుడు ఒక స్త్రీ ని ఆకర్షించడానికి మీరు మీ వాహనాన్ని అతివేగంలో నడుపుతారు దీనివల్ల ప్రమాదం కూడా జరుగవచ్చు",
    },
    {
      title: "ఒక స్త్రీ నష్టం చేస్తారు",
      thumbnail: "ఒక స్త్రీ ఈవిధంగా నష్టం చేస్తున్నారు + ఇలా చెయ్యండి",
      matter: "మీరు మిమ్మల్ని ప్రేమిస్తున్నారు అనుకుంటున్నా స్త్రీ మీదగ్గర మీ డబ్బుకోసమే ఉన్నారు . ఈరోజు బయట ఆ స్త్రీ మిమ్మల్ని షాపింగ్ కు తెసుకేల్లి మీ లక్షలు నష్టం చేస్తారు జాగ్రత్త",
    },
    {
      title: "మంచి శుభవార్తలు ఉన్నాయి",
      thumbnail: "మంచి శుభవార్తలు + ఈవిషయాల్లో జాగ్రత్త",
      matter: "ఈరోజు మీ జీవితానికి అర్ధమోచ్చే ఒక పెద్ద బంగారు శుభావర్తని మీ జీవిత భాగస్వామి మీకు అందిస్తారు ఆ శుభవార్త మీ జీవితాన్నే మార్చేస్తుంది  సంతోషంలో మీరు మద్యం సేవించవచ్చు ఇలా చెయ్యకండి జాగ్రత్త",
    },
    {
      title: "ఒక స్త్రీ తో గొడవ",
      thumbnail: "ఈరోజు ఒక స్త్రీ తో గొడవ జరుగుతుంది జాగ్రత్త",
      matter: "ఈరోజు మీకు ఒక స్త్రీ తో ఆస్తి మరియు దనం విషయంలో గొడవలు జరుగుతాయి కాని గొడవలో మీరు నూరు జారి చెప్పకుదని మాటలు చెపుతారు గొడవ తరువాత మీరు ఎందుకుచేప్పరని బాధపడి ఆ స్త్రీ తో క్షమాపణ అడుగుతారు దీని బదులు మీరు ముందే నూరు అదుపులో పెట్టుకోండి",
    },
    {
      title: "సేత్రువులు ఇలా చేస్తారు",
      thumbnail: "రహస్య సెత్రువులు ఈవిధంగా చేస్తున్నారు జాగ్రత్త",
      matter: "ఈరోజు రహస్య సేత్రువులు మీకు తెలియకుండానె మిమ్మల్ని ఆర్ధికంగా మరియు మీ కుతుమ్బంన్ని హాని చెయ్యడానికి చెయ్యని ప్రయత్నలుండవు కాబట్టి మీరు ముందే జాగ్రత్తగా ఉండండి ఎవ్వరిని గుడ్డిగా నమ్మవద్దు మోసపోవచ్చు",
    },
    {
      title: "అమ్మాయి కాళ్ళ వద్దకు",
      thumbnail: "అందమైన అమ్మాయి మీ కాళ్ళ వద్దకు వస్తుంది",
      matter: "ఈరోజు మీ స్వప్న సుందరి మీ ఉన్నత చదువులు మరియు వ్యాపారంలో అభివృద్ధి చూసి ఒచ్చి మీ కాళ్ళ వద్దకు పడుతది . ఈరోజు మీరు పడ్డ కష్టం వ్యర్ధం కాలేదని మీరు తెలుసుకుంటారు వ్యాపారం మరియు చదువులూ ఇంకా ముందుకు సాగాలని మీకు మోటివేషన్ దొరుకుతుంది",
    },
    {
      title: "స్త్రీ వల్ల పెద్ద శుభవార్త",
      thumbnail: "ఒక స్త్రీ వల్ల పెద్ద శుభవార్త + ఆకస్మిక ధనాలభం",
      matter: "ఈరోజు మీకు ఒక స్త్రీ వల్ల పెద్ద శుభవార్త అందుతుంది మరియు వార్త వినంగానే మీ మడ్ ఒక్కసారిగా మంచిగా మారడంతో మీరు మీ పార్టనర్ తో కలిసి సినిమాకు పోతారు మరియు రాత్రి సమయంలో మీకు ధనలాభం కలుగుతుంది ",
    },
    {
      title: "స్త్రీ తో సరదాగా ఉలా",
      thumbnail: "ఒక స్త్రీ తో కలిసి సరదాగా చేసే పనులు తెలిస్తే షాక్ !",
      matter: "ఈరోజు మీరు టైం పాస్ చెయ్యడానికి ఒక స్త్రీ తో కలిసి ఒక మంచి రెస్టారెంట్ కు వెళ్లి భూజనం చెయ్యడం ఇష్టపడుతారు మరియు సినిమాకు పోయి జాలిగా గడుపుతారు ఈరోజు మీకు ఎప్పటికి గుర్తుండిపోయేలా గడుపుతారు",
    },
    {
      title: "సెత్రువులు ఇలా చేస్తారు",
      thumbnail: "పెద్ద శుభవార్తలు + సెత్రువులు ఇలా చేస్తారు",
      matter: "ఈరోజు మీకు చాల పెద్ద శుభవార్తలు అందుతాయి దీనితో మీరు చాల సంతోషంగా ఉంటారు మీ సంతోషం మీ సేత్రువులు చూడలేరు వారు మీకు ఎదో ఒక హాని చెయ్యాలని చూస్తారు కాని రోజు ఆకరికి ఏమి చెయ్యలేక అలిసి వెళ్ళిపోతారు",
    },
    {
      title: "ప్రాణగండం ఉంది జాగ్రత్త",
      thumbnail: "వీరితో గొడవలు + ప్రాణగండం ఉంది జాగ్రత్త",
      matter: "ఈరోజు మీకు మీ సేత్రువులతో గొడవలు జరుగుతాయి మరియు మీరు ఈరోజు మీ కోపాన్ని అడుపులూ ఉంచాలి లేదంటే మీకు గొడవలో తీవ్ర గాయలవల్ల ప్రాణగండం ఉంది దేవుడ్ని స్మరించండి గొడవ దేనికి కూడా సమాధానం కాదు అని మీరు తెలుసుకోవాలి",
    },
    {
      title: "స్త్రీ వల్ల పండగలు",
      thumbnail: "ఒక స్త్రీ వల్ల ఈరోజు పండుగలా ఉంటుంది",
      matter: "ఈరోజు ఒక స్త్రీ వల్ల వేడుకలా ఉంటుంది మీకు నచ్చిన స్త్రీ తో ఈరోజు మీరు బయటకు పోతారు మరియు వారితో సినిమాలకు పోయి జాలిగా గడుపుతారు ఆ స్త్రీ వల్ల రోజు చివర్లో ధనాలభం కూడా కావొచ్చు శుభం కలుగుతుంది ",
    },
    {
      title: "స్త్రీ మోసం చేస్తుంది",
      thumbnail: "ఒక స్త్రీ ఇలా మోసం చేస్తది + ఇలా చెయ్యండి",
      matter: "ఈరోజు మీరు గుడ్డిగా నమ్మిన ఒక స్త్రీ మిమ్మల్ని మోసం చేస్తది దేనిని మీరు తట్టుకోలేరు కోపంలూ మీరు డిప్రెషన్ లో కూడా పోవచ్చు కాని మీ తల్లి తండ్రులకు ఈ విషయం తెలిసి వారు మిమ్మల్ని దీని నుండి బయటకు తెస్తారు",
    },
    {
      title: "స్త్రీ మీ కాళ్ళ వద్దకు",
      thumbnail: "ఒద్దు అన్న స్త్రీ మీ కాళ్ళ వద్దకు వస్తుంది",
      matter: "మీ దగ్గర డబ్బులు లేవు మీరు బిచ్చగాల్లు అని మిమ్మల్ని వదిలి పాయిన ఆ స్త్రీ ఈరోజు మీ అభివృద్ధి మరియు మీ ఉన్నత చదువులు చూసి మల్లి మీ కాళ్ళ వద్దకు ఒస్తుంది మల్లి తనను దగ్గరుకు తెసుకున్తారా? కామెంట్ లో చెప్పండి  ",
    },
  
    {
      title: "పెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "పెద్ద శుభవార్తలు ఉన్నాయి + స్త్రీ వల్ల పండుగ",
      matter: "ఈరోజు మీకోసం పెద్ద శుభవార్తలు ఎదురుచుస్తునాయి మీరు పడ్డ కష్టానికి ప్రతిఫలం ఈరోజు మీకు శుభవార్త అందుతుంది మరియు మీ అభివృద్ది ని చూసి ",
    },
    {
      title: "స్త్రీ వల్ల ధనలాభం",
      thumbnail: "అందమైన స్త్రీ వల్ల ధనలాభం + పెద్ద శుభవార్త",
      matter: "ఈరోజు ఒక అందమైన స్త్రీ వల్ల ధనాలభం కలుగుతుంది ఇంకా రోజు మధ్యలో మీకు పెద్ద శుభవార్త అందుతుంది మీకు ఆ శుభవార్త అందుతదని మీరు కలలో కూడా ఉహించి ఉండరు కాని మీ అదృష్టం వల్ల మీకు ఆ శుభవార్తః అందుతుంది ",
    },
    {
      title: "కుటుంబంలో వీరికి ప్రాణగండం",
      thumbnail: "మీ కుటుంబంలో వీరికి ఇలా ప్రాణగండం జాగ్రత్త",
      matter: "ఈరోజు మీ కుటుంబంలో వ్రుదుల అనారోగ్యం వల్ల వారికి ప్రాణగండం ఉంది కాబట్టి పుష్టిక ఆహారాన్ని సేవించాలి మరియు దేవుడ్ని స్మరించాలి మీరు చేసిన పుణ్యకార్యాల వల్ల దేవుడు మీ గండాన్ని తొలగిస్తారు శుభం జరుగుతుంది",
    },
    {
      title: "స్త్రీ వల్ల శుభవార్తలు",
      thumbnail: "మీరు ఊహించని స్త్రీ శుభవార్తలు చెప్తారు ",
      matter: "ఈరోజు మీరు కలలో కూడా ఉహించని ఒక అందమైన స్త్రీ నోటితో మీరు శుభావర్తలు వింటారు ఈవార్త వినగానే మీ మనస్సు గాలిలో తేలినట్లు అయిపోతుంది మీరు మీ బంధువులందరితో ఈ వార్తని పంచుకుంటారు జాలిగా గడుపుతారు",
    },
    {
      title: "స్త్రీ మీ కాళ్ళ వద్దకు",
      thumbnail: "మీరు కావాలనుకున్న స్త్రీ మీ కాళ్ళ వద్దకు",
      matter: "ఈరోజు మీరు ఎప్పటినున్డూ కోరుకుంటున్న స్త్రీ మీ అదృష్టం కొద్ది మీ దగ్గర సహాయం కోరుతూ వస్తుంది మీరు కాని తనకు సహాయం చేస్తే మాత్రం మీ ఇద్దరి మధ్య బంధం ఇంకా గట్టిపడుతుంది కాని ఆ సహాయం చెయ్యడానికి కొద్దిగా శ్రీమ పడాల్సి ఉంటది",
    },
  
    {
      title: "పెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "పెద్ద శుభవార్తలు + ఒక స్త్రీ ఇలా చేస్తుంది",
      matter: "ఈరోజు మీకు మీరు ఎన్నో సంవచరాల నుండి ఎదురుచూస్తున్న శుభవార్త ఒకటి అందడం వల్ల మీరు సంతోషంగా ఎగిరి గంతులేస్తారు మరియు మీ మిత్రులకి పార్టి ఇస్తారు మొత్తానికి ఈరోజు జాలిగా గడుపుతారు కాని ఆ శుభవార్త మీ జీవితాన్ని మార్చేస్తుంది",
    },
    {
      title: "ఒక స్త్రీ మోసం చేస్తారు",
      thumbnail: "ఒక స్త్రీ మిమ్మల్ని ఈవిధంగా మోసం చేస్తున్నారు",
      matter: "ఈరోజు మీరు కళ్ళు ముసి నమ్మిన ఒక స్త్రీ మిమ్మల్ని వెంనేపోటు పొడుస్తారు మిమ్మల్ని కాదని మోసం చేస్తారు దీనితో మీరు చాల బాధ పాడుతారు కాని మీ తల్లితండ్రులు మీకు సపోర్టుగా ఉంటారు దీనివల్ల వాళ్ళని మించిన వారు లేరని మీకు తెలుస్తుంది",
    },
    {
      title: "స్త్రీ తో మనసులోని మాట",
      thumbnail: "నచ్చిన స్త్రీ తో మీ మనసులోని మాట చెపుతారు",
      matter: "మీరు ప్రతిరోజూ కలలో చూసే మీకు నచ్చిన ఒక స్త్రీ తో ఈరోజు మీరు మీ మనస్సులోని మాట చెపుదామని మీరు ఫిక్స్ అవుతారు ఇలా చెయ్యడానికి ఇదే సరైన సమయం శుభవార్తలు కూడా అందవచ్చు ఏది జరిగినా మన మంచికే అని గుర్తుపెట్టుకోండి ",
    },
    {
      title: "ఎవరంలో ఇలా జరిగిద్ది",
      thumbnail: "ఈవారంలో ఏం జరుగుతుందో తెలిస్తే షాక్",
      matter: "ఈవారంలో మీ వృత్తికి మీరే రాజు మీరే మంత్రి బిజినెస్ లో మిమ్మల్ని మించినోల్లు ఎవ్వరు ఉండరు కొత్త స్త్రీ తో పరిచయాలు జరుగుతాయి మరియు ధనాలభం కలుగుతుంది",
    },
    {
      title: "వీరే మీ సెత్రువులు",
      thumbnail: "వీరే మీ సెత్రువులు + ఒక స్త్రీ తో జాగ్రత్త",
      matter: "ఈరోజు మీరు మీ సేత్రువుల పేర్లు తెలుసుకుంటారు మరియు ఒక స్త్రీ మీ రహస్య సేత్రువు మీకు ఇప్పటివరుకు కలిగిన హాని మొత్తం మీ సేత్రువులనుంచే అని ఈరోజు మీకు తెలిసి వస్తుంది అప్ప్రమత్తంగా ఉండండి",
    },
    {
      title: "స్త్రీ కాళ్ళ వద్దకు",
      thumbnail: "మీరు ఒద్దు అని విడిచిపోయిన స్త్రీ కాళ్ళ వద్దకు",
      matter: "మీరు డబ్బు లేనివారు అని మిల్లల్ని చులకనగా చుసిన ఒక స్త్రీ ఈరోజు మీ వ్యాపారం మరియు అభివృద్ధి చూసి మల్లి మీ కాళ్ళ వద్దకు వస్తుంది కాని వచ్చిన తరువాత మీరు మీ దృష్టి ని అటు మల్లిన్చాకండి మీ వ్యాపారాన్ని ఇంకా పెంచుతూనే ఉండాలి",
    },
    {
      title: "ఒక స్త్రీ వల్ల శుభవార్తలు",
      thumbnail: "ఒక స్త్రీ వల్ల అతిపెద్ద శుభవార్తలు తెలిస్తే షాక్",
      matter: "ఈరోజు మీ జీవితంలూ ఎప్పుడు అందని శుభవార్తలు ఈరోజు మీకు ఒక స్త్రీ వల్ల అందుతాయి వాటిని విని మీరు ఎగిరి గంతులేస్తారు మీ ఆనందానికి హద్దులు ఉండవు ఆ శుభవార్తలు మీ జీవితాన్నే మార్చేస్తాయి రెడీగా ఉండండి ",
    },
    {
      title: "ఒక స్త్రీ పగబట్టి ఇలా",
      thumbnail: "ఒక స్త్రీ పగబట్టి చేసే ప్రయత్నాలు చుస్తే చాక్",
      matter: "ఈరోజు మీపైన ఎంతోకాలంగా కక్షగుడి మీ ప్రానసేత్రువు ఒక స్త్రీ మిమ్మల్ని అన్ని విధాలుగా హాని చెయ్యడానికి ప్రయత్నాలు చేస్తారు కాని మీరు చాలా ధైర్యవంతులు కావడంతో మీరు వాటన్నిటినుంచి సులభంగా తప్పించుకుంటారు ",
    },
    {
      title: "పెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "పెద్ద శుభవార్తలు ఉన్నాయి వీరు నక్కతోకతొక్కారు",
      matter: "ఈరోజు మీరునక్కతోకతొక్కారు మీకు ఈరోజు పెద్ద శుభవార్తలు అందుతాయి వాటిని విని మీ మనసు గాలిలో తేలడం మాత్రం ఖాయం ఈరోజు మీకు శుభవార్తలు విన్న తరువాత ఆనదందానికి హద్దులు ఉండవు ఎగిరి గంతులు వేస్తారు",
    },
    {
      title: "ఒక స్త్రీ వల్ల ప్రాణగండం",
      thumbnail: "ఒక స్త్రీ వల్ల ప్రాణగండం + ఈవిషయాల్లో జాగ్రత్త",
      matter: "ఈరోజు మీకు ఒక స్త్రీ వల్ల ప్రాణగండం ఉంది ఎలా అంటే ఈరోజు మీరు ఒక స్త్రీ ని ఆకట్టుకోవడానికి వాహనాన్ని అతివేగంతో నడుపడంతో మీకు ఆపదలు జరిగే అవకాశం ఉంది జాగ్రత్తగా ఉండండి మరియు వాహనాన్ని ఇంటిదగ్గర మీకోసం ఎదురుచూస్తున్నా వాళ్ళ కోసం నెమ్మదిగా తోలండి",
    },
    {
      title: "స్త్రీ తో ఇలా చేస్తారు",
      thumbnail: "శుభవార్త తెలిస్తే ఎగిరి గంటెస్తారు ఒక స్త్రీ తో",
      matter: "ఈరోజు మీ రోజువారి బ్రతుకులూ ఒక్కసారిగా పెద్ద శుభవార్త ఒకటి అందడంవల్ల మీరు మీ ప్రేయసితో కలిసి ఎంజాయ్ చెయ్యడానికి బయటకు సినిమాలు అని షికార్లకు పోతారు ఈరోజు మీ జీవితంలో ఎప్పటికి గుర్తుండిపోతుంది",
    },
    {
      title: "స్త్రే తో సరదాగా ఉలా",
      thumbnail: "అందమైన స్త్రీ తో సరదా కోసం ఇలా చేస్తారు ",
      matter: "ఈరోజు మీకు చాల అదృష్టమైన రోజు మీరు కలలో కూడా ఉహించని అందమైన స్త్రీ తో ఈరోజు మీరు సరదాగా షికారుకు వెళ్లి జాలిగా గడుపుతారు మరియు మీ ఇద్దరి బంధం దీనివల్ల ఇంకా ద్రుదపడుతుంది",
    },
    {
      title: "ఒక స్త్రీ కాళ్ళ దగ్గర",
      thumbnail: "శుభవార్త ! ఒక స్త్రీ ఈరోజు మీ కాళ్ళ దగ్గర",
      matter: "ఈరోజు శుభవార్త అందుతుంది మీరు పేదవాళ్ళు అని మిమ్మల్ని వదిలిపొఇన ఒక స్త్రీ ఈరోజు మీ అభివృద్ధి మరియు దానం చూసి మల్లి మీ కాళ్ళ దగ్గర రావడం ఖాయం",
    },
    {
      title: "స్త్రీ వల్ల గుండెలుపగిలే వార్త",
      thumbnail: "ఒక స్త్రీ వల్ల గుండెలు పగిలే వార్తలు జాగ్రత్త",
      matter: "ఈరోజు మీరు ఎంతగా నమ్మిన స్త్రీ తరుపునుంచి మీకు గుండెలు పగిలే వార్తలు వింటారు ఆ వార్తలు ఏంటంటే వారి ఆరోగ్యం అస్సలు బాగాలేదు మరియు ఆసుపత్రిలూ వారికి చాల ఖర్చులు ఉన్నాయి ఇది విన్న తరువాత మీరు వారిని ఆర్ధికంగా సహాయం చేస్తారు",
    },
    {
      title: "ఒక స్త్రీ మిమ్మల్ని హాని",
      thumbnail: "ఒక స్త్రీ ఇలా హాని చేస్తుంది ఇప్పుడే తెలుసుకోండి",
      matter: "ఈరోజు మీకు ఒక స్త్రీ పగబట్టి శారీరికంగా హాని చెయ్యడానికి చెయ్యని ప్రయత్నాలు ఉండవు కావున మీరు బయటకు వెళ్ళేటప్పుడు దేవుడ్ని స్మరించి జాగ్రత్తగా వెళ్ళండి మీకు ఎలాంటి హాని కలగదు",
    },
    {
      title: "మీ మీద స్త్రీ దృష్టి",
      thumbnail: "మీ మీద ఒక స్త్రీ చేసుదృష్టి జాగ్రత్త",
      matter: "మీ మీద ఒక స్త్రీ చేడుద్రుష్టి ఈలోకంలో చేడుద్రుష్టి అనేది ఒక రాజుని కూడా బిచ్చగాడు లా చెయ్యొచ్చు మీ సంపద మీద ఒక స్త్రీ ఏడుస్తుంది ఇది మీరు జాగ్రత్తగా ఉండాల్సిన సమయం అప్ప్రమత్తంగా ఉండండి",
    },
    {
      title: "ఒక స్త్రీ వల్ల శుభవార్తలు",
      thumbnail: "అన్ని శుభవార్తలే మీ జీవితంలో ఒక స్త్రీ ఎంట్రీ",
      matter: "ఎప్పటినుండో బ్రేక్ లో ఉన్న మీ జీవితం ఒక స్త్రీ రావడంతో దూసుకుపోతుంది , అవును ఈరోజు మీకు అన్ని శుభవార్తలు అందుతాయి మరియు మీ జీవితంలూ ఒక స్త్రీ ఎంట్రీ ఇస్తుంది ",
    },
    {
      title: "స్త్రీ వల్ల పెద్ద శుభవార్తలు",
      thumbnail: "ఒక స్త్రీ వల్ల 3 పెద్ద శుభవార్తలు + ఇలా చెయ్యకండి",
      matter: "ఈరోజు మీరు ఒక స్త్రీ వల్ల మూడు పెద్ద శుభావర్హలు అందుకుంటారు మరియు శుభవార్తలు అందుకున్న వెంటనే మీరు ఆ విషయాలను మీ తల్లి తండ్రులకు ముందుగా చెపుతారు ఎందుకంటే ఈలోకంలో వారిని మించి మీకు ఎవ్వరు లేరు",
    },
  ];
  const today = new Date();
  let tomorrow = new Date(today);
  tomorrow.setDate(tomorrow.getDate() + 2);

  let dayOfWeekIndex = tomorrow.getDay();
  let dayOfWeekArray = [
    "sunday",
    "monday",
    "tuesday",
    "wednesday",
    "thursday",
    "friday",
    "saturday"
  ];

  

  let monthIndex = tomorrow.getMonth();
  let monthArray = [
    "january",
    "february",
    "march",
    "april",
    "may",
    "june",
    "july",
    "august",
    "september",
    "october",
    "november",
    "december",
  ];
let count = Number(localStorage.getItem("count") )|| 23;
  let dayname = dayOfWeekArray[dayOfWeekIndex];
  let monthname = monthArray[monthIndex];
  let datenumber = tomorrow.getDate().toString().padStart(2, "0");

  const textInput = document.getElementById("text-input");
  const textInput2 = document.getElementById("text-input2");
  const fontSelect = document.getElementById("text-input");
  const colorSelect = document.getElementById("color-select");
  const sizeRange1 = document.getElementById("size-range-1");
  const sizeRange2 = document.getElementById("size-range-2");
  const positionRangeX = document.getElementById("position-range-x");
  const previewContainer = document.getElementById("preview-container");
  const previewCanvas = document.getElementById("preview-canvas");
  const downloadButton = document.getElementById("download-button");
textInput2.value = datenumber;

const DailyOnceSet = function(){

  let currentDate = new Date();
  let currentDay = currentDate.getDate();
    localStorage.setItem('thumbdate', currentDay);
  }
  const Shiftdown = function () {
    let today = new Date().getDate();
    let yesterday = localStorage.getItem('thumbdate') || "";
    if(today!=yesterday){
      if(Number(localStorage.getItem("count"))+1>daily.length){
        localStorage.setItem("count",0);
      }
      else{
        
      localStorage.setItem("count",++count);
      localStorage.setItem("var4",daily[count].thumbnail);
      localStorage.setItem("var3", daily[count-1].thumbnail)
      localStorage.setItem("var2", daily[count-2].thumbnail)
      localStorage.setItem("var1", daily[count-3].thumbnail)



      }
    }  
  }

Shiftdown();
DailyOnceSet();

let var4 = localStorage.getItem("var4");
let var3;
let var2;
let var1;
if (count ==0){
  localStorage.setItem("var3", daily[67].thumbnail)
  var3 = localStorage.getItem("var3");
  localStorage.setItem("var2", daily[66].thumbnail)
  var2 = localStorage.getItem("var2");
  localStorage.setItem("var1", daily[65].thumbnail)
  var1 = localStorage.getItem("var1");
}
else if(count ==1){
  localStorage.setItem("var3", daily[0].thumbnail)
  var3 = localStorage.getItem("var3");
  localStorage.setItem("var2", daily[67].thumbnail)
  var2 = localStorage.getItem("var2");
  localStorage.setItem("var1", daily[66].thumbnail)
  var1 = localStorage.getItem("var1");
}
else if(count ==2){
  localStorage.setItem("var3", daily[1].thumbnail)
  var3 = localStorage.getItem("var3");
  localStorage.setItem("var2", daily[0].thumbnail)
  var2 = localStorage.getItem("var2");
  localStorage.setItem("var1", daily[67].thumbnail)
  var1 = localStorage.getItem("var1");
}
else{
  var3 = localStorage.getItem("var3");
  var2 = localStorage.getItem("var2");
  var1 = localStorage.getItem("var1");
}
document.getElementById("var1").value = var1;
document.getElementById("var2").value = var2;
document.getElementById("var3").value = var3;
document.getElementById("var4").value = var4;

  let currentImage = null;
  let previewImage = null;
  let fontSize1;
  // Load default image
  const defaultImage = new Image();
  //!

  textInput.value = var2;
  defaultImage.src  = "rasiphalaluintelugumakara.jpg" 
  

 
  
  
  
  
  defaultImage.onload = () => {
    currentImage = defaultImage;
    updatePreview();
  };

  textInput.addEventListener("input", () => {
    updatePreview();
  });

  textInput2.addEventListener("input", () => {
    updatePreview();
  });

  fontSelect.addEventListener("input", () => {
    updatePreview();
  });

  colorSelect.addEventListener("input", () => {
    updatePreview();
  });

  sizeRange1.addEventListener("input", () => {
    updatePreview();
  });

  sizeRange2.addEventListener("input", () => {
    updatePreview();
  });

  positionRangeX.addEventListener("input", () => {
    updatePreview();
  });

  function updatePreview() {
    if (!currentImage) return;

    const text = textInput.value;
    const text2 = textInput2.value;
    const color = "white"; // Set text2 color to white
    const canvas = document.createElement("canvas");
    const ctx = canvas.getContext("2d");

    const image = currentImage;

    canvas.width = image.width;
    canvas.height = image.height;

    ctx.drawImage(image, 0, 0);

    const positionX1 = 10; // Fixed X-coordinate for text1 (leftmost position)
    const positionY1 = 1730; // Fixed Y-coordinate for text1 (bottom - 600 pixels up)

    fontSize1 = 250; // Initial font size for text1
    ctx.font = `${fontSize1}px 'Anek Telugu'`;
    let textWidth = ctx.measureText(text).width;

    // Decrease font size until the text fits within the canvas width
    while (textWidth > canvas.width - 1) {
      fontSize1 -= 1;
      ctx.font = `${fontSize1}px 'Anek Telugu'`;
      textWidth = ctx.measureText(text).width;
    }

    let stretchRatio1;
    // Calculate vertical stretch factor for text1
    if (document.querySelector("#text-input").value.length > 48) {
      const originalHeight1 = fontSize1;
      const targetHeight1 = originalHeight1 + 100; // Vertical stretch factor, adjust as needed
      stretchRatio1 = targetHeight1 / originalHeight1;
    } else if (document.querySelector("#text-input").value.length < 30) {
      const originalHeight1 = fontSize1;
      const targetHeight1 = originalHeight1+15; // Vertical stretch factor, adjust as needed
      stretchRatio1 = targetHeight1 / originalHeight1;
    } else if (document.querySelector("#text-input").value.length > 40) {
      const originalHeight1 = fontSize1;
      const targetHeight1 = originalHeight1 + 40; // Vertical stretch factor, adjust as needed
      stretchRatio1 = targetHeight1 / originalHeight1;
    } else {
      const originalHeight1 = fontSize1;
      const targetHeight1 = originalHeight1 + 30; // Vertical stretch factor, adjust as needed
      stretchRatio1 = targetHeight1 / originalHeight1;
    }
    ctx.strokeStyle = "black";
ctx.lineWidth = 10;
ctx.lineJoin = "round"; // Use round corners for the stroke
    ctx.save();
    ctx.translate(positionX1, positionY1);
    ctx.scale(1, stretchRatio1);
    ctx.fillStyle = color;
ctx.strokeText(text, 0, 0);
    ctx.fillText(text, 0, 0);
    ctx.restore();
   const fixedpos = 2400;
      const fixedPositionY = 830; // Fixed position for text2
      let size2 = 620; // Get the value of sizeRange2
      
      // Calculate the desired height increase factor
      const heightIncreaseFactor = 40; // You can adjust this value as needed
      
      // Calculate the transformation matrix for vertical scaling
      const scaleX = 1;
      const scaleY = 1 + heightIncreaseFactor / 100;
      
      ctx.save(); // Save the current state of the canvas
      
      // Apply the vertical scaling transformation
      ctx.scale(scaleX, scaleY);
      
      ctx.font = `${size2}px 'Archivo Black', sans-serif`;
      ctx.fillStyle = "white"; // Set text2 color to white
      
      // Add border to text2
      ctx.lineWidth = 40;
      ctx.strokeText(text2, fixedpos, fixedPositionY);
      ctx.fillText(text2, fixedpos, fixedPositionY);
      
      ctx.restore(); // Restore the saved state of the canvas
      
      let month = monthname;
      let day = dayname;
      
      // Add a new element (PNG) in the middle of the canvas
      let middleX;
      let middleY;
      const pngElement = new Image();
      pngElement.src = `${month}.png`;
      
    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1700;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 4000; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }
    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1800;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =2050;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =2050;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =2050;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 4150; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =2090;
      middleY =780;
    pngElement.onload = () => {
      const pngWidth = 3250; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1890;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =2090;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 3000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1900;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1950;
      middleY =820;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2200; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1900;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3000; // Width of the PNG element
      const pngHeight =2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1850;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1900;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =2050;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =2050;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("vruschika")){
     middleX =2100;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =2090;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1950;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2200; // Width of the PNG element
      const pngHeight = 2100; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1900;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =2050;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2100; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1980;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1950;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2400; // Width of the PNG element
      const pngHeight =1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }






    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1830;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =2100;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =2050;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("tula")){
     middleX =2100;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =2090;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1920;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2100; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1900;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =2000;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1900;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1880;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }





    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1830;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =2100;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =2050;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("kumbha")){
     middleX =2100;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =2090;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1920;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2300; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1900;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1900;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1880;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }



    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1830;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =2000;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =2050;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("midhuna")){
     middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 3600; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =2090;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1870;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2300; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1900;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1900;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1880;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }



    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1830;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =2100;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =2050;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("makara")){
     middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 3600; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =2090;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1870;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1900;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1900;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1880;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }








    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1830;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =2100;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =2050;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("dhanussu")){
     middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 3600; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =2090;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1870;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1900;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1920;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1880;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }



    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1720;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1850;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2950; // Width of the PNG element
      const pngHeight =1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =2050;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 3400; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =2050;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("vrushabha")){
     middleX =2100;
      middleY =910;
    pngElement.onload = () => {
      const pngWidth = 3750; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =2090;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1890;
      middleY =1050;
    pngElement.onload = () => {
      const pngWidth = 2400; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =2090;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1900;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1990;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 2400; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1890;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight =2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1870;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 2700; // Width of the PNG element
      const pngHeight =1400;// Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }




    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1830;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =2100;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =2050;
      middleY =940;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("meena")){
     middleX =2000;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3800; // Width of the PNG element
      const pngHeight = 1500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =2090;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1920;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2100; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1900;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =2000;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1900;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1880;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }




    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1720;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1850;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2950; // Width of the PNG element
      const pngHeight =1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =2050;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 3400; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =2050;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("mesha")){
     middleX =2100;
      middleY =910;
    pngElement.onload = () => {
      const pngWidth = 3750; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =2090;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1890;
      middleY =1050;
    pngElement.onload = () => {
      const pngWidth = 2400; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =2090;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1900;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1990;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 2400; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1890;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight =2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1870;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 2700; // Width of the PNG element
      const pngHeight =1400;// Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }














    // Add new element (PNG) in the middle of the canvas
    let middlesX ;
    let middlesY;
    const pngElements = new Image();
    pngElements.src = `${day}.png`;
    if(`${pngElements.src}`.includes("friday.png")){
      middlesX =1700;
      middlesY =940;
    pngElements.onload = () => {
      const pngWidth = 3000; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElements, middlesX - pngWidth / 2, middlesY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else{
      middlesX =1700;
      middlesY =900;
      pngElements.onload = () => {
        const pngWidth = 3000; // Width of the PNG element
        const pngHeight = 1800; // Height of the PNG element
        ctx.drawImage(pngElements, middlesX - pngWidth / 2, middlesY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
    }








    function updatePreviewCanvas(image) {
      previewCanvas.width = previewContainer.clientWidth;
      previewCanvas.height = (previewContainer.clientWidth / image.width) * image.height;

      const scaleFactor = calculateScaleFactor(
        image.width,
        image.height,
        previewCanvas.width,
        previewCanvas.height
      );
      const previewCtx = previewCanvas.getContext("2d");
      previewCtx.clearRect(0, 0, previewCanvas.width, previewCanvas.height);
      previewCtx.drawImage(canvas, 0, 0, previewCanvas.width, previewCanvas.height);

      // Store the preview image separately
      previewImage = canvas.toDataURL();

      downloadButton.disabled = false;
    }
  }
 

  function calculateScaleFactor(originalWidth, originalHeight, maxWidth, maxHeight) {
    const widthScaleFactor = originalWidth / maxWidth;
    const heightScaleFactor = originalHeight / maxHeight;

    return Math.max(widthScaleFactor, heightScaleFactor, 1);
  }
  setTimeout(() => {
    const link = document.createElement("a");
    link.download = "rasiphalaluintelugumakara";
    link.href = previewImage; // Use the preview image data URL
    link.click();
  }, 6000);
  downloadButton.addEventListener("click", () => {

  });
let funk = ()=>{
  const link = document.createElement("a");
    link.download = "image";
    link.href = previewImage; // Use the preview image data URL
    link.click();
}


}, 20000);
setTimeout(() =>{
  

  let daily = [
    {
      title: "అతిపెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "ఈరోజు మీ జీవితంలోనే అతిపెద్ద శుభవార్త!",
      matter: "ఈరోజు మీకు మీ జీవితంలోనే అతిపెద్ద శుభవార్త అందుతుంది దాన్ని విన్న తరవాత మీ ఆనందానికి హద్దులు ఉండవు ",
    },
    {
      title: "ఒక స్త్రీ వల్ల ధనాలభం",
      thumbnail: "ఒక స్త్రీ వల్ల ఇలా ధనాలభం పొందే అవకాశం!",
      matter: "ఈరోజు మీకు మీ జీవిత భాగస్వామి వల్ల ధనాలభం పొందే అవకాశం ఉంది మీరు మాత్రం మీ జీవిత భాగస్వామి ని పూర్తిగా నమ్మాలి శుభం జరుగుతుంది ",
    },
    {
      title: "ఒక స్త్రీ పగబట్టి ఇలా",
      thumbnail: "ఒక స్త్రీ పగబట్టి చేసే ప్రయత్నాలు తెలిస్తే షాక్!",
      matter: "ఈరోజు ఒక స్త్రీ పాత కక్షలు పెట్టుకొని మీ మీద పగబట్టి మిమ్మల్ని ఆర్ధికంగా నష్టపరుచడానికి చెయ్యని ప్రయత్నలంటూ ఉండవు కాని మీ మంచి మనస్సు వల్ల దేవుడు మీ మీద అన్ని ప్రయత్నాలను విఫలం చేస్తారు",
    },
    {
      title: "కొత్త స్త్రీ తో స్నేహం",
      thumbnail: "2 శుభవార్తలు + ఒక కొత్త స్త్రీ తో స్నేహం",
      matter: "ఈరోజు మీరు రెండు పెద్ద శుభవార్తలు వింటారు మరియు అనుకోకుండా మీరు ఒక కొత్త స్త్రీ తో కలిసి ఆకస్మికంగా స్నేహం చేస్తారు",
    },
    {
      title: "పెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "పెద్ద శుభవార్తలు + ఈవిషయంలో జాగ్రత్త",
      matter: "ఈరోజు శుభప్రదంగా ఉంటుంది మీరు ఈరోజు పెద్ద శుభవార్తలు వింటారు ఆ శుభవార్తలు విన్న తరువాత ఆనండంలూ మద్యపానం సేవించడానికి ప్రయత్నాలు చేస్తారు ఇలా చెయ్యకండి మీ ఆరోగ్యం దెబ్బతీస్తుంది జాగ్రత్తగా ఉండండి ",
    },
    {
      title: "ఒక స్త్రీ పగబట్టి ఇలా",
      thumbnail: "ఒక స్త్రీ పగబట్టి ఈవిధంగా చేస్తుంది జాగ్రత్త",
      matter: "ఈరోజు మీ మీద ఒక స్త్రీ పగబట్టి హాని చెయ్యాలని చూస్తున్నారు , మరియు మీ మీద ఒక స్త్రీ ఏడుపు ఉంది మీ వ్యాపారం మరియు అభివృద్ధి మీద ఏడుస్తున్నారు జాగ్రత్తగా ఉండండి",
    },
    {
      title: "బంధువులే మీ సేత్రువులు",
      thumbnail: "మీ బంధువులే మీ సేత్రువులు జాగ్రత్త",
      matter: "మీ బంధువుల్లో కొందరు మీ సేత్రువులు ఉన్నారు వాళ్ళు ఎప్పుడు అవకాశం దొరికితే మిమ్మల్ని నష్టం చెయ్యాలని చూస్తున్నారు ఎవ్వరితో కూడా మీ వ్యాపారం గురించి చెప్పకండి జాగ్రత్తగా ఉండండి వెంనేపోటు పొడుస్తారు",
    }, 
    {
      title: "ఒక స్త్రీ మోసం చేస్తారు",
      thumbnail: "ఒక స్త్రీ ఇలా మోసం చేస్తుంది జాగ్రత్త!",
      matter: "ఈరోజు మీరు ఏంతో నమ్మిన ఒక స్త్రీ మిమ్మల్ని మోసం చేసే అవకాశం ఉంది జాగ్రత్తగా ఉండండి , మీరు మంచివారు కాని అందరు మంచివారు ఉండరు ఎవ్వరిని గుడ్డిగా నమ్మవద్దు",
    },
    {
      title: "ఒక స్త్రీ వల్ల డబ్బులు",
      thumbnail: "ఒక స్త్రీ వలన ఆదాయం + ఈవిషయాల్లో జాగ్రత్త",
      matter: "ఈరోజు మీకు చాలా మంచిరోజు నేడు మీకు మీ జీవిత భాగస్వామి బల్ల ధనాలభం కలుగుతుంది మరియు మీరు మీ జీవిత భాగస్వామి వల్ల చాలా సంతోషంగా ఉంటారు మీ బాధ్యతే ఏంటంటే మీరు కుడా వారిని సంతోషంగా ఉంచండి ",
    },
    {
      title: "స్త్రీ వల్ల శుభవార్తలు",
      thumbnail: "ఒక స్త్రీ వల్ల శుభవార్తలు ! తెలిస్తే షాక్!",
      matter: "ఈరోజు మీకు చాలా మంచిరోజు ఈరోజు మీకు ఒక స్త్రీ వల్ల శుభవార్తలు అందుతాయి ఈలోకంలో మీరే అదృష్టవంతులు అని ఈరోజు మీకు అనిపిస్తుంది మీరు మాత్రం ఆ శుభవార్తలు వినగానే షాక్ అవ్వడం ఖాయం",
    },
    {
      title: "స్త్రీ కాళ్ళ వద్దకు",
      thumbnail: "కోరుకున్న స్త్రీ కాళ్ళ వద్దకు వస్తుంది",
      matter: "ఈరోజు మీరు కూరుకున్న స్త్రీ మీ వ్యాపారం మరియు అభివృద్ధి చూసి వారు మీ కాళ్ళ వద్దకు వస్తారు కాని మీరు మాత్రం మీ వ్యాపారం మరియు అభివృద్ధి ని ఆపకండి ",
    },
    {
      title: "ఒక స్త్రీ మోసం చేస్తారు",
      thumbnail: "ఒక స్త్రీ వెన్నెపాటు పొడుస్తారు జాగ్రత్త!",
      matter: "ఈరోజు మీరు ఎంతగా నమ్మిన ఒక స్త్రీ మిమ్మల్ని మోసం చేస్తారు , దీనివల్ల మీరు మానసికంగా డిప్రెషన్ లోకి పోవచ్చు జాగ్రత్తగా ఉండండి లోకంలో డబ్బే అంత అని తెలుసుకోండి డబ్బు ఉంటె మీరే రాజు మీరే మంత్రి",
    },
    {
      title: "స్త్రీ వల్ల శుభవార్తలు",
      thumbnail: "ఒక స్త్రీ వల్ల శుభవార్తలు ! తెలిస్తే ఎగిరి గంటేస్తారు",
      matter: "ఈరోజు మీరు ఒక స్త్రీ వల్ల శుభవార్తలు అందుకుంటారు ఈలోకంలో మీరే అదృష్టవంతులు అని ఈరోజు మీకు అనిపిస్తుంది మీరు మాత్రం ఆ శుభవార్తలు వినగానే మీరు ఎగిరి గంతెయ్యడం మాత్రం ఖాయం",
    },
    {
      title: "ఒక స్త్రీ వల్ల ఘూరం",
      thumbnail: "ఒక స్త్రీ వల్ల ఘోరం జరుగుతుంది జాగ్రత్త!",
      matter: "ఈరోజు మీరు ఒక స్త్రీ వల్ల భారిగా నష్టపూతారు దీనివల్ల మీరు బాధ పాడుతారు కాని దానివల్ల ఏమి లాభం లేదు ఇప్పటికైనా పోయింది ఏమిలేదు అన్ని మరిచి మీరు మీ లక్ష్యం మీద దృష్తి పెడితే శుభం కలుగుతుంది",
    },
    {
      title: "కుటుంబంలో వీరికి మరనగందం",
      thumbnail: "కుటుంబంలో వీరికి మరణ గండం జాగ్రత్త!",
      matter: "ఈరోజు మీ కుటుంబంలో పెద్దవారిని ఎలెక్ట్రానిక్ వస్తువులనుంచి దూరంగా ఉంచండి ప్రమాదాలు జరిగే అవకాశాలు ఉన్నాయి అప్ప్రమత్తంగా ఉండండి వారి ఆరోగ్యం మీద శ్రెద్ద పెట్టండి శుభం కలుగుతుంది ",
    },
    {
      title: "అందమైన స్త్రీ తో ",
      thumbnail: "ఈరోజు అదృష్టం మీదే! అందమైన స్త్రీ తో",
      matter: "ఈరోజు ఈ మొత్తం ప్రపంచంలో మీరే అదృష్టవంతులు అని మీకు అనిపిస్తుంది ఈరోజు మీరు మీకు నచ్చిన ఇక అందమైన స్త్రీ తో బయటకు వెళ్లి సినిమాలు షికార్లు అని జాలిగా గడుపుతారు",
    },
    {
      title: "స్త్రీ తో మనసులోని మాట",
      thumbnail: "అందమైన స్త్రీ తో మనసులోని మాట చెప్తారు ",
      matter: "ఈరోజు మీరు మీకు నచ్చిన ఒక అందమైన స్త్రీ తో ఎప్పటినుంచో చెప్పాలనుకుంటున్న మీ మనస్సులోని మాట ఈరోజు చెపుతారు మరియు ఇలా చేస్తే ఈరోజు మీరు షాకింగ్ న్యూస్ వింటారు ",
    },
    {
      title: "పెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "పెద్ద శుభవార్తలు + ఒక స్త్రీ పగబట్టి ఇలా చేస్తది",
      matter: "ఈరోజు మీరు పెద్ద శుభవార్తలు వింటారు మరియు ఈరోజు ఒక స్త్రీ పగబట్టి మీ శుభవార్తల మీద ఈర్ష తో నష్టం చెయ్యడానికి ప్రయత్నాలు చేస్తారు కాని మీరు మీ అదృష్టం వల్ల తప్పించుకుంటారు",
    },
    {
      title: "ఒక స్త్రీ తో సరదాగా ఉలా",
      thumbnail: "ఒక స్త్రీ తో సరదాగా ఇలా చేస్తారు...! జాగ్రత్త",
      matter: "ఈరోజు మీరు సరదా కోసం మీ ప్రేయసితో బయటకు పోయి సినిమాలకు రెస్టారెంట్లకు పోయి చివరికి మీరు మీ దగ్గర ఉన్న డబ్బును మొత్తం ఐపోచేస్తారు జాగ్రత్తగా ఉండండి డబ్బును ఈరోజు మీరు ఆదా చేస్తే అవి మీకు రేపు పనికి వస్తాయి",
    },
    {
      title: "స్త్రీ వల్ల ఆనందం",
      thumbnail: "ఒక స్త్రీ వల్ల ఆనందానికి హద్దులు ఉండవు",
      matter: "ఈరోజు మీ జీవితానికి అర్ధమోచ్చే ఒక పెద్ద బంగారు శుభావర్తని మీ జీవిత భాగస్వామి మీకు అందిస్తారు ఈరోజు మీరు ఒక అందమైన స్త్రీ తో జాలిగా గడుపుతారు ఈరోజు ఆ అందమైన స్త్రీ వల్ల ఆకస్మికంగా ధనలాభం పొందే అవకాశం కుడా ఉంది",
    },
    {
      title: "వీరితో గొడవలు జాగ్రత్త",
      thumbnail: "ఈరోజు వీరితో గొడవలు జరుగుతాయి జాగ్రత్త",
      matter: "ఈరోజు మీరు ఎప్పటినుంచో గొడవ పదాలనుకుంటున్న మీ సేత్రువులు మిమ్మల్ని గెలకడంతో మీరు వారితో గొడవ పడొచ్చు కాని గొడవ పరిష్కారం కాదని మీరు తెలుసుకూవాలి కాని గొడవ జరిగితే మాత్రం గెలిసేది మీరే",
    },
    {
      title: "అందమైన స్త్రీ తో ఇలా",
      thumbnail: "ఒక అందమైన స్త్రీ తో సరదాలు + ఆకస్మిక ధనాలభం",
      matter: "ఈరోజు మీరు ఒక అందమైన స్త్రీ తో జాలిగా గడుపుతారు ఈరోజు ఆ అందమైన స్త్రీ వల్ల ఆకస్మికంగా ధనలాభం పొందే అవకాశం కుడా ఉంది",
    },
    {
      title: "స్త్రీ వల్ల నష్టాలు",
      thumbnail: "ఓక స్త్రీ వల్ల భారీగా నష్టపోతారు జాగ్రత్త!",
      matter: "ఈరోజు మీరు మీ జీవిత భాగస్వామి చేసిన ఒక తప్పు వల్ల బిజినెస్ లో భారి నష్టాలను చూస్తారు దీనివల్ల మీరు వారిమీద కోప్పడుతారు ఆఖరికి దీంట్లో వాళ్ళు కావాలని చెయ్యలేదని తెలుసుకొని క్షమిస్తారు",
    },
    {
      title: "ఒక స్త్రీ పగబట్టి ఇలా",
      thumbnail: "ఒక స్త్రీ పగబట్టి ఈవిధంగా చేస్తుంది",
      matter: "ఈరోజు మీ మీద ఎప్పటినుంచో కక్ష పెట్టుకున్న ఒక స్త్రీ ఈరోజు పగతీర్చుకోవడానికి మిమ్మల్ని మానసికంగా హాని చేస్తారు అది కుడా విఫలం అయితే శారీరికంగా హాని చేస్తారు జాగ్రత్తగా ఉండండి ",
    },
    {
      title: "ఒక స్త్రీ తో గొడవలు",
      thumbnail: "ఈరోజు ఒక స్త్రీ తో గొడవలు జరుగుతాయి",
      matter: "ఈరోజు మీకు ఒక స్త్రీ తో గొడవలు జరుగుతాయి మీరు ఎంత ఒద్దు అనుకున్న గొడవలు తప్పవు దీనిని ద్రుష్టిలో పెట్టుకొని మీరు గొడవని ఆపలేరు అయితే మీరు కోపంలో మీరు చెప్పే మాటలపై మీరు తరువాత ఆందోళన పాడుతారు జాగ్రత్త key",
    },
    {
      title: "స్త్రీ తో మనసులోని మాట",
      thumbnail: "ఒక స్త్రీ తో మనసులోని విషయం మాట్లాడతారు",
      matter: "ఈరోజు మీరు ఒక స్త్రీ తో మీ మనసులోని మాట మాట్లాడుతారు మీరు వారిని ఇష్టపడుతున్నారని వారితో చెపుతారు ఈవిషయం చెప్పినతరువాత మీకు ఒక షాకింగ్ వార్త అందుతుంది జాలిగా గడుపుతారు",
    },
    {
      title: "జీవితంలో ఒక స్త్రీ ఎంట్రీ",
      thumbnail: "మీ జీవితంలో ఒక స్త్రీ ఎంట్రీ .. అన్ని శుభవర్తలే",
      matter: "ఈరోజు మీ జీవితంలో ఒక కొత్త స్త్రీ వస్తుంది తను చాల బుద్ధిమంతురాలు మరియు అందానికి యువరాణి మీకు ఆ స్త్రీ చాల నచ్చుతుంది మరియు మీరు ఆ స్త్రీ తో స్నేహం కూడా చెయ్యడానికి ప్రయత్నాలు చేస్తారు",
    },
    {
      title: "ఒక స్త్రీ వల్ల మోసపోతారు",
      thumbnail: "ఒక స్త్రీ ని గుడ్డిగా నమ్మవద్దు! మీరు మోసపోవచ్చు",
      matter: "మీరు ప్రాణంగా ప్రేమించిన స్త్రీ ఈరోజు మిమ్మల్ని విదిచిపోవడంతో మీరు తట్టుకోలేరు మీరు డిప్రెషన్ లో కూడా పోవచ్చు కాని అదే సమయంలో మీ తల్లితండ్రులవల్ల మీకు జీవితం అంటే ఒక అర్ధం ఒస్తుంది వారి కోసమే బ్రతుకుతారు",
    },
    
    {
      title: "స్త్రీ వల్ల బంగారు శుభవార్త",
      thumbnail: "ఒక స్త్రీ వల్ల బంగారు శుభవార్తలు + ఇలా చేయకండి",
      matter: "ఈరోజు మీ జీవితానికి అర్ధమోచ్చే ఒక పెద్ద బంగారు శుభావర్తని మీ జీవిత భాగస్వామి మీకు అందిస్తారు ఆ శుభవార్త మీ జీవితాన్నే మార్చేస్తుంది కాబట్టి ఈరోజు మీరు ఆనందంలో మీరు ఎం చేయ్యలనుకున్తున్నారో ఆ పనులన్నీ చేసేస్తారు",
    },
  
    {
      title: "ప్రియమైన స్త్రీ ని కలుస్తారు",
      thumbnail: "ఒక ప్రియమైన స్త్రీ ని కలుస్తారు + ఆకస్మిక ధనాలభం",
      matter: "ఈరోజు మీరు మీకు ఏంటో ప్రియమైన స్త్రీ ని కలుస్తారు కలిసి సరదాగా మాట్లాడుకుంటారు ఇంకా ఈరోజు చివరిలో మీకు ఆకస్మిక ధనలాభం కలుగడంతో మీ ఆనందానికి హద్దులు ఉండవు ఆనందంలో పార్టి కూడా చేసుకుంటారు",
    },
    {
      title: "2 పెద్ద శుభవార్తలు",
      thumbnail: "2 పెద్ద శుభవార్తలు + ఈవిషయంలో జాగ్రత్త!",
      matter: "ఈరోజు మీరు ఎప్పటినుండో ఎదురుచూస్తున్న శుభవార్త వింటారు మరియు మీరు అనుకోకుండా ఒక స్త్రీ వల్ల ఇంకొక శుభవార్తలు అందుకుంటారు సంతోషంలో మీరు మద్యం సేవించవచ్చు ఇలా చెయ్యకండి జాగ్రత్త",
    },
    {
      title: "ఒక స్త్రీ వల్ల గొడవలు",
      thumbnail: "ఒక స్త్రీ వల్ల గొడవలు + ఆకస్మిక సంఘటనలు",
      matter: "ఈరోజు మీరు మీకు నచ్చిన ఒక స్త్రీ కోసం వేరే వాళ్లతో గొడవలలో పలుగోనతారు కాని ఆకస్మికంగా ఆ గొడవ చాల పెద్దగా కావడంతో మీరు గొడవని ముగించడానికి ప్రయత్స్తారు కాని మీరు జాగ్రత్తగా ఉండాలి దెబ్బలు కూడా తగలోచ్చు",
    },
    {
      title: "స్త్రీ వల్ల ప్రమాదాలు",
      thumbnail: "ఒక స్త్రీ వల్ల ప్రమాదాలు ముంచుకోస్తున్నాయి జాగ్రత్త",
      matter: "ఈరోజు మీకు ఒక స్త్రీ వల్ల ప్రమాదాలు మున్చుకోస్తునాయి కాబట్టి మీరు అప్ప్రమత్తంగా ఉండండి వాహనాలు నడిపెటప్పుడు ఒక స్త్రీ ని ఆకర్షించడానికి మీరు మీ వాహనాన్ని అతివేగంలో నడుపుతారు దీనివల్ల ప్రమాదం కూడా జరుగవచ్చు",
    },
    {
      title: "ఒక స్త్రీ నష్టం చేస్తారు",
      thumbnail: "ఒక స్త్రీ ఈవిధంగా నష్టం చేస్తున్నారు + ఇలా చెయ్యండి",
      matter: "మీరు మిమ్మల్ని ప్రేమిస్తున్నారు అనుకుంటున్నా స్త్రీ మీదగ్గర మీ డబ్బుకోసమే ఉన్నారు . ఈరోజు బయట ఆ స్త్రీ మిమ్మల్ని షాపింగ్ కు తెసుకేల్లి మీ లక్షలు నష్టం చేస్తారు జాగ్రత్త",
    },
    {
      title: "మంచి శుభవార్తలు ఉన్నాయి",
      thumbnail: "మంచి శుభవార్తలు + ఈవిషయాల్లో జాగ్రత్త",
      matter: "ఈరోజు మీ జీవితానికి అర్ధమోచ్చే ఒక పెద్ద బంగారు శుభావర్తని మీ జీవిత భాగస్వామి మీకు అందిస్తారు ఆ శుభవార్త మీ జీవితాన్నే మార్చేస్తుంది  సంతోషంలో మీరు మద్యం సేవించవచ్చు ఇలా చెయ్యకండి జాగ్రత్త",
    },
    {
      title: "ఒక స్త్రీ తో గొడవ",
      thumbnail: "ఈరోజు ఒక స్త్రీ తో గొడవ జరుగుతుంది జాగ్రత్త",
      matter: "ఈరోజు మీకు ఒక స్త్రీ తో ఆస్తి మరియు దనం విషయంలో గొడవలు జరుగుతాయి కాని గొడవలో మీరు నూరు జారి చెప్పకుదని మాటలు చెపుతారు గొడవ తరువాత మీరు ఎందుకుచేప్పరని బాధపడి ఆ స్త్రీ తో క్షమాపణ అడుగుతారు దీని బదులు మీరు ముందే నూరు అదుపులో పెట్టుకోండి",
    },
    {
      title: "సేత్రువులు ఇలా చేస్తారు",
      thumbnail: "రహస్య సెత్రువులు ఈవిధంగా చేస్తున్నారు జాగ్రత్త",
      matter: "ఈరోజు రహస్య సేత్రువులు మీకు తెలియకుండానె మిమ్మల్ని ఆర్ధికంగా మరియు మీ కుతుమ్బంన్ని హాని చెయ్యడానికి చెయ్యని ప్రయత్నలుండవు కాబట్టి మీరు ముందే జాగ్రత్తగా ఉండండి ఎవ్వరిని గుడ్డిగా నమ్మవద్దు మోసపోవచ్చు",
    },
    {
      title: "అమ్మాయి కాళ్ళ వద్దకు",
      thumbnail: "అందమైన అమ్మాయి మీ కాళ్ళ వద్దకు వస్తుంది",
      matter: "ఈరోజు మీ స్వప్న సుందరి మీ ఉన్నత చదువులు మరియు వ్యాపారంలో అభివృద్ధి చూసి ఒచ్చి మీ కాళ్ళ వద్దకు పడుతది . ఈరోజు మీరు పడ్డ కష్టం వ్యర్ధం కాలేదని మీరు తెలుసుకుంటారు వ్యాపారం మరియు చదువులూ ఇంకా ముందుకు సాగాలని మీకు మోటివేషన్ దొరుకుతుంది",
    },
    {
      title: "స్త్రీ వల్ల పెద్ద శుభవార్త",
      thumbnail: "ఒక స్త్రీ వల్ల పెద్ద శుభవార్త + ఆకస్మిక ధనాలభం",
      matter: "ఈరోజు మీకు ఒక స్త్రీ వల్ల పెద్ద శుభవార్త అందుతుంది మరియు వార్త వినంగానే మీ మడ్ ఒక్కసారిగా మంచిగా మారడంతో మీరు మీ పార్టనర్ తో కలిసి సినిమాకు పోతారు మరియు రాత్రి సమయంలో మీకు ధనలాభం కలుగుతుంది ",
    },
    {
      title: "స్త్రీ తో సరదాగా ఉలా",
      thumbnail: "ఒక స్త్రీ తో కలిసి సరదాగా చేసే పనులు తెలిస్తే షాక్ !",
      matter: "ఈరోజు మీరు టైం పాస్ చెయ్యడానికి ఒక స్త్రీ తో కలిసి ఒక మంచి రెస్టారెంట్ కు వెళ్లి భూజనం చెయ్యడం ఇష్టపడుతారు మరియు సినిమాకు పోయి జాలిగా గడుపుతారు ఈరోజు మీకు ఎప్పటికి గుర్తుండిపోయేలా గడుపుతారు",
    },
    {
      title: "సెత్రువులు ఇలా చేస్తారు",
      thumbnail: "పెద్ద శుభవార్తలు + సెత్రువులు ఇలా చేస్తారు",
      matter: "ఈరోజు మీకు చాల పెద్ద శుభవార్తలు అందుతాయి దీనితో మీరు చాల సంతోషంగా ఉంటారు మీ సంతోషం మీ సేత్రువులు చూడలేరు వారు మీకు ఎదో ఒక హాని చెయ్యాలని చూస్తారు కాని రోజు ఆకరికి ఏమి చెయ్యలేక అలిసి వెళ్ళిపోతారు",
    },
    {
      title: "ప్రాణగండం ఉంది జాగ్రత్త",
      thumbnail: "వీరితో గొడవలు + ప్రాణగండం ఉంది జాగ్రత్త",
      matter: "ఈరోజు మీకు మీ సేత్రువులతో గొడవలు జరుగుతాయి మరియు మీరు ఈరోజు మీ కోపాన్ని అడుపులూ ఉంచాలి లేదంటే మీకు గొడవలో తీవ్ర గాయలవల్ల ప్రాణగండం ఉంది దేవుడ్ని స్మరించండి గొడవ దేనికి కూడా సమాధానం కాదు అని మీరు తెలుసుకోవాలి",
    },
    {
      title: "స్త్రీ వల్ల పండగలు",
      thumbnail: "ఒక స్త్రీ వల్ల ఈరోజు పండుగలా ఉంటుంది",
      matter: "ఈరోజు ఒక స్త్రీ వల్ల వేడుకలా ఉంటుంది మీకు నచ్చిన స్త్రీ తో ఈరోజు మీరు బయటకు పోతారు మరియు వారితో సినిమాలకు పోయి జాలిగా గడుపుతారు ఆ స్త్రీ వల్ల రోజు చివర్లో ధనాలభం కూడా కావొచ్చు శుభం కలుగుతుంది ",
    },
    {
      title: "స్త్రీ మోసం చేస్తుంది",
      thumbnail: "ఒక స్త్రీ ఇలా మోసం చేస్తది + ఇలా చెయ్యండి",
      matter: "ఈరోజు మీరు గుడ్డిగా నమ్మిన ఒక స్త్రీ మిమ్మల్ని మోసం చేస్తది దేనిని మీరు తట్టుకోలేరు కోపంలూ మీరు డిప్రెషన్ లో కూడా పోవచ్చు కాని మీ తల్లి తండ్రులకు ఈ విషయం తెలిసి వారు మిమ్మల్ని దీని నుండి బయటకు తెస్తారు",
    },
    {
      title: "స్త్రీ మీ కాళ్ళ వద్దకు",
      thumbnail: "ఒద్దు అన్న స్త్రీ మీ కాళ్ళ వద్దకు వస్తుంది",
      matter: "మీ దగ్గర డబ్బులు లేవు మీరు బిచ్చగాల్లు అని మిమ్మల్ని వదిలి పాయిన ఆ స్త్రీ ఈరోజు మీ అభివృద్ధి మరియు మీ ఉన్నత చదువులు చూసి మల్లి మీ కాళ్ళ వద్దకు ఒస్తుంది మల్లి తనను దగ్గరుకు తెసుకున్తారా? కామెంట్ లో చెప్పండి  ",
    },
  
    {
      title: "పెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "పెద్ద శుభవార్తలు ఉన్నాయి + స్త్రీ వల్ల పండుగ",
      matter: "ఈరోజు మీకోసం పెద్ద శుభవార్తలు ఎదురుచుస్తునాయి మీరు పడ్డ కష్టానికి ప్రతిఫలం ఈరోజు మీకు శుభవార్త అందుతుంది మరియు మీ అభివృద్ది ని చూసి ",
    },
    {
      title: "స్త్రీ వల్ల ధనలాభం",
      thumbnail: "అందమైన స్త్రీ వల్ల ధనలాభం + పెద్ద శుభవార్త",
      matter: "ఈరోజు ఒక అందమైన స్త్రీ వల్ల ధనాలభం కలుగుతుంది ఇంకా రోజు మధ్యలో మీకు పెద్ద శుభవార్త అందుతుంది మీకు ఆ శుభవార్త అందుతదని మీరు కలలో కూడా ఉహించి ఉండరు కాని మీ అదృష్టం వల్ల మీకు ఆ శుభవార్తః అందుతుంది ",
    },
    {
      title: "కుటుంబంలో వీరికి ప్రాణగండం",
      thumbnail: "మీ కుటుంబంలో వీరికి ఇలా ప్రాణగండం జాగ్రత్త",
      matter: "ఈరోజు మీ కుటుంబంలో వ్రుదుల అనారోగ్యం వల్ల వారికి ప్రాణగండం ఉంది కాబట్టి పుష్టిక ఆహారాన్ని సేవించాలి మరియు దేవుడ్ని స్మరించాలి మీరు చేసిన పుణ్యకార్యాల వల్ల దేవుడు మీ గండాన్ని తొలగిస్తారు శుభం జరుగుతుంది",
    },
    {
      title: "స్త్రీ వల్ల శుభవార్తలు",
      thumbnail: "మీరు ఊహించని స్త్రీ శుభవార్తలు చెప్తారు ",
      matter: "ఈరోజు మీరు కలలో కూడా ఉహించని ఒక అందమైన స్త్రీ నోటితో మీరు శుభావర్తలు వింటారు ఈవార్త వినగానే మీ మనస్సు గాలిలో తేలినట్లు అయిపోతుంది మీరు మీ బంధువులందరితో ఈ వార్తని పంచుకుంటారు జాలిగా గడుపుతారు",
    },
    {
      title: "స్త్రీ మీ కాళ్ళ వద్దకు",
      thumbnail: "మీరు కావాలనుకున్న స్త్రీ మీ కాళ్ళ వద్దకు",
      matter: "ఈరోజు మీరు ఎప్పటినున్డూ కోరుకుంటున్న స్త్రీ మీ అదృష్టం కొద్ది మీ దగ్గర సహాయం కోరుతూ వస్తుంది మీరు కాని తనకు సహాయం చేస్తే మాత్రం మీ ఇద్దరి మధ్య బంధం ఇంకా గట్టిపడుతుంది కాని ఆ సహాయం చెయ్యడానికి కొద్దిగా శ్రీమ పడాల్సి ఉంటది",
    },
  
    {
      title: "పెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "పెద్ద శుభవార్తలు + ఒక స్త్రీ ఇలా చేస్తుంది",
      matter: "ఈరోజు మీకు మీరు ఎన్నో సంవచరాల నుండి ఎదురుచూస్తున్న శుభవార్త ఒకటి అందడం వల్ల మీరు సంతోషంగా ఎగిరి గంతులేస్తారు మరియు మీ మిత్రులకి పార్టి ఇస్తారు మొత్తానికి ఈరోజు జాలిగా గడుపుతారు కాని ఆ శుభవార్త మీ జీవితాన్ని మార్చేస్తుంది",
    },
    {
      title: "ఒక స్త్రీ మోసం చేస్తారు",
      thumbnail: "ఒక స్త్రీ మిమ్మల్ని ఈవిధంగా మోసం చేస్తున్నారు",
      matter: "ఈరోజు మీరు కళ్ళు ముసి నమ్మిన ఒక స్త్రీ మిమ్మల్ని వెంనేపోటు పొడుస్తారు మిమ్మల్ని కాదని మోసం చేస్తారు దీనితో మీరు చాల బాధ పాడుతారు కాని మీ తల్లితండ్రులు మీకు సపోర్టుగా ఉంటారు దీనివల్ల వాళ్ళని మించిన వారు లేరని మీకు తెలుస్తుంది",
    },
    {
      title: "స్త్రీ తో మనసులోని మాట",
      thumbnail: "నచ్చిన స్త్రీ తో మీ మనసులోని మాట చెపుతారు",
      matter: "మీరు ప్రతిరోజూ కలలో చూసే మీకు నచ్చిన ఒక స్త్రీ తో ఈరోజు మీరు మీ మనస్సులోని మాట చెపుదామని మీరు ఫిక్స్ అవుతారు ఇలా చెయ్యడానికి ఇదే సరైన సమయం శుభవార్తలు కూడా అందవచ్చు ఏది జరిగినా మన మంచికే అని గుర్తుపెట్టుకోండి ",
    },
    {
      title: "ఎవరంలో ఇలా జరిగిద్ది",
      thumbnail: "ఈవారంలో ఏం జరుగుతుందో తెలిస్తే షాక్",
      matter: "ఈవారంలో మీ వృత్తికి మీరే రాజు మీరే మంత్రి బిజినెస్ లో మిమ్మల్ని మించినోల్లు ఎవ్వరు ఉండరు కొత్త స్త్రీ తో పరిచయాలు జరుగుతాయి మరియు ధనాలభం కలుగుతుంది",
    },
    {
      title: "వీరే మీ సెత్రువులు",
      thumbnail: "వీరే మీ సెత్రువులు + ఒక స్త్రీ తో జాగ్రత్త",
      matter: "ఈరోజు మీరు మీ సేత్రువుల పేర్లు తెలుసుకుంటారు మరియు ఒక స్త్రీ మీ రహస్య సేత్రువు మీకు ఇప్పటివరుకు కలిగిన హాని మొత్తం మీ సేత్రువులనుంచే అని ఈరోజు మీకు తెలిసి వస్తుంది అప్ప్రమత్తంగా ఉండండి",
    },
    {
      title: "స్త్రీ కాళ్ళ వద్దకు",
      thumbnail: "మీరు ఒద్దు అని విడిచిపోయిన స్త్రీ కాళ్ళ వద్దకు",
      matter: "మీరు డబ్బు లేనివారు అని మిల్లల్ని చులకనగా చుసిన ఒక స్త్రీ ఈరోజు మీ వ్యాపారం మరియు అభివృద్ధి చూసి మల్లి మీ కాళ్ళ వద్దకు వస్తుంది కాని వచ్చిన తరువాత మీరు మీ దృష్టి ని అటు మల్లిన్చాకండి మీ వ్యాపారాన్ని ఇంకా పెంచుతూనే ఉండాలి",
    },
    {
      title: "ఒక స్త్రీ వల్ల శుభవార్తలు",
      thumbnail: "ఒక స్త్రీ వల్ల అతిపెద్ద శుభవార్తలు తెలిస్తే షాక్",
      matter: "ఈరోజు మీ జీవితంలూ ఎప్పుడు అందని శుభవార్తలు ఈరోజు మీకు ఒక స్త్రీ వల్ల అందుతాయి వాటిని విని మీరు ఎగిరి గంతులేస్తారు మీ ఆనందానికి హద్దులు ఉండవు ఆ శుభవార్తలు మీ జీవితాన్నే మార్చేస్తాయి రెడీగా ఉండండి ",
    },
    {
      title: "ఒక స్త్రీ పగబట్టి ఇలా",
      thumbnail: "ఒక స్త్రీ పగబట్టి చేసే ప్రయత్నాలు చుస్తే చాక్",
      matter: "ఈరోజు మీపైన ఎంతోకాలంగా కక్షగుడి మీ ప్రానసేత్రువు ఒక స్త్రీ మిమ్మల్ని అన్ని విధాలుగా హాని చెయ్యడానికి ప్రయత్నాలు చేస్తారు కాని మీరు చాలా ధైర్యవంతులు కావడంతో మీరు వాటన్నిటినుంచి సులభంగా తప్పించుకుంటారు ",
    },
    {
      title: "పెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "పెద్ద శుభవార్తలు ఉన్నాయి వీరు నక్కతోకతొక్కారు",
      matter: "ఈరోజు మీరునక్కతోకతొక్కారు మీకు ఈరోజు పెద్ద శుభవార్తలు అందుతాయి వాటిని విని మీ మనసు గాలిలో తేలడం మాత్రం ఖాయం ఈరోజు మీకు శుభవార్తలు విన్న తరువాత ఆనదందానికి హద్దులు ఉండవు ఎగిరి గంతులు వేస్తారు",
    },
    {
      title: "ఒక స్త్రీ వల్ల ప్రాణగండం",
      thumbnail: "ఒక స్త్రీ వల్ల ప్రాణగండం + ఈవిషయాల్లో జాగ్రత్త",
      matter: "ఈరోజు మీకు ఒక స్త్రీ వల్ల ప్రాణగండం ఉంది ఎలా అంటే ఈరోజు మీరు ఒక స్త్రీ ని ఆకట్టుకోవడానికి వాహనాన్ని అతివేగంతో నడుపడంతో మీకు ఆపదలు జరిగే అవకాశం ఉంది జాగ్రత్తగా ఉండండి మరియు వాహనాన్ని ఇంటిదగ్గర మీకోసం ఎదురుచూస్తున్నా వాళ్ళ కోసం నెమ్మదిగా తోలండి",
    },
    {
      title: "స్త్రీ తో ఇలా చేస్తారు",
      thumbnail: "శుభవార్త తెలిస్తే ఎగిరి గంటెస్తారు ఒక స్త్రీ తో",
      matter: "ఈరోజు మీ రోజువారి బ్రతుకులూ ఒక్కసారిగా పెద్ద శుభవార్త ఒకటి అందడంవల్ల మీరు మీ ప్రేయసితో కలిసి ఎంజాయ్ చెయ్యడానికి బయటకు సినిమాలు అని షికార్లకు పోతారు ఈరోజు మీ జీవితంలో ఎప్పటికి గుర్తుండిపోతుంది",
    },
    {
      title: "స్త్రే తో సరదాగా ఉలా",
      thumbnail: "అందమైన స్త్రీ తో సరదా కోసం ఇలా చేస్తారు ",
      matter: "ఈరోజు మీకు చాల అదృష్టమైన రోజు మీరు కలలో కూడా ఉహించని అందమైన స్త్రీ తో ఈరోజు మీరు సరదాగా షికారుకు వెళ్లి జాలిగా గడుపుతారు మరియు మీ ఇద్దరి బంధం దీనివల్ల ఇంకా ద్రుదపడుతుంది",
    },
    {
      title: "ఒక స్త్రీ కాళ్ళ దగ్గర",
      thumbnail: "శుభవార్త ! ఒక స్త్రీ ఈరోజు మీ కాళ్ళ దగ్గర",
      matter: "ఈరోజు శుభవార్త అందుతుంది మీరు పేదవాళ్ళు అని మిమ్మల్ని వదిలిపొఇన ఒక స్త్రీ ఈరోజు మీ అభివృద్ధి మరియు దానం చూసి మల్లి మీ కాళ్ళ దగ్గర రావడం ఖాయం",
    },
    {
      title: "స్త్రీ వల్ల గుండెలుపగిలే వార్త",
      thumbnail: "ఒక స్త్రీ వల్ల గుండెలు పగిలే వార్తలు జాగ్రత్త",
      matter: "ఈరోజు మీరు ఎంతగా నమ్మిన స్త్రీ తరుపునుంచి మీకు గుండెలు పగిలే వార్తలు వింటారు ఆ వార్తలు ఏంటంటే వారి ఆరోగ్యం అస్సలు బాగాలేదు మరియు ఆసుపత్రిలూ వారికి చాల ఖర్చులు ఉన్నాయి ఇది విన్న తరువాత మీరు వారిని ఆర్ధికంగా సహాయం చేస్తారు",
    },
    {
      title: "ఒక స్త్రీ మిమ్మల్ని హాని",
      thumbnail: "ఒక స్త్రీ ఇలా హాని చేస్తుంది ఇప్పుడే తెలుసుకోండి",
      matter: "ఈరోజు మీకు ఒక స్త్రీ పగబట్టి శారీరికంగా హాని చెయ్యడానికి చెయ్యని ప్రయత్నాలు ఉండవు కావున మీరు బయటకు వెళ్ళేటప్పుడు దేవుడ్ని స్మరించి జాగ్రత్తగా వెళ్ళండి మీకు ఎలాంటి హాని కలగదు",
    },
    {
      title: "మీ మీద స్త్రీ దృష్టి",
      thumbnail: "మీ మీద ఒక స్త్రీ చేసుదృష్టి జాగ్రత్త",
      matter: "మీ మీద ఒక స్త్రీ చేడుద్రుష్టి ఈలోకంలో చేడుద్రుష్టి అనేది ఒక రాజుని కూడా బిచ్చగాడు లా చెయ్యొచ్చు మీ సంపద మీద ఒక స్త్రీ ఏడుస్తుంది ఇది మీరు జాగ్రత్తగా ఉండాల్సిన సమయం అప్ప్రమత్తంగా ఉండండి",
    },
    {
      title: "ఒక స్త్రీ వల్ల శుభవార్తలు",
      thumbnail: "అన్ని శుభవార్తలే మీ జీవితంలో ఒక స్త్రీ ఎంట్రీ",
      matter: "ఎప్పటినుండో బ్రేక్ లో ఉన్న మీ జీవితం ఒక స్త్రీ రావడంతో దూసుకుపోతుంది , అవును ఈరోజు మీకు అన్ని శుభవార్తలు అందుతాయి మరియు మీ జీవితంలూ ఒక స్త్రీ ఎంట్రీ ఇస్తుంది ",
    },
    {
      title: "స్త్రీ వల్ల పెద్ద శుభవార్తలు",
      thumbnail: "ఒక స్త్రీ వల్ల 3 పెద్ద శుభవార్తలు + ఇలా చెయ్యకండి",
      matter: "ఈరోజు మీరు ఒక స్త్రీ వల్ల మూడు పెద్ద శుభావర్హలు అందుకుంటారు మరియు శుభవార్తలు అందుకున్న వెంటనే మీరు ఆ విషయాలను మీ తల్లి తండ్రులకు ముందుగా చెపుతారు ఎందుకంటే ఈలోకంలో వారిని మించి మీకు ఎవ్వరు లేరు",
    },
  ];
  const today = new Date();
  let tomorrow = new Date(today);
  tomorrow.setDate(tomorrow.getDate() + 2);

  let dayOfWeekIndex = tomorrow.getDay();
  let dayOfWeekArray = [
    "sunday",
    "monday",
    "tuesday",
    "wednesday",
    "thursday",
    "friday",
    "saturday"
  ];

  

  let monthIndex = tomorrow.getMonth();
  let monthArray = [
    "january",
    "february",
    "march",
    "april",
    "may",
    "june",
    "july",
    "august",
    "september",
    "october",
    "november",
    "december",
  ];
let count = Number(localStorage.getItem("count") )|| 23;
  let dayname = dayOfWeekArray[dayOfWeekIndex];
  let monthname = monthArray[monthIndex];
  let datenumber = tomorrow.getDate().toString().padStart(2, "0");

  const textInput = document.getElementById("text-input");
  const textInput2 = document.getElementById("text-input2");
  const fontSelect = document.getElementById("text-input");
  const colorSelect = document.getElementById("color-select");
  const sizeRange1 = document.getElementById("size-range-1");
  const sizeRange2 = document.getElementById("size-range-2");
  const positionRangeX = document.getElementById("position-range-x");
  const previewContainer = document.getElementById("preview-container");
  const previewCanvas = document.getElementById("preview-canvas");
  const downloadButton = document.getElementById("download-button");
textInput2.value = datenumber;

const DailyOnceSet = function(){

  let currentDate = new Date();
  let currentDay = currentDate.getDate();
    localStorage.setItem('thumbdate', currentDay);
  }
  const Shiftdown = function () {
    let today = new Date().getDate();
    let yesterday = localStorage.getItem('thumbdate') || "";
    if(today!=yesterday){
      if(Number(localStorage.getItem("count"))+1>daily.length){
        localStorage.setItem("count",0);
      }
      else{
        
      localStorage.setItem("count",++count);
      localStorage.setItem("var4",daily[count].thumbnail);
      localStorage.setItem("var3", daily[count-1].thumbnail)
      localStorage.setItem("var2", daily[count-2].thumbnail)
      localStorage.setItem("var1", daily[count-3].thumbnail)



      }
    }  
  }

Shiftdown();
DailyOnceSet();

let var4 = localStorage.getItem("var4");
let var3;
let var2;
let var1;
if (count ==0){
  localStorage.setItem("var3", daily[67].thumbnail)
  var3 = localStorage.getItem("var3");
  localStorage.setItem("var2", daily[66].thumbnail)
  var2 = localStorage.getItem("var2");
  localStorage.setItem("var1", daily[65].thumbnail)
  var1 = localStorage.getItem("var1");
}
else if(count ==1){
  localStorage.setItem("var3", daily[0].thumbnail)
  var3 = localStorage.getItem("var3");
  localStorage.setItem("var2", daily[67].thumbnail)
  var2 = localStorage.getItem("var2");
  localStorage.setItem("var1", daily[66].thumbnail)
  var1 = localStorage.getItem("var1");
}
else if(count ==2){
  localStorage.setItem("var3", daily[1].thumbnail)
  var3 = localStorage.getItem("var3");
  localStorage.setItem("var2", daily[0].thumbnail)
  var2 = localStorage.getItem("var2");
  localStorage.setItem("var1", daily[67].thumbnail)
  var1 = localStorage.getItem("var1");
}
else{
  var3 = localStorage.getItem("var3");
  var2 = localStorage.getItem("var2");
  var1 = localStorage.getItem("var1");
}
document.getElementById("var1").value = var1;
document.getElementById("var2").value = var2;
document.getElementById("var3").value = var3;
document.getElementById("var4").value = var4;

  let currentImage = null;
  let previewImage = null;
  let fontSize1;
  // Load default image
  const defaultImage = new Image();
  //!

  textInput.value = var4;
  defaultImage.src  = "todayrasiphalithalutula.jpg" 

  

 
  
  
  
  
  defaultImage.onload = () => {
    currentImage = defaultImage;
    updatePreview();
  };

  textInput.addEventListener("input", () => {
    updatePreview();
  });

  textInput2.addEventListener("input", () => {
    updatePreview();
  });

  fontSelect.addEventListener("input", () => {
    updatePreview();
  });

  colorSelect.addEventListener("input", () => {
    updatePreview();
  });

  sizeRange1.addEventListener("input", () => {
    updatePreview();
  });

  sizeRange2.addEventListener("input", () => {
    updatePreview();
  });

  positionRangeX.addEventListener("input", () => {
    updatePreview();
  });

  function updatePreview() {
    if (!currentImage) return;

    const text = textInput.value;
    const text2 = textInput2.value;
    const color = "white"; // Set text2 color to white
    const canvas = document.createElement("canvas");
    const ctx = canvas.getContext("2d");

    const image = currentImage;

    canvas.width = image.width;
    canvas.height = image.height;

    ctx.drawImage(image, 0, 0);

    const positionX1 = 10; // Fixed X-coordinate for text1 (leftmost position)
    const positionY1 = 1730; // Fixed Y-coordinate for text1 (bottom - 600 pixels up)

    fontSize1 = 250; // Initial font size for text1
    ctx.font = `${fontSize1}px 'Anek Telugu'`;
    let textWidth = ctx.measureText(text).width;

    // Decrease font size until the text fits within the canvas width
    while (textWidth > canvas.width - 1) {
      fontSize1 -= 1;
      ctx.font = `${fontSize1}px 'Anek Telugu'`;
      textWidth = ctx.measureText(text).width;
    }

    let stretchRatio1;
    // Calculate vertical stretch factor for text1
    if (document.querySelector("#text-input").value.length > 48) {
      const originalHeight1 = fontSize1;
      const targetHeight1 = originalHeight1 + 100; // Vertical stretch factor, adjust as needed
      stretchRatio1 = targetHeight1 / originalHeight1;
    } else if (document.querySelector("#text-input").value.length < 30) {
      const originalHeight1 = fontSize1;
      const targetHeight1 = originalHeight1+15; // Vertical stretch factor, adjust as needed
      stretchRatio1 = targetHeight1 / originalHeight1;
    } else if (document.querySelector("#text-input").value.length > 40) {
      const originalHeight1 = fontSize1;
      const targetHeight1 = originalHeight1 + 40; // Vertical stretch factor, adjust as needed
      stretchRatio1 = targetHeight1 / originalHeight1;
    } else {
      const originalHeight1 = fontSize1;
      const targetHeight1 = originalHeight1 + 30; // Vertical stretch factor, adjust as needed
      stretchRatio1 = targetHeight1 / originalHeight1;
    }
    ctx.strokeStyle = "black";
ctx.lineWidth = 10;
ctx.lineJoin = "round"; // Use round corners for the stroke
    ctx.save();
    ctx.translate(positionX1, positionY1);
    ctx.scale(1, stretchRatio1);
    ctx.fillStyle = color;
ctx.strokeText(text, 0, 0);
    ctx.fillText(text, 0, 0);
    ctx.restore();
   const fixedpos = 2400;
      const fixedPositionY = 830; // Fixed position for text2
      let size2 = 620; // Get the value of sizeRange2
      
      // Calculate the desired height increase factor
      const heightIncreaseFactor = 40; // You can adjust this value as needed
      
      // Calculate the transformation matrix for vertical scaling
      const scaleX = 1;
      const scaleY = 1 + heightIncreaseFactor / 100;
      
      ctx.save(); // Save the current state of the canvas
      
      // Apply the vertical scaling transformation
      ctx.scale(scaleX, scaleY);
      
      ctx.font = `${size2}px 'Archivo Black', sans-serif`;
      ctx.fillStyle = "white"; // Set text2 color to white
      
      // Add border to text2
      ctx.lineWidth = 40;
      ctx.strokeText(text2, fixedpos, fixedPositionY);
      ctx.fillText(text2, fixedpos, fixedPositionY);
      
      ctx.restore(); // Restore the saved state of the canvas
      
      let month = monthname;
      let day = dayname;
      
      // Add a new element (PNG) in the middle of the canvas
      let middleX;
      let middleY;
      const pngElement = new Image();
      pngElement.src = `${month}.png`;
      
    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1700;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 4000; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }
    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1800;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =2050;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =2050;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =2050;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 4150; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =2090;
      middleY =780;
    pngElement.onload = () => {
      const pngWidth = 3250; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1890;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =2090;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 3000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1900;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1950;
      middleY =820;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2200; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1900;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3000; // Width of the PNG element
      const pngHeight =2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1850;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1900;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =2050;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =2050;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("vruschika")){
     middleX =2100;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =2090;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1950;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2200; // Width of the PNG element
      const pngHeight = 2100; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1900;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =2050;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2100; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1980;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1950;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2400; // Width of the PNG element
      const pngHeight =1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }






    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1830;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =2100;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =2050;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("tula")){
     middleX =2100;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =2090;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1920;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2100; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1900;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =2000;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1900;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1880;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }





    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1830;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =2100;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =2050;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("kumbha")){
     middleX =2100;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =2090;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1920;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2300; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1900;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1900;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1880;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }



    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1830;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =2000;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =2050;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("midhuna")){
     middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 3600; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =2090;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1870;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2300; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1900;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1900;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1880;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }



    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1830;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =2100;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =2050;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("makara")){
     middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 3600; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =2090;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1870;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1900;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1900;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1880;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }








    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1830;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =2100;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =2050;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("dhanussu")){
     middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 3600; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =2090;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1870;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1900;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1920;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1880;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }



    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1720;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1850;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2950; // Width of the PNG element
      const pngHeight =1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =2050;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 3400; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =2050;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("vrushabha")){
     middleX =2100;
      middleY =910;
    pngElement.onload = () => {
      const pngWidth = 3750; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =2090;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1890;
      middleY =1050;
    pngElement.onload = () => {
      const pngWidth = 2400; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =2090;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1900;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1990;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 2400; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1890;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight =2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1870;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 2700; // Width of the PNG element
      const pngHeight =1400;// Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }




    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1830;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =2100;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =2050;
      middleY =940;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("meena")){
     middleX =2000;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3800; // Width of the PNG element
      const pngHeight = 1500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =2090;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1920;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2100; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1900;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =2000;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1900;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1880;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }




    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1720;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1850;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2950; // Width of the PNG element
      const pngHeight =1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =2050;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 3400; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =2050;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("mesha")){
     middleX =2100;
      middleY =910;
    pngElement.onload = () => {
      const pngWidth = 3750; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =2090;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1890;
      middleY =1050;
    pngElement.onload = () => {
      const pngWidth = 2400; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =2090;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1900;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1990;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 2400; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1890;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight =2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1870;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 2700; // Width of the PNG element
      const pngHeight =1400;// Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }














    // Add new element (PNG) in the middle of the canvas
    let middlesX ;
    let middlesY;
    const pngElements = new Image();
    pngElements.src = `${day}.png`;
    if(`${pngElements.src}`.includes("friday.png")){
      middlesX =1700;
      middlesY =940;
    pngElements.onload = () => {
      const pngWidth = 3000; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElements, middlesX - pngWidth / 2, middlesY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else{
      middlesX =1700;
      middlesY =900;
      pngElements.onload = () => {
        const pngWidth = 3000; // Width of the PNG element
        const pngHeight = 1800; // Height of the PNG element
        ctx.drawImage(pngElements, middlesX - pngWidth / 2, middlesY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
    }








    function updatePreviewCanvas(image) {
      previewCanvas.width = previewContainer.clientWidth;
      previewCanvas.height = (previewContainer.clientWidth / image.width) * image.height;

      const scaleFactor = calculateScaleFactor(
        image.width,
        image.height,
        previewCanvas.width,
        previewCanvas.height
      );
      const previewCtx = previewCanvas.getContext("2d");
      previewCtx.clearRect(0, 0, previewCanvas.width, previewCanvas.height);
      previewCtx.drawImage(canvas, 0, 0, previewCanvas.width, previewCanvas.height);

      // Store the preview image separately
      previewImage = canvas.toDataURL();

      downloadButton.disabled = false;
    }
  }
 

  function calculateScaleFactor(originalWidth, originalHeight, maxWidth, maxHeight) {
    const widthScaleFactor = originalWidth / maxWidth;
    const heightScaleFactor = originalHeight / maxHeight;

    return Math.max(widthScaleFactor, heightScaleFactor, 1);
  }
  setTimeout(() => {
    const link = document.createElement("a");
    link.download = "todayrasiphalithalutula";
    link.href = previewImage; // Use the preview image data URL
    link.click();
  }, 6000);

  downloadButton.addEventListener("click", () => {
  
  });
let funk = ()=>{
  const link = document.createElement("a");
    link.download = "image";
    link.href = previewImage; // Use the preview image data URL
    link.click();
}


}, 30000);
setTimeout(() =>{
  

  let daily = [
    {
      title: "అతిపెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "ఈరోజు మీ జీవితంలోనే అతిపెద్ద శుభవార్త!",
      matter: "ఈరోజు మీకు మీ జీవితంలోనే అతిపెద్ద శుభవార్త అందుతుంది దాన్ని విన్న తరవాత మీ ఆనందానికి హద్దులు ఉండవు ",
    },
    {
      title: "ఒక స్త్రీ వల్ల ధనాలభం",
      thumbnail: "ఒక స్త్రీ వల్ల ఇలా ధనాలభం పొందే అవకాశం!",
      matter: "ఈరోజు మీకు మీ జీవిత భాగస్వామి వల్ల ధనాలభం పొందే అవకాశం ఉంది మీరు మాత్రం మీ జీవిత భాగస్వామి ని పూర్తిగా నమ్మాలి శుభం జరుగుతుంది ",
    },
    {
      title: "ఒక స్త్రీ పగబట్టి ఇలా",
      thumbnail: "ఒక స్త్రీ పగబట్టి చేసే ప్రయత్నాలు తెలిస్తే షాక్!",
      matter: "ఈరోజు ఒక స్త్రీ పాత కక్షలు పెట్టుకొని మీ మీద పగబట్టి మిమ్మల్ని ఆర్ధికంగా నష్టపరుచడానికి చెయ్యని ప్రయత్నలంటూ ఉండవు కాని మీ మంచి మనస్సు వల్ల దేవుడు మీ మీద అన్ని ప్రయత్నాలను విఫలం చేస్తారు",
    },
    {
      title: "కొత్త స్త్రీ తో స్నేహం",
      thumbnail: "2 శుభవార్తలు + ఒక కొత్త స్త్రీ తో స్నేహం",
      matter: "ఈరోజు మీరు రెండు పెద్ద శుభవార్తలు వింటారు మరియు అనుకోకుండా మీరు ఒక కొత్త స్త్రీ తో కలిసి ఆకస్మికంగా స్నేహం చేస్తారు",
    },
    {
      title: "పెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "పెద్ద శుభవార్తలు + ఈవిషయంలో జాగ్రత్త",
      matter: "ఈరోజు శుభప్రదంగా ఉంటుంది మీరు ఈరోజు పెద్ద శుభవార్తలు వింటారు ఆ శుభవార్తలు విన్న తరువాత ఆనండంలూ మద్యపానం సేవించడానికి ప్రయత్నాలు చేస్తారు ఇలా చెయ్యకండి మీ ఆరోగ్యం దెబ్బతీస్తుంది జాగ్రత్తగా ఉండండి ",
    },
    {
      title: "ఒక స్త్రీ పగబట్టి ఇలా",
      thumbnail: "ఒక స్త్రీ పగబట్టి ఈవిధంగా చేస్తుంది జాగ్రత్త",
      matter: "ఈరోజు మీ మీద ఒక స్త్రీ పగబట్టి హాని చెయ్యాలని చూస్తున్నారు , మరియు మీ మీద ఒక స్త్రీ ఏడుపు ఉంది మీ వ్యాపారం మరియు అభివృద్ధి మీద ఏడుస్తున్నారు జాగ్రత్తగా ఉండండి",
    },
    {
      title: "బంధువులే మీ సేత్రువులు",
      thumbnail: "మీ బంధువులే మీ సేత్రువులు జాగ్రత్త",
      matter: "మీ బంధువుల్లో కొందరు మీ సేత్రువులు ఉన్నారు వాళ్ళు ఎప్పుడు అవకాశం దొరికితే మిమ్మల్ని నష్టం చెయ్యాలని చూస్తున్నారు ఎవ్వరితో కూడా మీ వ్యాపారం గురించి చెప్పకండి జాగ్రత్తగా ఉండండి వెంనేపోటు పొడుస్తారు",
    }, 
    {
      title: "ఒక స్త్రీ మోసం చేస్తారు",
      thumbnail: "ఒక స్త్రీ ఇలా మోసం చేస్తుంది జాగ్రత్త!",
      matter: "ఈరోజు మీరు ఏంతో నమ్మిన ఒక స్త్రీ మిమ్మల్ని మోసం చేసే అవకాశం ఉంది జాగ్రత్తగా ఉండండి , మీరు మంచివారు కాని అందరు మంచివారు ఉండరు ఎవ్వరిని గుడ్డిగా నమ్మవద్దు",
    },
    {
      title: "ఒక స్త్రీ వల్ల డబ్బులు",
      thumbnail: "ఒక స్త్రీ వలన ఆదాయం + ఈవిషయాల్లో జాగ్రత్త",
      matter: "ఈరోజు మీకు చాలా మంచిరోజు నేడు మీకు మీ జీవిత భాగస్వామి బల్ల ధనాలభం కలుగుతుంది మరియు మీరు మీ జీవిత భాగస్వామి వల్ల చాలా సంతోషంగా ఉంటారు మీ బాధ్యతే ఏంటంటే మీరు కుడా వారిని సంతోషంగా ఉంచండి ",
    },
    {
      title: "స్త్రీ వల్ల శుభవార్తలు",
      thumbnail: "ఒక స్త్రీ వల్ల శుభవార్తలు ! తెలిస్తే షాక్!",
      matter: "ఈరోజు మీకు చాలా మంచిరోజు ఈరోజు మీకు ఒక స్త్రీ వల్ల శుభవార్తలు అందుతాయి ఈలోకంలో మీరే అదృష్టవంతులు అని ఈరోజు మీకు అనిపిస్తుంది మీరు మాత్రం ఆ శుభవార్తలు వినగానే షాక్ అవ్వడం ఖాయం",
    },
    {
      title: "స్త్రీ కాళ్ళ వద్దకు",
      thumbnail: "కోరుకున్న స్త్రీ కాళ్ళ వద్దకు వస్తుంది",
      matter: "ఈరోజు మీరు కూరుకున్న స్త్రీ మీ వ్యాపారం మరియు అభివృద్ధి చూసి వారు మీ కాళ్ళ వద్దకు వస్తారు కాని మీరు మాత్రం మీ వ్యాపారం మరియు అభివృద్ధి ని ఆపకండి ",
    },
    {
      title: "ఒక స్త్రీ మోసం చేస్తారు",
      thumbnail: "ఒక స్త్రీ వెన్నెపాటు పొడుస్తారు జాగ్రత్త!",
      matter: "ఈరోజు మీరు ఎంతగా నమ్మిన ఒక స్త్రీ మిమ్మల్ని మోసం చేస్తారు , దీనివల్ల మీరు మానసికంగా డిప్రెషన్ లోకి పోవచ్చు జాగ్రత్తగా ఉండండి లోకంలో డబ్బే అంత అని తెలుసుకోండి డబ్బు ఉంటె మీరే రాజు మీరే మంత్రి",
    },
    {
      title: "స్త్రీ వల్ల శుభవార్తలు",
      thumbnail: "ఒక స్త్రీ వల్ల శుభవార్తలు ! తెలిస్తే ఎగిరి గంటేస్తారు",
      matter: "ఈరోజు మీరు ఒక స్త్రీ వల్ల శుభవార్తలు అందుకుంటారు ఈలోకంలో మీరే అదృష్టవంతులు అని ఈరోజు మీకు అనిపిస్తుంది మీరు మాత్రం ఆ శుభవార్తలు వినగానే మీరు ఎగిరి గంతెయ్యడం మాత్రం ఖాయం",
    },
    {
      title: "ఒక స్త్రీ వల్ల ఘూరం",
      thumbnail: "ఒక స్త్రీ వల్ల ఘోరం జరుగుతుంది జాగ్రత్త!",
      matter: "ఈరోజు మీరు ఒక స్త్రీ వల్ల భారిగా నష్టపూతారు దీనివల్ల మీరు బాధ పాడుతారు కాని దానివల్ల ఏమి లాభం లేదు ఇప్పటికైనా పోయింది ఏమిలేదు అన్ని మరిచి మీరు మీ లక్ష్యం మీద దృష్తి పెడితే శుభం కలుగుతుంది",
    },
    {
      title: "కుటుంబంలో వీరికి మరనగందం",
      thumbnail: "కుటుంబంలో వీరికి మరణ గండం జాగ్రత్త!",
      matter: "ఈరోజు మీ కుటుంబంలో పెద్దవారిని ఎలెక్ట్రానిక్ వస్తువులనుంచి దూరంగా ఉంచండి ప్రమాదాలు జరిగే అవకాశాలు ఉన్నాయి అప్ప్రమత్తంగా ఉండండి వారి ఆరోగ్యం మీద శ్రెద్ద పెట్టండి శుభం కలుగుతుంది ",
    },
    {
      title: "అందమైన స్త్రీ తో ",
      thumbnail: "ఈరోజు అదృష్టం మీదే! అందమైన స్త్రీ తో",
      matter: "ఈరోజు ఈ మొత్తం ప్రపంచంలో మీరే అదృష్టవంతులు అని మీకు అనిపిస్తుంది ఈరోజు మీరు మీకు నచ్చిన ఇక అందమైన స్త్రీ తో బయటకు వెళ్లి సినిమాలు షికార్లు అని జాలిగా గడుపుతారు",
    },
    {
      title: "స్త్రీ తో మనసులోని మాట",
      thumbnail: "అందమైన స్త్రీ తో మనసులోని మాట చెప్తారు ",
      matter: "ఈరోజు మీరు మీకు నచ్చిన ఒక అందమైన స్త్రీ తో ఎప్పటినుంచో చెప్పాలనుకుంటున్న మీ మనస్సులోని మాట ఈరోజు చెపుతారు మరియు ఇలా చేస్తే ఈరోజు మీరు షాకింగ్ న్యూస్ వింటారు ",
    },
    {
      title: "పెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "పెద్ద శుభవార్తలు + ఒక స్త్రీ పగబట్టి ఇలా చేస్తది",
      matter: "ఈరోజు మీరు పెద్ద శుభవార్తలు వింటారు మరియు ఈరోజు ఒక స్త్రీ పగబట్టి మీ శుభవార్తల మీద ఈర్ష తో నష్టం చెయ్యడానికి ప్రయత్నాలు చేస్తారు కాని మీరు మీ అదృష్టం వల్ల తప్పించుకుంటారు",
    },
    {
      title: "ఒక స్త్రీ తో సరదాగా ఉలా",
      thumbnail: "ఒక స్త్రీ తో సరదాగా ఇలా చేస్తారు...! జాగ్రత్త",
      matter: "ఈరోజు మీరు సరదా కోసం మీ ప్రేయసితో బయటకు పోయి సినిమాలకు రెస్టారెంట్లకు పోయి చివరికి మీరు మీ దగ్గర ఉన్న డబ్బును మొత్తం ఐపోచేస్తారు జాగ్రత్తగా ఉండండి డబ్బును ఈరోజు మీరు ఆదా చేస్తే అవి మీకు రేపు పనికి వస్తాయి",
    },
    {
      title: "స్త్రీ వల్ల ఆనందం",
      thumbnail: "ఒక స్త్రీ వల్ల ఆనందానికి హద్దులు ఉండవు",
      matter: "ఈరోజు మీ జీవితానికి అర్ధమోచ్చే ఒక పెద్ద బంగారు శుభావర్తని మీ జీవిత భాగస్వామి మీకు అందిస్తారు ఈరోజు మీరు ఒక అందమైన స్త్రీ తో జాలిగా గడుపుతారు ఈరోజు ఆ అందమైన స్త్రీ వల్ల ఆకస్మికంగా ధనలాభం పొందే అవకాశం కుడా ఉంది",
    },
    {
      title: "వీరితో గొడవలు జాగ్రత్త",
      thumbnail: "ఈరోజు వీరితో గొడవలు జరుగుతాయి జాగ్రత్త",
      matter: "ఈరోజు మీరు ఎప్పటినుంచో గొడవ పదాలనుకుంటున్న మీ సేత్రువులు మిమ్మల్ని గెలకడంతో మీరు వారితో గొడవ పడొచ్చు కాని గొడవ పరిష్కారం కాదని మీరు తెలుసుకూవాలి కాని గొడవ జరిగితే మాత్రం గెలిసేది మీరే",
    },
    {
      title: "అందమైన స్త్రీ తో ఇలా",
      thumbnail: "ఒక అందమైన స్త్రీ తో సరదాలు + ఆకస్మిక ధనాలభం",
      matter: "ఈరోజు మీరు ఒక అందమైన స్త్రీ తో జాలిగా గడుపుతారు ఈరోజు ఆ అందమైన స్త్రీ వల్ల ఆకస్మికంగా ధనలాభం పొందే అవకాశం కుడా ఉంది",
    },
    {
      title: "స్త్రీ వల్ల నష్టాలు",
      thumbnail: "ఓక స్త్రీ వల్ల భారీగా నష్టపోతారు జాగ్రత్త!",
      matter: "ఈరోజు మీరు మీ జీవిత భాగస్వామి చేసిన ఒక తప్పు వల్ల బిజినెస్ లో భారి నష్టాలను చూస్తారు దీనివల్ల మీరు వారిమీద కోప్పడుతారు ఆఖరికి దీంట్లో వాళ్ళు కావాలని చెయ్యలేదని తెలుసుకొని క్షమిస్తారు",
    },
    {
      title: "ఒక స్త్రీ పగబట్టి ఇలా",
      thumbnail: "ఒక స్త్రీ పగబట్టి ఈవిధంగా చేస్తుంది",
      matter: "ఈరోజు మీ మీద ఎప్పటినుంచో కక్ష పెట్టుకున్న ఒక స్త్రీ ఈరోజు పగతీర్చుకోవడానికి మిమ్మల్ని మానసికంగా హాని చేస్తారు అది కుడా విఫలం అయితే శారీరికంగా హాని చేస్తారు జాగ్రత్తగా ఉండండి ",
    },
    {
      title: "ఒక స్త్రీ తో గొడవలు",
      thumbnail: "ఈరోజు ఒక స్త్రీ తో గొడవలు జరుగుతాయి",
      matter: "ఈరోజు మీకు ఒక స్త్రీ తో గొడవలు జరుగుతాయి మీరు ఎంత ఒద్దు అనుకున్న గొడవలు తప్పవు దీనిని ద్రుష్టిలో పెట్టుకొని మీరు గొడవని ఆపలేరు అయితే మీరు కోపంలో మీరు చెప్పే మాటలపై మీరు తరువాత ఆందోళన పాడుతారు జాగ్రత్త key",
    },
    {
      title: "స్త్రీ తో మనసులోని మాట",
      thumbnail: "ఒక స్త్రీ తో మనసులోని విషయం మాట్లాడతారు",
      matter: "ఈరోజు మీరు ఒక స్త్రీ తో మీ మనసులోని మాట మాట్లాడుతారు మీరు వారిని ఇష్టపడుతున్నారని వారితో చెపుతారు ఈవిషయం చెప్పినతరువాత మీకు ఒక షాకింగ్ వార్త అందుతుంది జాలిగా గడుపుతారు",
    },
    {
      title: "జీవితంలో ఒక స్త్రీ ఎంట్రీ",
      thumbnail: "మీ జీవితంలో ఒక స్త్రీ ఎంట్రీ .. అన్ని శుభవర్తలే",
      matter: "ఈరోజు మీ జీవితంలో ఒక కొత్త స్త్రీ వస్తుంది తను చాల బుద్ధిమంతురాలు మరియు అందానికి యువరాణి మీకు ఆ స్త్రీ చాల నచ్చుతుంది మరియు మీరు ఆ స్త్రీ తో స్నేహం కూడా చెయ్యడానికి ప్రయత్నాలు చేస్తారు",
    },
    {
      title: "ఒక స్త్రీ వల్ల మోసపోతారు",
      thumbnail: "ఒక స్త్రీ ని గుడ్డిగా నమ్మవద్దు! మీరు మోసపోవచ్చు",
      matter: "మీరు ప్రాణంగా ప్రేమించిన స్త్రీ ఈరోజు మిమ్మల్ని విదిచిపోవడంతో మీరు తట్టుకోలేరు మీరు డిప్రెషన్ లో కూడా పోవచ్చు కాని అదే సమయంలో మీ తల్లితండ్రులవల్ల మీకు జీవితం అంటే ఒక అర్ధం ఒస్తుంది వారి కోసమే బ్రతుకుతారు",
    },
    
    {
      title: "స్త్రీ వల్ల బంగారు శుభవార్త",
      thumbnail: "ఒక స్త్రీ వల్ల బంగారు శుభవార్తలు + ఇలా చేయకండి",
      matter: "ఈరోజు మీ జీవితానికి అర్ధమోచ్చే ఒక పెద్ద బంగారు శుభావర్తని మీ జీవిత భాగస్వామి మీకు అందిస్తారు ఆ శుభవార్త మీ జీవితాన్నే మార్చేస్తుంది కాబట్టి ఈరోజు మీరు ఆనందంలో మీరు ఎం చేయ్యలనుకున్తున్నారో ఆ పనులన్నీ చేసేస్తారు",
    },
  
    {
      title: "ప్రియమైన స్త్రీ ని కలుస్తారు",
      thumbnail: "ఒక ప్రియమైన స్త్రీ ని కలుస్తారు + ఆకస్మిక ధనాలభం",
      matter: "ఈరోజు మీరు మీకు ఏంటో ప్రియమైన స్త్రీ ని కలుస్తారు కలిసి సరదాగా మాట్లాడుకుంటారు ఇంకా ఈరోజు చివరిలో మీకు ఆకస్మిక ధనలాభం కలుగడంతో మీ ఆనందానికి హద్దులు ఉండవు ఆనందంలో పార్టి కూడా చేసుకుంటారు",
    },
    {
      title: "2 పెద్ద శుభవార్తలు",
      thumbnail: "2 పెద్ద శుభవార్తలు + ఈవిషయంలో జాగ్రత్త!",
      matter: "ఈరోజు మీరు ఎప్పటినుండో ఎదురుచూస్తున్న శుభవార్త వింటారు మరియు మీరు అనుకోకుండా ఒక స్త్రీ వల్ల ఇంకొక శుభవార్తలు అందుకుంటారు సంతోషంలో మీరు మద్యం సేవించవచ్చు ఇలా చెయ్యకండి జాగ్రత్త",
    },
    {
      title: "ఒక స్త్రీ వల్ల గొడవలు",
      thumbnail: "ఒక స్త్రీ వల్ల గొడవలు + ఆకస్మిక సంఘటనలు",
      matter: "ఈరోజు మీరు మీకు నచ్చిన ఒక స్త్రీ కోసం వేరే వాళ్లతో గొడవలలో పలుగోనతారు కాని ఆకస్మికంగా ఆ గొడవ చాల పెద్దగా కావడంతో మీరు గొడవని ముగించడానికి ప్రయత్స్తారు కాని మీరు జాగ్రత్తగా ఉండాలి దెబ్బలు కూడా తగలోచ్చు",
    },
    {
      title: "స్త్రీ వల్ల ప్రమాదాలు",
      thumbnail: "ఒక స్త్రీ వల్ల ప్రమాదాలు ముంచుకోస్తున్నాయి జాగ్రత్త",
      matter: "ఈరోజు మీకు ఒక స్త్రీ వల్ల ప్రమాదాలు మున్చుకోస్తునాయి కాబట్టి మీరు అప్ప్రమత్తంగా ఉండండి వాహనాలు నడిపెటప్పుడు ఒక స్త్రీ ని ఆకర్షించడానికి మీరు మీ వాహనాన్ని అతివేగంలో నడుపుతారు దీనివల్ల ప్రమాదం కూడా జరుగవచ్చు",
    },
    {
      title: "ఒక స్త్రీ నష్టం చేస్తారు",
      thumbnail: "ఒక స్త్రీ ఈవిధంగా నష్టం చేస్తున్నారు + ఇలా చెయ్యండి",
      matter: "మీరు మిమ్మల్ని ప్రేమిస్తున్నారు అనుకుంటున్నా స్త్రీ మీదగ్గర మీ డబ్బుకోసమే ఉన్నారు . ఈరోజు బయట ఆ స్త్రీ మిమ్మల్ని షాపింగ్ కు తెసుకేల్లి మీ లక్షలు నష్టం చేస్తారు జాగ్రత్త",
    },
    {
      title: "మంచి శుభవార్తలు ఉన్నాయి",
      thumbnail: "మంచి శుభవార్తలు + ఈవిషయాల్లో జాగ్రత్త",
      matter: "ఈరోజు మీ జీవితానికి అర్ధమోచ్చే ఒక పెద్ద బంగారు శుభావర్తని మీ జీవిత భాగస్వామి మీకు అందిస్తారు ఆ శుభవార్త మీ జీవితాన్నే మార్చేస్తుంది  సంతోషంలో మీరు మద్యం సేవించవచ్చు ఇలా చెయ్యకండి జాగ్రత్త",
    },
    {
      title: "ఒక స్త్రీ తో గొడవ",
      thumbnail: "ఈరోజు ఒక స్త్రీ తో గొడవ జరుగుతుంది జాగ్రత్త",
      matter: "ఈరోజు మీకు ఒక స్త్రీ తో ఆస్తి మరియు దనం విషయంలో గొడవలు జరుగుతాయి కాని గొడవలో మీరు నూరు జారి చెప్పకుదని మాటలు చెపుతారు గొడవ తరువాత మీరు ఎందుకుచేప్పరని బాధపడి ఆ స్త్రీ తో క్షమాపణ అడుగుతారు దీని బదులు మీరు ముందే నూరు అదుపులో పెట్టుకోండి",
    },
    {
      title: "సేత్రువులు ఇలా చేస్తారు",
      thumbnail: "రహస్య సెత్రువులు ఈవిధంగా చేస్తున్నారు జాగ్రత్త",
      matter: "ఈరోజు రహస్య సేత్రువులు మీకు తెలియకుండానె మిమ్మల్ని ఆర్ధికంగా మరియు మీ కుతుమ్బంన్ని హాని చెయ్యడానికి చెయ్యని ప్రయత్నలుండవు కాబట్టి మీరు ముందే జాగ్రత్తగా ఉండండి ఎవ్వరిని గుడ్డిగా నమ్మవద్దు మోసపోవచ్చు",
    },
    {
      title: "అమ్మాయి కాళ్ళ వద్దకు",
      thumbnail: "అందమైన అమ్మాయి మీ కాళ్ళ వద్దకు వస్తుంది",
      matter: "ఈరోజు మీ స్వప్న సుందరి మీ ఉన్నత చదువులు మరియు వ్యాపారంలో అభివృద్ధి చూసి ఒచ్చి మీ కాళ్ళ వద్దకు పడుతది . ఈరోజు మీరు పడ్డ కష్టం వ్యర్ధం కాలేదని మీరు తెలుసుకుంటారు వ్యాపారం మరియు చదువులూ ఇంకా ముందుకు సాగాలని మీకు మోటివేషన్ దొరుకుతుంది",
    },
    {
      title: "స్త్రీ వల్ల పెద్ద శుభవార్త",
      thumbnail: "ఒక స్త్రీ వల్ల పెద్ద శుభవార్త + ఆకస్మిక ధనాలభం",
      matter: "ఈరోజు మీకు ఒక స్త్రీ వల్ల పెద్ద శుభవార్త అందుతుంది మరియు వార్త వినంగానే మీ మడ్ ఒక్కసారిగా మంచిగా మారడంతో మీరు మీ పార్టనర్ తో కలిసి సినిమాకు పోతారు మరియు రాత్రి సమయంలో మీకు ధనలాభం కలుగుతుంది ",
    },
    {
      title: "స్త్రీ తో సరదాగా ఉలా",
      thumbnail: "ఒక స్త్రీ తో కలిసి సరదాగా చేసే పనులు తెలిస్తే షాక్ !",
      matter: "ఈరోజు మీరు టైం పాస్ చెయ్యడానికి ఒక స్త్రీ తో కలిసి ఒక మంచి రెస్టారెంట్ కు వెళ్లి భూజనం చెయ్యడం ఇష్టపడుతారు మరియు సినిమాకు పోయి జాలిగా గడుపుతారు ఈరోజు మీకు ఎప్పటికి గుర్తుండిపోయేలా గడుపుతారు",
    },
    {
      title: "సెత్రువులు ఇలా చేస్తారు",
      thumbnail: "పెద్ద శుభవార్తలు + సెత్రువులు ఇలా చేస్తారు",
      matter: "ఈరోజు మీకు చాల పెద్ద శుభవార్తలు అందుతాయి దీనితో మీరు చాల సంతోషంగా ఉంటారు మీ సంతోషం మీ సేత్రువులు చూడలేరు వారు మీకు ఎదో ఒక హాని చెయ్యాలని చూస్తారు కాని రోజు ఆకరికి ఏమి చెయ్యలేక అలిసి వెళ్ళిపోతారు",
    },
    {
      title: "ప్రాణగండం ఉంది జాగ్రత్త",
      thumbnail: "వీరితో గొడవలు + ప్రాణగండం ఉంది జాగ్రత్త",
      matter: "ఈరోజు మీకు మీ సేత్రువులతో గొడవలు జరుగుతాయి మరియు మీరు ఈరోజు మీ కోపాన్ని అడుపులూ ఉంచాలి లేదంటే మీకు గొడవలో తీవ్ర గాయలవల్ల ప్రాణగండం ఉంది దేవుడ్ని స్మరించండి గొడవ దేనికి కూడా సమాధానం కాదు అని మీరు తెలుసుకోవాలి",
    },
    {
      title: "స్త్రీ వల్ల పండగలు",
      thumbnail: "ఒక స్త్రీ వల్ల ఈరోజు పండుగలా ఉంటుంది",
      matter: "ఈరోజు ఒక స్త్రీ వల్ల వేడుకలా ఉంటుంది మీకు నచ్చిన స్త్రీ తో ఈరోజు మీరు బయటకు పోతారు మరియు వారితో సినిమాలకు పోయి జాలిగా గడుపుతారు ఆ స్త్రీ వల్ల రోజు చివర్లో ధనాలభం కూడా కావొచ్చు శుభం కలుగుతుంది ",
    },
    {
      title: "స్త్రీ మోసం చేస్తుంది",
      thumbnail: "ఒక స్త్రీ ఇలా మోసం చేస్తది + ఇలా చెయ్యండి",
      matter: "ఈరోజు మీరు గుడ్డిగా నమ్మిన ఒక స్త్రీ మిమ్మల్ని మోసం చేస్తది దేనిని మీరు తట్టుకోలేరు కోపంలూ మీరు డిప్రెషన్ లో కూడా పోవచ్చు కాని మీ తల్లి తండ్రులకు ఈ విషయం తెలిసి వారు మిమ్మల్ని దీని నుండి బయటకు తెస్తారు",
    },
    {
      title: "స్త్రీ మీ కాళ్ళ వద్దకు",
      thumbnail: "ఒద్దు అన్న స్త్రీ మీ కాళ్ళ వద్దకు వస్తుంది",
      matter: "మీ దగ్గర డబ్బులు లేవు మీరు బిచ్చగాల్లు అని మిమ్మల్ని వదిలి పాయిన ఆ స్త్రీ ఈరోజు మీ అభివృద్ధి మరియు మీ ఉన్నత చదువులు చూసి మల్లి మీ కాళ్ళ వద్దకు ఒస్తుంది మల్లి తనను దగ్గరుకు తెసుకున్తారా? కామెంట్ లో చెప్పండి  ",
    },
  
    {
      title: "పెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "పెద్ద శుభవార్తలు ఉన్నాయి + స్త్రీ వల్ల పండుగ",
      matter: "ఈరోజు మీకోసం పెద్ద శుభవార్తలు ఎదురుచుస్తునాయి మీరు పడ్డ కష్టానికి ప్రతిఫలం ఈరోజు మీకు శుభవార్త అందుతుంది మరియు మీ అభివృద్ది ని చూసి ",
    },
    {
      title: "స్త్రీ వల్ల ధనలాభం",
      thumbnail: "అందమైన స్త్రీ వల్ల ధనలాభం + పెద్ద శుభవార్త",
      matter: "ఈరోజు ఒక అందమైన స్త్రీ వల్ల ధనాలభం కలుగుతుంది ఇంకా రోజు మధ్యలో మీకు పెద్ద శుభవార్త అందుతుంది మీకు ఆ శుభవార్త అందుతదని మీరు కలలో కూడా ఉహించి ఉండరు కాని మీ అదృష్టం వల్ల మీకు ఆ శుభవార్తః అందుతుంది ",
    },
    {
      title: "కుటుంబంలో వీరికి ప్రాణగండం",
      thumbnail: "మీ కుటుంబంలో వీరికి ఇలా ప్రాణగండం జాగ్రత్త",
      matter: "ఈరోజు మీ కుటుంబంలో వ్రుదుల అనారోగ్యం వల్ల వారికి ప్రాణగండం ఉంది కాబట్టి పుష్టిక ఆహారాన్ని సేవించాలి మరియు దేవుడ్ని స్మరించాలి మీరు చేసిన పుణ్యకార్యాల వల్ల దేవుడు మీ గండాన్ని తొలగిస్తారు శుభం జరుగుతుంది",
    },
    {
      title: "స్త్రీ వల్ల శుభవార్తలు",
      thumbnail: "మీరు ఊహించని స్త్రీ శుభవార్తలు చెప్తారు ",
      matter: "ఈరోజు మీరు కలలో కూడా ఉహించని ఒక అందమైన స్త్రీ నోటితో మీరు శుభావర్తలు వింటారు ఈవార్త వినగానే మీ మనస్సు గాలిలో తేలినట్లు అయిపోతుంది మీరు మీ బంధువులందరితో ఈ వార్తని పంచుకుంటారు జాలిగా గడుపుతారు",
    },
    {
      title: "స్త్రీ మీ కాళ్ళ వద్దకు",
      thumbnail: "మీరు కావాలనుకున్న స్త్రీ మీ కాళ్ళ వద్దకు",
      matter: "ఈరోజు మీరు ఎప్పటినున్డూ కోరుకుంటున్న స్త్రీ మీ అదృష్టం కొద్ది మీ దగ్గర సహాయం కోరుతూ వస్తుంది మీరు కాని తనకు సహాయం చేస్తే మాత్రం మీ ఇద్దరి మధ్య బంధం ఇంకా గట్టిపడుతుంది కాని ఆ సహాయం చెయ్యడానికి కొద్దిగా శ్రీమ పడాల్సి ఉంటది",
    },
  
    {
      title: "పెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "పెద్ద శుభవార్తలు + ఒక స్త్రీ ఇలా చేస్తుంది",
      matter: "ఈరోజు మీకు మీరు ఎన్నో సంవచరాల నుండి ఎదురుచూస్తున్న శుభవార్త ఒకటి అందడం వల్ల మీరు సంతోషంగా ఎగిరి గంతులేస్తారు మరియు మీ మిత్రులకి పార్టి ఇస్తారు మొత్తానికి ఈరోజు జాలిగా గడుపుతారు కాని ఆ శుభవార్త మీ జీవితాన్ని మార్చేస్తుంది",
    },
    {
      title: "ఒక స్త్రీ మోసం చేస్తారు",
      thumbnail: "ఒక స్త్రీ మిమ్మల్ని ఈవిధంగా మోసం చేస్తున్నారు",
      matter: "ఈరోజు మీరు కళ్ళు ముసి నమ్మిన ఒక స్త్రీ మిమ్మల్ని వెంనేపోటు పొడుస్తారు మిమ్మల్ని కాదని మోసం చేస్తారు దీనితో మీరు చాల బాధ పాడుతారు కాని మీ తల్లితండ్రులు మీకు సపోర్టుగా ఉంటారు దీనివల్ల వాళ్ళని మించిన వారు లేరని మీకు తెలుస్తుంది",
    },
    {
      title: "స్త్రీ తో మనసులోని మాట",
      thumbnail: "నచ్చిన స్త్రీ తో మీ మనసులోని మాట చెపుతారు",
      matter: "మీరు ప్రతిరోజూ కలలో చూసే మీకు నచ్చిన ఒక స్త్రీ తో ఈరోజు మీరు మీ మనస్సులోని మాట చెపుదామని మీరు ఫిక్స్ అవుతారు ఇలా చెయ్యడానికి ఇదే సరైన సమయం శుభవార్తలు కూడా అందవచ్చు ఏది జరిగినా మన మంచికే అని గుర్తుపెట్టుకోండి ",
    },
    {
      title: "ఎవరంలో ఇలా జరిగిద్ది",
      thumbnail: "ఈవారంలో ఏం జరుగుతుందో తెలిస్తే షాక్",
      matter: "ఈవారంలో మీ వృత్తికి మీరే రాజు మీరే మంత్రి బిజినెస్ లో మిమ్మల్ని మించినోల్లు ఎవ్వరు ఉండరు కొత్త స్త్రీ తో పరిచయాలు జరుగుతాయి మరియు ధనాలభం కలుగుతుంది",
    },
    {
      title: "వీరే మీ సెత్రువులు",
      thumbnail: "వీరే మీ సెత్రువులు + ఒక స్త్రీ తో జాగ్రత్త",
      matter: "ఈరోజు మీరు మీ సేత్రువుల పేర్లు తెలుసుకుంటారు మరియు ఒక స్త్రీ మీ రహస్య సేత్రువు మీకు ఇప్పటివరుకు కలిగిన హాని మొత్తం మీ సేత్రువులనుంచే అని ఈరోజు మీకు తెలిసి వస్తుంది అప్ప్రమత్తంగా ఉండండి",
    },
    {
      title: "స్త్రీ కాళ్ళ వద్దకు",
      thumbnail: "మీరు ఒద్దు అని విడిచిపోయిన స్త్రీ కాళ్ళ వద్దకు",
      matter: "మీరు డబ్బు లేనివారు అని మిల్లల్ని చులకనగా చుసిన ఒక స్త్రీ ఈరోజు మీ వ్యాపారం మరియు అభివృద్ధి చూసి మల్లి మీ కాళ్ళ వద్దకు వస్తుంది కాని వచ్చిన తరువాత మీరు మీ దృష్టి ని అటు మల్లిన్చాకండి మీ వ్యాపారాన్ని ఇంకా పెంచుతూనే ఉండాలి",
    },
    {
      title: "ఒక స్త్రీ వల్ల శుభవార్తలు",
      thumbnail: "ఒక స్త్రీ వల్ల అతిపెద్ద శుభవార్తలు తెలిస్తే షాక్",
      matter: "ఈరోజు మీ జీవితంలూ ఎప్పుడు అందని శుభవార్తలు ఈరోజు మీకు ఒక స్త్రీ వల్ల అందుతాయి వాటిని విని మీరు ఎగిరి గంతులేస్తారు మీ ఆనందానికి హద్దులు ఉండవు ఆ శుభవార్తలు మీ జీవితాన్నే మార్చేస్తాయి రెడీగా ఉండండి ",
    },
    {
      title: "ఒక స్త్రీ పగబట్టి ఇలా",
      thumbnail: "ఒక స్త్రీ పగబట్టి చేసే ప్రయత్నాలు చుస్తే చాక్",
      matter: "ఈరోజు మీపైన ఎంతోకాలంగా కక్షగుడి మీ ప్రానసేత్రువు ఒక స్త్రీ మిమ్మల్ని అన్ని విధాలుగా హాని చెయ్యడానికి ప్రయత్నాలు చేస్తారు కాని మీరు చాలా ధైర్యవంతులు కావడంతో మీరు వాటన్నిటినుంచి సులభంగా తప్పించుకుంటారు ",
    },
    {
      title: "పెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "పెద్ద శుభవార్తలు ఉన్నాయి వీరు నక్కతోకతొక్కారు",
      matter: "ఈరోజు మీరునక్కతోకతొక్కారు మీకు ఈరోజు పెద్ద శుభవార్తలు అందుతాయి వాటిని విని మీ మనసు గాలిలో తేలడం మాత్రం ఖాయం ఈరోజు మీకు శుభవార్తలు విన్న తరువాత ఆనదందానికి హద్దులు ఉండవు ఎగిరి గంతులు వేస్తారు",
    },
    {
      title: "ఒక స్త్రీ వల్ల ప్రాణగండం",
      thumbnail: "ఒక స్త్రీ వల్ల ప్రాణగండం + ఈవిషయాల్లో జాగ్రత్త",
      matter: "ఈరోజు మీకు ఒక స్త్రీ వల్ల ప్రాణగండం ఉంది ఎలా అంటే ఈరోజు మీరు ఒక స్త్రీ ని ఆకట్టుకోవడానికి వాహనాన్ని అతివేగంతో నడుపడంతో మీకు ఆపదలు జరిగే అవకాశం ఉంది జాగ్రత్తగా ఉండండి మరియు వాహనాన్ని ఇంటిదగ్గర మీకోసం ఎదురుచూస్తున్నా వాళ్ళ కోసం నెమ్మదిగా తోలండి",
    },
    {
      title: "స్త్రీ తో ఇలా చేస్తారు",
      thumbnail: "శుభవార్త తెలిస్తే ఎగిరి గంటెస్తారు ఒక స్త్రీ తో",
      matter: "ఈరోజు మీ రోజువారి బ్రతుకులూ ఒక్కసారిగా పెద్ద శుభవార్త ఒకటి అందడంవల్ల మీరు మీ ప్రేయసితో కలిసి ఎంజాయ్ చెయ్యడానికి బయటకు సినిమాలు అని షికార్లకు పోతారు ఈరోజు మీ జీవితంలో ఎప్పటికి గుర్తుండిపోతుంది",
    },
    {
      title: "స్త్రే తో సరదాగా ఉలా",
      thumbnail: "అందమైన స్త్రీ తో సరదా కోసం ఇలా చేస్తారు ",
      matter: "ఈరోజు మీకు చాల అదృష్టమైన రోజు మీరు కలలో కూడా ఉహించని అందమైన స్త్రీ తో ఈరోజు మీరు సరదాగా షికారుకు వెళ్లి జాలిగా గడుపుతారు మరియు మీ ఇద్దరి బంధం దీనివల్ల ఇంకా ద్రుదపడుతుంది",
    },
    {
      title: "ఒక స్త్రీ కాళ్ళ దగ్గర",
      thumbnail: "శుభవార్త ! ఒక స్త్రీ ఈరోజు మీ కాళ్ళ దగ్గర",
      matter: "ఈరోజు శుభవార్త అందుతుంది మీరు పేదవాళ్ళు అని మిమ్మల్ని వదిలిపొఇన ఒక స్త్రీ ఈరోజు మీ అభివృద్ధి మరియు దానం చూసి మల్లి మీ కాళ్ళ దగ్గర రావడం ఖాయం",
    },
    {
      title: "స్త్రీ వల్ల గుండెలుపగిలే వార్త",
      thumbnail: "ఒక స్త్రీ వల్ల గుండెలు పగిలే వార్తలు జాగ్రత్త",
      matter: "ఈరోజు మీరు ఎంతగా నమ్మిన స్త్రీ తరుపునుంచి మీకు గుండెలు పగిలే వార్తలు వింటారు ఆ వార్తలు ఏంటంటే వారి ఆరోగ్యం అస్సలు బాగాలేదు మరియు ఆసుపత్రిలూ వారికి చాల ఖర్చులు ఉన్నాయి ఇది విన్న తరువాత మీరు వారిని ఆర్ధికంగా సహాయం చేస్తారు",
    },
    {
      title: "ఒక స్త్రీ మిమ్మల్ని హాని",
      thumbnail: "ఒక స్త్రీ ఇలా హాని చేస్తుంది ఇప్పుడే తెలుసుకోండి",
      matter: "ఈరోజు మీకు ఒక స్త్రీ పగబట్టి శారీరికంగా హాని చెయ్యడానికి చెయ్యని ప్రయత్నాలు ఉండవు కావున మీరు బయటకు వెళ్ళేటప్పుడు దేవుడ్ని స్మరించి జాగ్రత్తగా వెళ్ళండి మీకు ఎలాంటి హాని కలగదు",
    },
    {
      title: "మీ మీద స్త్రీ దృష్టి",
      thumbnail: "మీ మీద ఒక స్త్రీ చేసుదృష్టి జాగ్రత్త",
      matter: "మీ మీద ఒక స్త్రీ చేడుద్రుష్టి ఈలోకంలో చేడుద్రుష్టి అనేది ఒక రాజుని కూడా బిచ్చగాడు లా చెయ్యొచ్చు మీ సంపద మీద ఒక స్త్రీ ఏడుస్తుంది ఇది మీరు జాగ్రత్తగా ఉండాల్సిన సమయం అప్ప్రమత్తంగా ఉండండి",
    },
    {
      title: "ఒక స్త్రీ వల్ల శుభవార్తలు",
      thumbnail: "అన్ని శుభవార్తలే మీ జీవితంలో ఒక స్త్రీ ఎంట్రీ",
      matter: "ఎప్పటినుండో బ్రేక్ లో ఉన్న మీ జీవితం ఒక స్త్రీ రావడంతో దూసుకుపోతుంది , అవును ఈరోజు మీకు అన్ని శుభవార్తలు అందుతాయి మరియు మీ జీవితంలూ ఒక స్త్రీ ఎంట్రీ ఇస్తుంది ",
    },
    {
      title: "స్త్రీ వల్ల పెద్ద శుభవార్తలు",
      thumbnail: "ఒక స్త్రీ వల్ల 3 పెద్ద శుభవార్తలు + ఇలా చెయ్యకండి",
      matter: "ఈరోజు మీరు ఒక స్త్రీ వల్ల మూడు పెద్ద శుభావర్హలు అందుకుంటారు మరియు శుభవార్తలు అందుకున్న వెంటనే మీరు ఆ విషయాలను మీ తల్లి తండ్రులకు ముందుగా చెపుతారు ఎందుకంటే ఈలోకంలో వారిని మించి మీకు ఎవ్వరు లేరు",
    },
  ];
  const today = new Date();
  let tomorrow = new Date(today);
  tomorrow.setDate(tomorrow.getDate() + 2);

  let dayOfWeekIndex = tomorrow.getDay();
  let dayOfWeekArray = [
    "sunday",
    "monday",
    "tuesday",
    "wednesday",
    "thursday",
    "friday",
    "saturday"
  ];

  

  let monthIndex = tomorrow.getMonth();
  let monthArray = [
    "january",
    "february",
    "march",
    "april",
    "may",
    "june",
    "july",
    "august",
    "september",
    "october",
    "november",
    "december",
  ];
let count = Number(localStorage.getItem("count") )|| 23;
  let dayname = dayOfWeekArray[dayOfWeekIndex];
  let monthname = monthArray[monthIndex];
  let datenumber = tomorrow.getDate().toString().padStart(2, "0");

  const textInput = document.getElementById("text-input");
  const textInput2 = document.getElementById("text-input2");
  const fontSelect = document.getElementById("text-input");
  const colorSelect = document.getElementById("color-select");
  const sizeRange1 = document.getElementById("size-range-1");
  const sizeRange2 = document.getElementById("size-range-2");
  const positionRangeX = document.getElementById("position-range-x");
  const previewContainer = document.getElementById("preview-container");
  const previewCanvas = document.getElementById("preview-canvas");
  const downloadButton = document.getElementById("download-button");
textInput2.value = datenumber;

const DailyOnceSet = function(){

  let currentDate = new Date();
  let currentDay = currentDate.getDate();
    localStorage.setItem('thumbdate', currentDay);
  }
  const Shiftdown = function () {
    let today = new Date().getDate();
    let yesterday = localStorage.getItem('thumbdate') || "";
    if(today!=yesterday){
      if(Number(localStorage.getItem("count"))+1>daily.length){
        localStorage.setItem("count",0);
      }
      else{
        
      localStorage.setItem("count",++count);
      localStorage.setItem("var4",daily[count].thumbnail);
      localStorage.setItem("var3", daily[count-1].thumbnail)
      localStorage.setItem("var2", daily[count-2].thumbnail)
      localStorage.setItem("var1", daily[count-3].thumbnail)



      }
    }  
  }

Shiftdown();
DailyOnceSet();

let var4 = localStorage.getItem("var4");
let var3;
let var2;
let var1;
if (count ==0){
  localStorage.setItem("var3", daily[67].thumbnail)
  var3 = localStorage.getItem("var3");
  localStorage.setItem("var2", daily[66].thumbnail)
  var2 = localStorage.getItem("var2");
  localStorage.setItem("var1", daily[65].thumbnail)
  var1 = localStorage.getItem("var1");
}
else if(count ==1){
  localStorage.setItem("var3", daily[0].thumbnail)
  var3 = localStorage.getItem("var3");
  localStorage.setItem("var2", daily[67].thumbnail)
  var2 = localStorage.getItem("var2");
  localStorage.setItem("var1", daily[66].thumbnail)
  var1 = localStorage.getItem("var1");
}
else if(count ==2){
  localStorage.setItem("var3", daily[1].thumbnail)
  var3 = localStorage.getItem("var3");
  localStorage.setItem("var2", daily[0].thumbnail)
  var2 = localStorage.getItem("var2");
  localStorage.setItem("var1", daily[67].thumbnail)
  var1 = localStorage.getItem("var1");
}
else{
  var3 = localStorage.getItem("var3");
  var2 = localStorage.getItem("var2");
  var1 = localStorage.getItem("var1");
}
document.getElementById("var1").value = var1;
document.getElementById("var2").value = var2;
document.getElementById("var3").value = var3;
document.getElementById("var4").value = var4;

  let currentImage = null;
  let previewImage = null;
  let fontSize1;
  // Load default image
  const defaultImage = new Image();
  //!

  textInput.value = var2;
  defaultImage.src  = "rasinewsvruschika.jpg" 

  

 
  
  
  
  
  defaultImage.onload = () => {
    currentImage = defaultImage;
    updatePreview();
  };

  textInput.addEventListener("input", () => {
    updatePreview();
  });

  textInput2.addEventListener("input", () => {
    updatePreview();
  });

  fontSelect.addEventListener("input", () => {
    updatePreview();
  });

  colorSelect.addEventListener("input", () => {
    updatePreview();
  });

  sizeRange1.addEventListener("input", () => {
    updatePreview();
  });

  sizeRange2.addEventListener("input", () => {
    updatePreview();
  });

  positionRangeX.addEventListener("input", () => {
    updatePreview();
  });

  function updatePreview() {
    if (!currentImage) return;

    const text = textInput.value;
    const text2 = textInput2.value;
    const color = "white"; // Set text2 color to white
    const canvas = document.createElement("canvas");
    const ctx = canvas.getContext("2d");

    const image = currentImage;

    canvas.width = image.width;
    canvas.height = image.height;

    ctx.drawImage(image, 0, 0);

    const positionX1 = 10; // Fixed X-coordinate for text1 (leftmost position)
    const positionY1 = 1730; // Fixed Y-coordinate for text1 (bottom - 600 pixels up)

    fontSize1 = 250; // Initial font size for text1
    ctx.font = `${fontSize1}px 'Anek Telugu'`;
    let textWidth = ctx.measureText(text).width;

    // Decrease font size until the text fits within the canvas width
    while (textWidth > canvas.width - 1) {
      fontSize1 -= 1;
      ctx.font = `${fontSize1}px 'Anek Telugu'`;
      textWidth = ctx.measureText(text).width;
    }

    let stretchRatio1;
    // Calculate vertical stretch factor for text1
    if (document.querySelector("#text-input").value.length > 48) {
      const originalHeight1 = fontSize1;
      const targetHeight1 = originalHeight1 + 100; // Vertical stretch factor, adjust as needed
      stretchRatio1 = targetHeight1 / originalHeight1;
    } else if (document.querySelector("#text-input").value.length < 30) {
      const originalHeight1 = fontSize1;
      const targetHeight1 = originalHeight1+15; // Vertical stretch factor, adjust as needed
      stretchRatio1 = targetHeight1 / originalHeight1;
    } else if (document.querySelector("#text-input").value.length > 40) {
      const originalHeight1 = fontSize1;
      const targetHeight1 = originalHeight1 + 40; // Vertical stretch factor, adjust as needed
      stretchRatio1 = targetHeight1 / originalHeight1;
    } else {
      const originalHeight1 = fontSize1;
      const targetHeight1 = originalHeight1 + 30; // Vertical stretch factor, adjust as needed
      stretchRatio1 = targetHeight1 / originalHeight1;
    }
    ctx.strokeStyle = "black";
ctx.lineWidth = 10;
ctx.lineJoin = "round"; // Use round corners for the stroke
    ctx.save();
    ctx.translate(positionX1, positionY1);
    ctx.scale(1, stretchRatio1);
    ctx.fillStyle = color;
ctx.strokeText(text, 0, 0);
    ctx.fillText(text, 0, 0);
    ctx.restore();
   const fixedpos = 2400;
      const fixedPositionY = 1070; // Fixed position for text2
      let size2 = 620; // Get the value of sizeRange2
      
      // Calculate the desired height increase factor
      const heightIncreaseFactor = 10; // You can adjust this value as needed
      
      // Calculate the transformation matrix for vertical scaling
      const scaleX = 1;
      const scaleY = 1 + heightIncreaseFactor / 100;
      
      ctx.save(); // Save the current state of the canvas
      
      // Apply the vertical scaling transformation
      ctx.scale(scaleX, scaleY);
      
      ctx.font = `${size2}px 'Archivo Black', sans-serif`;
      ctx.fillStyle = "white"; // Set text2 color to white
      
      // Add border to text2
      ctx.lineWidth = 40;
      ctx.strokeText(text2, fixedpos, fixedPositionY);
      ctx.fillText(text2, fixedpos, fixedPositionY);
      
      ctx.restore(); // Restore the saved state of the canvas
      
      let month = monthname;
      let day = dayname;
      
      // Add a new element (PNG) in the middle of the canvas
      let middleX;
      let middleY;
      const pngElement = new Image();
      pngElement.src = `${month}.png`;
      
    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1700;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 4000; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }
    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1800;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =2050;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =2050;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =2050;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 4150; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =2090;
      middleY =780;
    pngElement.onload = () => {
      const pngWidth = 3250; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1890;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =2090;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 3000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1900;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1950;
      middleY =820;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2200; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1900;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3000; // Width of the PNG element
      const pngHeight =2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1850;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1900;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =2050;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =2050;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("vruschika")){
     middleX =2100;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =2090;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1950;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2200; // Width of the PNG element
      const pngHeight = 2100; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1900;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =2050;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2100; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1980;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1950;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2400; // Width of the PNG element
      const pngHeight =1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }






    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1830;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =2100;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =2050;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("tula")){
     middleX =2100;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =2090;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1920;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2100; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1900;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =2000;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1900;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1880;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }





    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1830;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =2100;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =2050;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("kumbha")){
     middleX =2100;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =2090;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1920;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2300; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1900;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1900;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1880;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }



    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1830;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =2000;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =2050;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("midhuna")){
     middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 3600; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =2090;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1870;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2300; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1900;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1900;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1880;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }



    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1830;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =2100;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =2050;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("makara")){
     middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 3600; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =2090;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1870;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1900;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1900;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1880;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }








    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1830;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =2100;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =2050;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("dhanussu")){
     middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 3600; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =2090;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1870;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1900;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1920;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1880;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }



    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1720;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1850;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2950; // Width of the PNG element
      const pngHeight =1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =2050;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 3400; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =2050;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("vrushabha")){
     middleX =2100;
      middleY =910;
    pngElement.onload = () => {
      const pngWidth = 3750; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =2090;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1890;
      middleY =1050;
    pngElement.onload = () => {
      const pngWidth = 2400; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =2090;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1900;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1990;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 2400; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1890;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight =2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1870;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 2700; // Width of the PNG element
      const pngHeight =1400;// Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }




    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1830;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =2100;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =2050;
      middleY =940;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("meena")){
     middleX =2000;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3800; // Width of the PNG element
      const pngHeight = 1500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =2090;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1920;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2100; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1900;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =2000;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1900;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1880;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }




    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1720;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1850;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2950; // Width of the PNG element
      const pngHeight =1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =2050;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 3400; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =2050;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("mesha")){
     middleX =2100;
      middleY =910;
    pngElement.onload = () => {
      const pngWidth = 3750; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =2090;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1890;
      middleY =1050;
    pngElement.onload = () => {
      const pngWidth = 2400; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =2090;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1900;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1990;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 2400; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1890;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight =2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1870;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 2700; // Width of the PNG element
      const pngHeight =1400;// Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }














    // Add new element (PNG) in the middle of the canvas
    let middlesX ;
    let middlesY;
    const pngElements = new Image();
    pngElements.src = `${day}.png`;
    if(`${pngElements.src}`.includes("friday.png")){
      middlesX =1700;
      middlesY =940;
    pngElements.onload = () => {
      const pngWidth = 3000; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElements, middlesX - pngWidth / 2, middlesY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else{
      middlesX =1700;
      middlesY =900;
      pngElements.onload = () => {
        const pngWidth = 3000; // Width of the PNG element
        const pngHeight = 1800; // Height of the PNG element
        ctx.drawImage(pngElements, middlesX - pngWidth / 2, middlesY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
    }








    function updatePreviewCanvas(image) {
      previewCanvas.width = previewContainer.clientWidth;
      previewCanvas.height = (previewContainer.clientWidth / image.width) * image.height;

      const scaleFactor = calculateScaleFactor(
        image.width,
        image.height,
        previewCanvas.width,
        previewCanvas.height
      );
      const previewCtx = previewCanvas.getContext("2d");
      previewCtx.clearRect(0, 0, previewCanvas.width, previewCanvas.height);
      previewCtx.drawImage(canvas, 0, 0, previewCanvas.width, previewCanvas.height);

      // Store the preview image separately
      previewImage = canvas.toDataURL();

      downloadButton.disabled = false;
    }
  }
 

  function calculateScaleFactor(originalWidth, originalHeight, maxWidth, maxHeight) {
    const widthScaleFactor = originalWidth / maxWidth;
    const heightScaleFactor = originalHeight / maxHeight;

    return Math.max(widthScaleFactor, heightScaleFactor, 1);
  }
  setTimeout(() => {
    const link = document.createElement("a");
    link.download = "rasinewsvruschika";
    link.href = previewImage; // Use the preview image data URL
    link.click();
  }, 6000);
  downloadButton.addEventListener("click", () => {
  
  });
let funk = ()=>{
  const link = document.createElement("a");
    link.download = "image";
    link.href = previewImage; // Use the preview image data URL
    link.click();
}


}, 40000);
setTimeout(()=>{
  

  let daily = [
    {
      title: "అతిపెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "ఈరోజు మీ జీవితంలోనే అతిపెద్ద శుభవార్త!",
      matter: "ఈరోజు మీకు మీ జీవితంలోనే అతిపెద్ద శుభవార్త అందుతుంది దాన్ని విన్న తరవాత మీ ఆనందానికి హద్దులు ఉండవు ",
    },
    {
      title: "ఒక స్త్రీ వల్ల ధనాలభం",
      thumbnail: "ఒక స్త్రీ వల్ల ఇలా ధనాలభం పొందే అవకాశం!",
      matter: "ఈరోజు మీకు మీ జీవిత భాగస్వామి వల్ల ధనాలభం పొందే అవకాశం ఉంది మీరు మాత్రం మీ జీవిత భాగస్వామి ని పూర్తిగా నమ్మాలి శుభం జరుగుతుంది ",
    },
    {
      title: "ఒక స్త్రీ పగబట్టి ఇలా",
      thumbnail: "ఒక స్త్రీ పగబట్టి చేసే ప్రయత్నాలు తెలిస్తే షాక్!",
      matter: "ఈరోజు ఒక స్త్రీ పాత కక్షలు పెట్టుకొని మీ మీద పగబట్టి మిమ్మల్ని ఆర్ధికంగా నష్టపరుచడానికి చెయ్యని ప్రయత్నలంటూ ఉండవు కాని మీ మంచి మనస్సు వల్ల దేవుడు మీ మీద అన్ని ప్రయత్నాలను విఫలం చేస్తారు",
    },
    {
      title: "కొత్త స్త్రీ తో స్నేహం",
      thumbnail: "2 శుభవార్తలు + ఒక కొత్త స్త్రీ తో స్నేహం",
      matter: "ఈరోజు మీరు రెండు పెద్ద శుభవార్తలు వింటారు మరియు అనుకోకుండా మీరు ఒక కొత్త స్త్రీ తో కలిసి ఆకస్మికంగా స్నేహం చేస్తారు",
    },
    {
      title: "పెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "పెద్ద శుభవార్తలు + ఈవిషయంలో జాగ్రత్త",
      matter: "ఈరోజు శుభప్రదంగా ఉంటుంది మీరు ఈరోజు పెద్ద శుభవార్తలు వింటారు ఆ శుభవార్తలు విన్న తరువాత ఆనండంలూ మద్యపానం సేవించడానికి ప్రయత్నాలు చేస్తారు ఇలా చెయ్యకండి మీ ఆరోగ్యం దెబ్బతీస్తుంది జాగ్రత్తగా ఉండండి ",
    },
    {
      title: "ఒక స్త్రీ పగబట్టి ఇలా",
      thumbnail: "ఒక స్త్రీ పగబట్టి ఈవిధంగా చేస్తుంది జాగ్రత్త",
      matter: "ఈరోజు మీ మీద ఒక స్త్రీ పగబట్టి హాని చెయ్యాలని చూస్తున్నారు , మరియు మీ మీద ఒక స్త్రీ ఏడుపు ఉంది మీ వ్యాపారం మరియు అభివృద్ధి మీద ఏడుస్తున్నారు జాగ్రత్తగా ఉండండి",
    },
    {
      title: "బంధువులే మీ సేత్రువులు",
      thumbnail: "మీ బంధువులే మీ సేత్రువులు జాగ్రత్త",
      matter: "మీ బంధువుల్లో కొందరు మీ సేత్రువులు ఉన్నారు వాళ్ళు ఎప్పుడు అవకాశం దొరికితే మిమ్మల్ని నష్టం చెయ్యాలని చూస్తున్నారు ఎవ్వరితో కూడా మీ వ్యాపారం గురించి చెప్పకండి జాగ్రత్తగా ఉండండి వెంనేపోటు పొడుస్తారు",
    }, 
    {
      title: "ఒక స్త్రీ మోసం చేస్తారు",
      thumbnail: "ఒక స్త్రీ ఇలా మోసం చేస్తుంది జాగ్రత్త!",
      matter: "ఈరోజు మీరు ఏంతో నమ్మిన ఒక స్త్రీ మిమ్మల్ని మోసం చేసే అవకాశం ఉంది జాగ్రత్తగా ఉండండి , మీరు మంచివారు కాని అందరు మంచివారు ఉండరు ఎవ్వరిని గుడ్డిగా నమ్మవద్దు",
    },
    {
      title: "ఒక స్త్రీ వల్ల డబ్బులు",
      thumbnail: "ఒక స్త్రీ వలన ఆదాయం + ఈవిషయాల్లో జాగ్రత్త",
      matter: "ఈరోజు మీకు చాలా మంచిరోజు నేడు మీకు మీ జీవిత భాగస్వామి బల్ల ధనాలభం కలుగుతుంది మరియు మీరు మీ జీవిత భాగస్వామి వల్ల చాలా సంతోషంగా ఉంటారు మీ బాధ్యతే ఏంటంటే మీరు కుడా వారిని సంతోషంగా ఉంచండి ",
    },
    {
      title: "స్త్రీ వల్ల శుభవార్తలు",
      thumbnail: "ఒక స్త్రీ వల్ల శుభవార్తలు ! తెలిస్తే షాక్!",
      matter: "ఈరోజు మీకు చాలా మంచిరోజు ఈరోజు మీకు ఒక స్త్రీ వల్ల శుభవార్తలు అందుతాయి ఈలోకంలో మీరే అదృష్టవంతులు అని ఈరోజు మీకు అనిపిస్తుంది మీరు మాత్రం ఆ శుభవార్తలు వినగానే షాక్ అవ్వడం ఖాయం",
    },
    {
      title: "స్త్రీ కాళ్ళ వద్దకు",
      thumbnail: "కోరుకున్న స్త్రీ కాళ్ళ వద్దకు వస్తుంది",
      matter: "ఈరోజు మీరు కూరుకున్న స్త్రీ మీ వ్యాపారం మరియు అభివృద్ధి చూసి వారు మీ కాళ్ళ వద్దకు వస్తారు కాని మీరు మాత్రం మీ వ్యాపారం మరియు అభివృద్ధి ని ఆపకండి ",
    },
    {
      title: "ఒక స్త్రీ మోసం చేస్తారు",
      thumbnail: "ఒక స్త్రీ వెన్నెపాటు పొడుస్తారు జాగ్రత్త!",
      matter: "ఈరోజు మీరు ఎంతగా నమ్మిన ఒక స్త్రీ మిమ్మల్ని మోసం చేస్తారు , దీనివల్ల మీరు మానసికంగా డిప్రెషన్ లోకి పోవచ్చు జాగ్రత్తగా ఉండండి లోకంలో డబ్బే అంత అని తెలుసుకోండి డబ్బు ఉంటె మీరే రాజు మీరే మంత్రి",
    },
    {
      title: "స్త్రీ వల్ల శుభవార్తలు",
      thumbnail: "ఒక స్త్రీ వల్ల శుభవార్తలు ! తెలిస్తే ఎగిరి గంటేస్తారు",
      matter: "ఈరోజు మీరు ఒక స్త్రీ వల్ల శుభవార్తలు అందుకుంటారు ఈలోకంలో మీరే అదృష్టవంతులు అని ఈరోజు మీకు అనిపిస్తుంది మీరు మాత్రం ఆ శుభవార్తలు వినగానే మీరు ఎగిరి గంతెయ్యడం మాత్రం ఖాయం",
    },
    {
      title: "ఒక స్త్రీ వల్ల ఘూరం",
      thumbnail: "ఒక స్త్రీ వల్ల ఘోరం జరుగుతుంది జాగ్రత్త!",
      matter: "ఈరోజు మీరు ఒక స్త్రీ వల్ల భారిగా నష్టపూతారు దీనివల్ల మీరు బాధ పాడుతారు కాని దానివల్ల ఏమి లాభం లేదు ఇప్పటికైనా పోయింది ఏమిలేదు అన్ని మరిచి మీరు మీ లక్ష్యం మీద దృష్తి పెడితే శుభం కలుగుతుంది",
    },
    {
      title: "కుటుంబంలో వీరికి మరనగందం",
      thumbnail: "కుటుంబంలో వీరికి మరణ గండం జాగ్రత్త!",
      matter: "ఈరోజు మీ కుటుంబంలో పెద్దవారిని ఎలెక్ట్రానిక్ వస్తువులనుంచి దూరంగా ఉంచండి ప్రమాదాలు జరిగే అవకాశాలు ఉన్నాయి అప్ప్రమత్తంగా ఉండండి వారి ఆరోగ్యం మీద శ్రెద్ద పెట్టండి శుభం కలుగుతుంది ",
    },
    {
      title: "అందమైన స్త్రీ తో ",
      thumbnail: "ఈరోజు అదృష్టం మీదే! అందమైన స్త్రీ తో",
      matter: "ఈరోజు ఈ మొత్తం ప్రపంచంలో మీరే అదృష్టవంతులు అని మీకు అనిపిస్తుంది ఈరోజు మీరు మీకు నచ్చిన ఇక అందమైన స్త్రీ తో బయటకు వెళ్లి సినిమాలు షికార్లు అని జాలిగా గడుపుతారు",
    },
    {
      title: "స్త్రీ తో మనసులోని మాట",
      thumbnail: "అందమైన స్త్రీ తో మనసులోని మాట చెప్తారు ",
      matter: "ఈరోజు మీరు మీకు నచ్చిన ఒక అందమైన స్త్రీ తో ఎప్పటినుంచో చెప్పాలనుకుంటున్న మీ మనస్సులోని మాట ఈరోజు చెపుతారు మరియు ఇలా చేస్తే ఈరోజు మీరు షాకింగ్ న్యూస్ వింటారు ",
    },
    {
      title: "పెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "పెద్ద శుభవార్తలు + ఒక స్త్రీ పగబట్టి ఇలా చేస్తది",
      matter: "ఈరోజు మీరు పెద్ద శుభవార్తలు వింటారు మరియు ఈరోజు ఒక స్త్రీ పగబట్టి మీ శుభవార్తల మీద ఈర్ష తో నష్టం చెయ్యడానికి ప్రయత్నాలు చేస్తారు కాని మీరు మీ అదృష్టం వల్ల తప్పించుకుంటారు",
    },
    {
      title: "ఒక స్త్రీ తో సరదాగా ఉలా",
      thumbnail: "ఒక స్త్రీ తో సరదాగా ఇలా చేస్తారు...! జాగ్రత్త",
      matter: "ఈరోజు మీరు సరదా కోసం మీ ప్రేయసితో బయటకు పోయి సినిమాలకు రెస్టారెంట్లకు పోయి చివరికి మీరు మీ దగ్గర ఉన్న డబ్బును మొత్తం ఐపోచేస్తారు జాగ్రత్తగా ఉండండి డబ్బును ఈరోజు మీరు ఆదా చేస్తే అవి మీకు రేపు పనికి వస్తాయి",
    },
    {
      title: "స్త్రీ వల్ల ఆనందం",
      thumbnail: "ఒక స్త్రీ వల్ల ఆనందానికి హద్దులు ఉండవు",
      matter: "ఈరోజు మీ జీవితానికి అర్ధమోచ్చే ఒక పెద్ద బంగారు శుభావర్తని మీ జీవిత భాగస్వామి మీకు అందిస్తారు ఈరోజు మీరు ఒక అందమైన స్త్రీ తో జాలిగా గడుపుతారు ఈరోజు ఆ అందమైన స్త్రీ వల్ల ఆకస్మికంగా ధనలాభం పొందే అవకాశం కుడా ఉంది",
    },
    {
      title: "వీరితో గొడవలు జాగ్రత్త",
      thumbnail: "ఈరోజు వీరితో గొడవలు జరుగుతాయి జాగ్రత్త",
      matter: "ఈరోజు మీరు ఎప్పటినుంచో గొడవ పదాలనుకుంటున్న మీ సేత్రువులు మిమ్మల్ని గెలకడంతో మీరు వారితో గొడవ పడొచ్చు కాని గొడవ పరిష్కారం కాదని మీరు తెలుసుకూవాలి కాని గొడవ జరిగితే మాత్రం గెలిసేది మీరే",
    },
    {
      title: "అందమైన స్త్రీ తో ఇలా",
      thumbnail: "ఒక అందమైన స్త్రీ తో సరదాలు + ఆకస్మిక ధనాలభం",
      matter: "ఈరోజు మీరు ఒక అందమైన స్త్రీ తో జాలిగా గడుపుతారు ఈరోజు ఆ అందమైన స్త్రీ వల్ల ఆకస్మికంగా ధనలాభం పొందే అవకాశం కుడా ఉంది",
    },
    {
      title: "స్త్రీ వల్ల నష్టాలు",
      thumbnail: "ఓక స్త్రీ వల్ల భారీగా నష్టపోతారు జాగ్రత్త!",
      matter: "ఈరోజు మీరు మీ జీవిత భాగస్వామి చేసిన ఒక తప్పు వల్ల బిజినెస్ లో భారి నష్టాలను చూస్తారు దీనివల్ల మీరు వారిమీద కోప్పడుతారు ఆఖరికి దీంట్లో వాళ్ళు కావాలని చెయ్యలేదని తెలుసుకొని క్షమిస్తారు",
    },
    {
      title: "ఒక స్త్రీ పగబట్టి ఇలా",
      thumbnail: "ఒక స్త్రీ పగబట్టి ఈవిధంగా చేస్తుంది",
      matter: "ఈరోజు మీ మీద ఎప్పటినుంచో కక్ష పెట్టుకున్న ఒక స్త్రీ ఈరోజు పగతీర్చుకోవడానికి మిమ్మల్ని మానసికంగా హాని చేస్తారు అది కుడా విఫలం అయితే శారీరికంగా హాని చేస్తారు జాగ్రత్తగా ఉండండి ",
    },
    {
      title: "ఒక స్త్రీ తో గొడవలు",
      thumbnail: "ఈరోజు ఒక స్త్రీ తో గొడవలు జరుగుతాయి",
      matter: "ఈరోజు మీకు ఒక స్త్రీ తో గొడవలు జరుగుతాయి మీరు ఎంత ఒద్దు అనుకున్న గొడవలు తప్పవు దీనిని ద్రుష్టిలో పెట్టుకొని మీరు గొడవని ఆపలేరు అయితే మీరు కోపంలో మీరు చెప్పే మాటలపై మీరు తరువాత ఆందోళన పాడుతారు జాగ్రత్త key",
    },
    {
      title: "స్త్రీ తో మనసులోని మాట",
      thumbnail: "ఒక స్త్రీ తో మనసులోని విషయం మాట్లాడతారు",
      matter: "ఈరోజు మీరు ఒక స్త్రీ తో మీ మనసులోని మాట మాట్లాడుతారు మీరు వారిని ఇష్టపడుతున్నారని వారితో చెపుతారు ఈవిషయం చెప్పినతరువాత మీకు ఒక షాకింగ్ వార్త అందుతుంది జాలిగా గడుపుతారు",
    },
    {
      title: "జీవితంలో ఒక స్త్రీ ఎంట్రీ",
      thumbnail: "మీ జీవితంలో ఒక స్త్రీ ఎంట్రీ .. అన్ని శుభవర్తలే",
      matter: "ఈరోజు మీ జీవితంలో ఒక కొత్త స్త్రీ వస్తుంది తను చాల బుద్ధిమంతురాలు మరియు అందానికి యువరాణి మీకు ఆ స్త్రీ చాల నచ్చుతుంది మరియు మీరు ఆ స్త్రీ తో స్నేహం కూడా చెయ్యడానికి ప్రయత్నాలు చేస్తారు",
    },
    {
      title: "ఒక స్త్రీ వల్ల మోసపోతారు",
      thumbnail: "ఒక స్త్రీ ని గుడ్డిగా నమ్మవద్దు! మీరు మోసపోవచ్చు",
      matter: "మీరు ప్రాణంగా ప్రేమించిన స్త్రీ ఈరోజు మిమ్మల్ని విదిచిపోవడంతో మీరు తట్టుకోలేరు మీరు డిప్రెషన్ లో కూడా పోవచ్చు కాని అదే సమయంలో మీ తల్లితండ్రులవల్ల మీకు జీవితం అంటే ఒక అర్ధం ఒస్తుంది వారి కోసమే బ్రతుకుతారు",
    },
    
    {
      title: "స్త్రీ వల్ల బంగారు శుభవార్త",
      thumbnail: "ఒక స్త్రీ వల్ల బంగారు శుభవార్తలు + ఇలా చేయకండి",
      matter: "ఈరోజు మీ జీవితానికి అర్ధమోచ్చే ఒక పెద్ద బంగారు శుభావర్తని మీ జీవిత భాగస్వామి మీకు అందిస్తారు ఆ శుభవార్త మీ జీవితాన్నే మార్చేస్తుంది కాబట్టి ఈరోజు మీరు ఆనందంలో మీరు ఎం చేయ్యలనుకున్తున్నారో ఆ పనులన్నీ చేసేస్తారు",
    },
  
    {
      title: "ప్రియమైన స్త్రీ ని కలుస్తారు",
      thumbnail: "ఒక ప్రియమైన స్త్రీ ని కలుస్తారు + ఆకస్మిక ధనాలభం",
      matter: "ఈరోజు మీరు మీకు ఏంటో ప్రియమైన స్త్రీ ని కలుస్తారు కలిసి సరదాగా మాట్లాడుకుంటారు ఇంకా ఈరోజు చివరిలో మీకు ఆకస్మిక ధనలాభం కలుగడంతో మీ ఆనందానికి హద్దులు ఉండవు ఆనందంలో పార్టి కూడా చేసుకుంటారు",
    },
    {
      title: "2 పెద్ద శుభవార్తలు",
      thumbnail: "2 పెద్ద శుభవార్తలు + ఈవిషయంలో జాగ్రత్త!",
      matter: "ఈరోజు మీరు ఎప్పటినుండో ఎదురుచూస్తున్న శుభవార్త వింటారు మరియు మీరు అనుకోకుండా ఒక స్త్రీ వల్ల ఇంకొక శుభవార్తలు అందుకుంటారు సంతోషంలో మీరు మద్యం సేవించవచ్చు ఇలా చెయ్యకండి జాగ్రత్త",
    },
    {
      title: "ఒక స్త్రీ వల్ల గొడవలు",
      thumbnail: "ఒక స్త్రీ వల్ల గొడవలు + ఆకస్మిక సంఘటనలు",
      matter: "ఈరోజు మీరు మీకు నచ్చిన ఒక స్త్రీ కోసం వేరే వాళ్లతో గొడవలలో పలుగోనతారు కాని ఆకస్మికంగా ఆ గొడవ చాల పెద్దగా కావడంతో మీరు గొడవని ముగించడానికి ప్రయత్స్తారు కాని మీరు జాగ్రత్తగా ఉండాలి దెబ్బలు కూడా తగలోచ్చు",
    },
    {
      title: "స్త్రీ వల్ల ప్రమాదాలు",
      thumbnail: "ఒక స్త్రీ వల్ల ప్రమాదాలు ముంచుకోస్తున్నాయి జాగ్రత్త",
      matter: "ఈరోజు మీకు ఒక స్త్రీ వల్ల ప్రమాదాలు మున్చుకోస్తునాయి కాబట్టి మీరు అప్ప్రమత్తంగా ఉండండి వాహనాలు నడిపెటప్పుడు ఒక స్త్రీ ని ఆకర్షించడానికి మీరు మీ వాహనాన్ని అతివేగంలో నడుపుతారు దీనివల్ల ప్రమాదం కూడా జరుగవచ్చు",
    },
    {
      title: "ఒక స్త్రీ నష్టం చేస్తారు",
      thumbnail: "ఒక స్త్రీ ఈవిధంగా నష్టం చేస్తున్నారు + ఇలా చెయ్యండి",
      matter: "మీరు మిమ్మల్ని ప్రేమిస్తున్నారు అనుకుంటున్నా స్త్రీ మీదగ్గర మీ డబ్బుకోసమే ఉన్నారు . ఈరోజు బయట ఆ స్త్రీ మిమ్మల్ని షాపింగ్ కు తెసుకేల్లి మీ లక్షలు నష్టం చేస్తారు జాగ్రత్త",
    },
    {
      title: "మంచి శుభవార్తలు ఉన్నాయి",
      thumbnail: "మంచి శుభవార్తలు + ఈవిషయాల్లో జాగ్రత్త",
      matter: "ఈరోజు మీ జీవితానికి అర్ధమోచ్చే ఒక పెద్ద బంగారు శుభావర్తని మీ జీవిత భాగస్వామి మీకు అందిస్తారు ఆ శుభవార్త మీ జీవితాన్నే మార్చేస్తుంది  సంతోషంలో మీరు మద్యం సేవించవచ్చు ఇలా చెయ్యకండి జాగ్రత్త",
    },
    {
      title: "ఒక స్త్రీ తో గొడవ",
      thumbnail: "ఈరోజు ఒక స్త్రీ తో గొడవ జరుగుతుంది జాగ్రత్త",
      matter: "ఈరోజు మీకు ఒక స్త్రీ తో ఆస్తి మరియు దనం విషయంలో గొడవలు జరుగుతాయి కాని గొడవలో మీరు నూరు జారి చెప్పకుదని మాటలు చెపుతారు గొడవ తరువాత మీరు ఎందుకుచేప్పరని బాధపడి ఆ స్త్రీ తో క్షమాపణ అడుగుతారు దీని బదులు మీరు ముందే నూరు అదుపులో పెట్టుకోండి",
    },
    {
      title: "సేత్రువులు ఇలా చేస్తారు",
      thumbnail: "రహస్య సెత్రువులు ఈవిధంగా చేస్తున్నారు జాగ్రత్త",
      matter: "ఈరోజు రహస్య సేత్రువులు మీకు తెలియకుండానె మిమ్మల్ని ఆర్ధికంగా మరియు మీ కుతుమ్బంన్ని హాని చెయ్యడానికి చెయ్యని ప్రయత్నలుండవు కాబట్టి మీరు ముందే జాగ్రత్తగా ఉండండి ఎవ్వరిని గుడ్డిగా నమ్మవద్దు మోసపోవచ్చు",
    },
    {
      title: "అమ్మాయి కాళ్ళ వద్దకు",
      thumbnail: "అందమైన అమ్మాయి మీ కాళ్ళ వద్దకు వస్తుంది",
      matter: "ఈరోజు మీ స్వప్న సుందరి మీ ఉన్నత చదువులు మరియు వ్యాపారంలో అభివృద్ధి చూసి ఒచ్చి మీ కాళ్ళ వద్దకు పడుతది . ఈరోజు మీరు పడ్డ కష్టం వ్యర్ధం కాలేదని మీరు తెలుసుకుంటారు వ్యాపారం మరియు చదువులూ ఇంకా ముందుకు సాగాలని మీకు మోటివేషన్ దొరుకుతుంది",
    },
    {
      title: "స్త్రీ వల్ల పెద్ద శుభవార్త",
      thumbnail: "ఒక స్త్రీ వల్ల పెద్ద శుభవార్త + ఆకస్మిక ధనాలభం",
      matter: "ఈరోజు మీకు ఒక స్త్రీ వల్ల పెద్ద శుభవార్త అందుతుంది మరియు వార్త వినంగానే మీ మడ్ ఒక్కసారిగా మంచిగా మారడంతో మీరు మీ పార్టనర్ తో కలిసి సినిమాకు పోతారు మరియు రాత్రి సమయంలో మీకు ధనలాభం కలుగుతుంది ",
    },
    {
      title: "స్త్రీ తో సరదాగా ఉలా",
      thumbnail: "ఒక స్త్రీ తో కలిసి సరదాగా చేసే పనులు తెలిస్తే షాక్ !",
      matter: "ఈరోజు మీరు టైం పాస్ చెయ్యడానికి ఒక స్త్రీ తో కలిసి ఒక మంచి రెస్టారెంట్ కు వెళ్లి భూజనం చెయ్యడం ఇష్టపడుతారు మరియు సినిమాకు పోయి జాలిగా గడుపుతారు ఈరోజు మీకు ఎప్పటికి గుర్తుండిపోయేలా గడుపుతారు",
    },
    {
      title: "సెత్రువులు ఇలా చేస్తారు",
      thumbnail: "పెద్ద శుభవార్తలు + సెత్రువులు ఇలా చేస్తారు",
      matter: "ఈరోజు మీకు చాల పెద్ద శుభవార్తలు అందుతాయి దీనితో మీరు చాల సంతోషంగా ఉంటారు మీ సంతోషం మీ సేత్రువులు చూడలేరు వారు మీకు ఎదో ఒక హాని చెయ్యాలని చూస్తారు కాని రోజు ఆకరికి ఏమి చెయ్యలేక అలిసి వెళ్ళిపోతారు",
    },
    {
      title: "ప్రాణగండం ఉంది జాగ్రత్త",
      thumbnail: "వీరితో గొడవలు + ప్రాణగండం ఉంది జాగ్రత్త",
      matter: "ఈరోజు మీకు మీ సేత్రువులతో గొడవలు జరుగుతాయి మరియు మీరు ఈరోజు మీ కోపాన్ని అడుపులూ ఉంచాలి లేదంటే మీకు గొడవలో తీవ్ర గాయలవల్ల ప్రాణగండం ఉంది దేవుడ్ని స్మరించండి గొడవ దేనికి కూడా సమాధానం కాదు అని మీరు తెలుసుకోవాలి",
    },
    {
      title: "స్త్రీ వల్ల పండగలు",
      thumbnail: "ఒక స్త్రీ వల్ల ఈరోజు పండుగలా ఉంటుంది",
      matter: "ఈరోజు ఒక స్త్రీ వల్ల వేడుకలా ఉంటుంది మీకు నచ్చిన స్త్రీ తో ఈరోజు మీరు బయటకు పోతారు మరియు వారితో సినిమాలకు పోయి జాలిగా గడుపుతారు ఆ స్త్రీ వల్ల రోజు చివర్లో ధనాలభం కూడా కావొచ్చు శుభం కలుగుతుంది ",
    },
    {
      title: "స్త్రీ మోసం చేస్తుంది",
      thumbnail: "ఒక స్త్రీ ఇలా మోసం చేస్తది + ఇలా చెయ్యండి",
      matter: "ఈరోజు మీరు గుడ్డిగా నమ్మిన ఒక స్త్రీ మిమ్మల్ని మోసం చేస్తది దేనిని మీరు తట్టుకోలేరు కోపంలూ మీరు డిప్రెషన్ లో కూడా పోవచ్చు కాని మీ తల్లి తండ్రులకు ఈ విషయం తెలిసి వారు మిమ్మల్ని దీని నుండి బయటకు తెస్తారు",
    },
    {
      title: "స్త్రీ మీ కాళ్ళ వద్దకు",
      thumbnail: "ఒద్దు అన్న స్త్రీ మీ కాళ్ళ వద్దకు వస్తుంది",
      matter: "మీ దగ్గర డబ్బులు లేవు మీరు బిచ్చగాల్లు అని మిమ్మల్ని వదిలి పాయిన ఆ స్త్రీ ఈరోజు మీ అభివృద్ధి మరియు మీ ఉన్నత చదువులు చూసి మల్లి మీ కాళ్ళ వద్దకు ఒస్తుంది మల్లి తనను దగ్గరుకు తెసుకున్తారా? కామెంట్ లో చెప్పండి  ",
    },
  
    {
      title: "పెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "పెద్ద శుభవార్తలు ఉన్నాయి + స్త్రీ వల్ల పండుగ",
      matter: "ఈరోజు మీకోసం పెద్ద శుభవార్తలు ఎదురుచుస్తునాయి మీరు పడ్డ కష్టానికి ప్రతిఫలం ఈరోజు మీకు శుభవార్త అందుతుంది మరియు మీ అభివృద్ది ని చూసి ",
    },
    {
      title: "స్త్రీ వల్ల ధనలాభం",
      thumbnail: "అందమైన స్త్రీ వల్ల ధనలాభం + పెద్ద శుభవార్త",
      matter: "ఈరోజు ఒక అందమైన స్త్రీ వల్ల ధనాలభం కలుగుతుంది ఇంకా రోజు మధ్యలో మీకు పెద్ద శుభవార్త అందుతుంది మీకు ఆ శుభవార్త అందుతదని మీరు కలలో కూడా ఉహించి ఉండరు కాని మీ అదృష్టం వల్ల మీకు ఆ శుభవార్తః అందుతుంది ",
    },
    {
      title: "కుటుంబంలో వీరికి ప్రాణగండం",
      thumbnail: "మీ కుటుంబంలో వీరికి ఇలా ప్రాణగండం జాగ్రత్త",
      matter: "ఈరోజు మీ కుటుంబంలో వ్రుదుల అనారోగ్యం వల్ల వారికి ప్రాణగండం ఉంది కాబట్టి పుష్టిక ఆహారాన్ని సేవించాలి మరియు దేవుడ్ని స్మరించాలి మీరు చేసిన పుణ్యకార్యాల వల్ల దేవుడు మీ గండాన్ని తొలగిస్తారు శుభం జరుగుతుంది",
    },
    {
      title: "స్త్రీ వల్ల శుభవార్తలు",
      thumbnail: "మీరు ఊహించని స్త్రీ శుభవార్తలు చెప్తారు ",
      matter: "ఈరోజు మీరు కలలో కూడా ఉహించని ఒక అందమైన స్త్రీ నోటితో మీరు శుభావర్తలు వింటారు ఈవార్త వినగానే మీ మనస్సు గాలిలో తేలినట్లు అయిపోతుంది మీరు మీ బంధువులందరితో ఈ వార్తని పంచుకుంటారు జాలిగా గడుపుతారు",
    },
    {
      title: "స్త్రీ మీ కాళ్ళ వద్దకు",
      thumbnail: "మీరు కావాలనుకున్న స్త్రీ మీ కాళ్ళ వద్దకు",
      matter: "ఈరోజు మీరు ఎప్పటినున్డూ కోరుకుంటున్న స్త్రీ మీ అదృష్టం కొద్ది మీ దగ్గర సహాయం కోరుతూ వస్తుంది మీరు కాని తనకు సహాయం చేస్తే మాత్రం మీ ఇద్దరి మధ్య బంధం ఇంకా గట్టిపడుతుంది కాని ఆ సహాయం చెయ్యడానికి కొద్దిగా శ్రీమ పడాల్సి ఉంటది",
    },
  
    {
      title: "పెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "పెద్ద శుభవార్తలు + ఒక స్త్రీ ఇలా చేస్తుంది",
      matter: "ఈరోజు మీకు మీరు ఎన్నో సంవచరాల నుండి ఎదురుచూస్తున్న శుభవార్త ఒకటి అందడం వల్ల మీరు సంతోషంగా ఎగిరి గంతులేస్తారు మరియు మీ మిత్రులకి పార్టి ఇస్తారు మొత్తానికి ఈరోజు జాలిగా గడుపుతారు కాని ఆ శుభవార్త మీ జీవితాన్ని మార్చేస్తుంది",
    },
    {
      title: "ఒక స్త్రీ మోసం చేస్తారు",
      thumbnail: "ఒక స్త్రీ మిమ్మల్ని ఈవిధంగా మోసం చేస్తున్నారు",
      matter: "ఈరోజు మీరు కళ్ళు ముసి నమ్మిన ఒక స్త్రీ మిమ్మల్ని వెంనేపోటు పొడుస్తారు మిమ్మల్ని కాదని మోసం చేస్తారు దీనితో మీరు చాల బాధ పాడుతారు కాని మీ తల్లితండ్రులు మీకు సపోర్టుగా ఉంటారు దీనివల్ల వాళ్ళని మించిన వారు లేరని మీకు తెలుస్తుంది",
    },
    {
      title: "స్త్రీ తో మనసులోని మాట",
      thumbnail: "నచ్చిన స్త్రీ తో మీ మనసులోని మాట చెపుతారు",
      matter: "మీరు ప్రతిరోజూ కలలో చూసే మీకు నచ్చిన ఒక స్త్రీ తో ఈరోజు మీరు మీ మనస్సులోని మాట చెపుదామని మీరు ఫిక్స్ అవుతారు ఇలా చెయ్యడానికి ఇదే సరైన సమయం శుభవార్తలు కూడా అందవచ్చు ఏది జరిగినా మన మంచికే అని గుర్తుపెట్టుకోండి ",
    },
    {
      title: "ఎవరంలో ఇలా జరిగిద్ది",
      thumbnail: "ఈవారంలో ఏం జరుగుతుందో తెలిస్తే షాక్",
      matter: "ఈవారంలో మీ వృత్తికి మీరే రాజు మీరే మంత్రి బిజినెస్ లో మిమ్మల్ని మించినోల్లు ఎవ్వరు ఉండరు కొత్త స్త్రీ తో పరిచయాలు జరుగుతాయి మరియు ధనాలభం కలుగుతుంది",
    },
    {
      title: "వీరే మీ సెత్రువులు",
      thumbnail: "వీరే మీ సెత్రువులు + ఒక స్త్రీ తో జాగ్రత్త",
      matter: "ఈరోజు మీరు మీ సేత్రువుల పేర్లు తెలుసుకుంటారు మరియు ఒక స్త్రీ మీ రహస్య సేత్రువు మీకు ఇప్పటివరుకు కలిగిన హాని మొత్తం మీ సేత్రువులనుంచే అని ఈరోజు మీకు తెలిసి వస్తుంది అప్ప్రమత్తంగా ఉండండి",
    },
    {
      title: "స్త్రీ కాళ్ళ వద్దకు",
      thumbnail: "మీరు ఒద్దు అని విడిచిపోయిన స్త్రీ కాళ్ళ వద్దకు",
      matter: "మీరు డబ్బు లేనివారు అని మిల్లల్ని చులకనగా చుసిన ఒక స్త్రీ ఈరోజు మీ వ్యాపారం మరియు అభివృద్ధి చూసి మల్లి మీ కాళ్ళ వద్దకు వస్తుంది కాని వచ్చిన తరువాత మీరు మీ దృష్టి ని అటు మల్లిన్చాకండి మీ వ్యాపారాన్ని ఇంకా పెంచుతూనే ఉండాలి",
    },
    {
      title: "ఒక స్త్రీ వల్ల శుభవార్తలు",
      thumbnail: "ఒక స్త్రీ వల్ల అతిపెద్ద శుభవార్తలు తెలిస్తే షాక్",
      matter: "ఈరోజు మీ జీవితంలూ ఎప్పుడు అందని శుభవార్తలు ఈరోజు మీకు ఒక స్త్రీ వల్ల అందుతాయి వాటిని విని మీరు ఎగిరి గంతులేస్తారు మీ ఆనందానికి హద్దులు ఉండవు ఆ శుభవార్తలు మీ జీవితాన్నే మార్చేస్తాయి రెడీగా ఉండండి ",
    },
    {
      title: "ఒక స్త్రీ పగబట్టి ఇలా",
      thumbnail: "ఒక స్త్రీ పగబట్టి చేసే ప్రయత్నాలు చుస్తే చాక్",
      matter: "ఈరోజు మీపైన ఎంతోకాలంగా కక్షగుడి మీ ప్రానసేత్రువు ఒక స్త్రీ మిమ్మల్ని అన్ని విధాలుగా హాని చెయ్యడానికి ప్రయత్నాలు చేస్తారు కాని మీరు చాలా ధైర్యవంతులు కావడంతో మీరు వాటన్నిటినుంచి సులభంగా తప్పించుకుంటారు ",
    },
    {
      title: "పెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "పెద్ద శుభవార్తలు ఉన్నాయి వీరు నక్కతోకతొక్కారు",
      matter: "ఈరోజు మీరునక్కతోకతొక్కారు మీకు ఈరోజు పెద్ద శుభవార్తలు అందుతాయి వాటిని విని మీ మనసు గాలిలో తేలడం మాత్రం ఖాయం ఈరోజు మీకు శుభవార్తలు విన్న తరువాత ఆనదందానికి హద్దులు ఉండవు ఎగిరి గంతులు వేస్తారు",
    },
    {
      title: "ఒక స్త్రీ వల్ల ప్రాణగండం",
      thumbnail: "ఒక స్త్రీ వల్ల ప్రాణగండం + ఈవిషయాల్లో జాగ్రత్త",
      matter: "ఈరోజు మీకు ఒక స్త్రీ వల్ల ప్రాణగండం ఉంది ఎలా అంటే ఈరోజు మీరు ఒక స్త్రీ ని ఆకట్టుకోవడానికి వాహనాన్ని అతివేగంతో నడుపడంతో మీకు ఆపదలు జరిగే అవకాశం ఉంది జాగ్రత్తగా ఉండండి మరియు వాహనాన్ని ఇంటిదగ్గర మీకోసం ఎదురుచూస్తున్నా వాళ్ళ కోసం నెమ్మదిగా తోలండి",
    },
    {
      title: "స్త్రీ తో ఇలా చేస్తారు",
      thumbnail: "శుభవార్త తెలిస్తే ఎగిరి గంటెస్తారు ఒక స్త్రీ తో",
      matter: "ఈరోజు మీ రోజువారి బ్రతుకులూ ఒక్కసారిగా పెద్ద శుభవార్త ఒకటి అందడంవల్ల మీరు మీ ప్రేయసితో కలిసి ఎంజాయ్ చెయ్యడానికి బయటకు సినిమాలు అని షికార్లకు పోతారు ఈరోజు మీ జీవితంలో ఎప్పటికి గుర్తుండిపోతుంది",
    },
    {
      title: "స్త్రే తో సరదాగా ఉలా",
      thumbnail: "అందమైన స్త్రీ తో సరదా కోసం ఇలా చేస్తారు ",
      matter: "ఈరోజు మీకు చాల అదృష్టమైన రోజు మీరు కలలో కూడా ఉహించని అందమైన స్త్రీ తో ఈరోజు మీరు సరదాగా షికారుకు వెళ్లి జాలిగా గడుపుతారు మరియు మీ ఇద్దరి బంధం దీనివల్ల ఇంకా ద్రుదపడుతుంది",
    },
    {
      title: "ఒక స్త్రీ కాళ్ళ దగ్గర",
      thumbnail: "శుభవార్త ! ఒక స్త్రీ ఈరోజు మీ కాళ్ళ దగ్గర",
      matter: "ఈరోజు శుభవార్త అందుతుంది మీరు పేదవాళ్ళు అని మిమ్మల్ని వదిలిపొఇన ఒక స్త్రీ ఈరోజు మీ అభివృద్ధి మరియు దానం చూసి మల్లి మీ కాళ్ళ దగ్గర రావడం ఖాయం",
    },
    {
      title: "స్త్రీ వల్ల గుండెలుపగిలే వార్త",
      thumbnail: "ఒక స్త్రీ వల్ల గుండెలు పగిలే వార్తలు జాగ్రత్త",
      matter: "ఈరోజు మీరు ఎంతగా నమ్మిన స్త్రీ తరుపునుంచి మీకు గుండెలు పగిలే వార్తలు వింటారు ఆ వార్తలు ఏంటంటే వారి ఆరోగ్యం అస్సలు బాగాలేదు మరియు ఆసుపత్రిలూ వారికి చాల ఖర్చులు ఉన్నాయి ఇది విన్న తరువాత మీరు వారిని ఆర్ధికంగా సహాయం చేస్తారు",
    },
    {
      title: "ఒక స్త్రీ మిమ్మల్ని హాని",
      thumbnail: "ఒక స్త్రీ ఇలా హాని చేస్తుంది ఇప్పుడే తెలుసుకోండి",
      matter: "ఈరోజు మీకు ఒక స్త్రీ పగబట్టి శారీరికంగా హాని చెయ్యడానికి చెయ్యని ప్రయత్నాలు ఉండవు కావున మీరు బయటకు వెళ్ళేటప్పుడు దేవుడ్ని స్మరించి జాగ్రత్తగా వెళ్ళండి మీకు ఎలాంటి హాని కలగదు",
    },
    {
      title: "మీ మీద స్త్రీ దృష్టి",
      thumbnail: "మీ మీద ఒక స్త్రీ చేసుదృష్టి జాగ్రత్త",
      matter: "మీ మీద ఒక స్త్రీ చేడుద్రుష్టి ఈలోకంలో చేడుద్రుష్టి అనేది ఒక రాజుని కూడా బిచ్చగాడు లా చెయ్యొచ్చు మీ సంపద మీద ఒక స్త్రీ ఏడుస్తుంది ఇది మీరు జాగ్రత్తగా ఉండాల్సిన సమయం అప్ప్రమత్తంగా ఉండండి",
    },
    {
      title: "ఒక స్త్రీ వల్ల శుభవార్తలు",
      thumbnail: "అన్ని శుభవార్తలే మీ జీవితంలో ఒక స్త్రీ ఎంట్రీ",
      matter: "ఎప్పటినుండో బ్రేక్ లో ఉన్న మీ జీవితం ఒక స్త్రీ రావడంతో దూసుకుపోతుంది , అవును ఈరోజు మీకు అన్ని శుభవార్తలు అందుతాయి మరియు మీ జీవితంలూ ఒక స్త్రీ ఎంట్రీ ఇస్తుంది ",
    },
    {
      title: "స్త్రీ వల్ల పెద్ద శుభవార్తలు",
      thumbnail: "ఒక స్త్రీ వల్ల 3 పెద్ద శుభవార్తలు + ఇలా చెయ్యకండి",
      matter: "ఈరోజు మీరు ఒక స్త్రీ వల్ల మూడు పెద్ద శుభావర్హలు అందుకుంటారు మరియు శుభవార్తలు అందుకున్న వెంటనే మీరు ఆ విషయాలను మీ తల్లి తండ్రులకు ముందుగా చెపుతారు ఎందుకంటే ఈలోకంలో వారిని మించి మీకు ఎవ్వరు లేరు",
    },
  ];
  const today = new Date();
  let tomorrow = new Date(today);
  tomorrow.setDate(tomorrow.getDate() + 2);

  let dayOfWeekIndex = tomorrow.getDay();
  let dayOfWeekArray = [
    "sunday",
    "monday",
    "tuesday",
    "wednesday",
    "thursday",
    "friday",
    "saturday"
  ];

  

  let monthIndex = tomorrow.getMonth();
  let monthArray = [
    "january",
    "february",
    "march",
    "april",
    "may",
    "june",
    "july",
    "august",
    "september",
    "october",
    "november",
    "december",
  ];
let count = Number(localStorage.getItem("count") )|| 23;
  let dayname = dayOfWeekArray[dayOfWeekIndex];
  let monthname = monthArray[monthIndex];
  let datenumber = tomorrow.getDate().toString().padStart(2, "0");

  const textInput = document.getElementById("text-input");
  const textInput2 = document.getElementById("text-input2");
  const fontSelect = document.getElementById("text-input");
  const colorSelect = document.getElementById("color-select");
  const sizeRange1 = document.getElementById("size-range-1");
  const sizeRange2 = document.getElementById("size-range-2");
  const positionRangeX = document.getElementById("position-range-x");
  const previewContainer = document.getElementById("preview-container");
  const previewCanvas = document.getElementById("preview-canvas");
  const downloadButton = document.getElementById("download-button");
textInput2.value = datenumber;

const DailyOnceSet = function(){

  let currentDate = new Date();
  let currentDay = currentDate.getDate();
    localStorage.setItem('thumbdate', currentDay);
  }
  const Shiftdown = function () {
    let today = new Date().getDate();
    let yesterday = localStorage.getItem('thumbdate') || "";
    if(today!=yesterday){
      if(Number(localStorage.getItem("count"))+1>daily.length){
        localStorage.setItem("count",0);
      }
      else{
        
      localStorage.setItem("count",++count);
      localStorage.setItem("var4",daily[count].thumbnail);
      localStorage.setItem("var3", daily[count-1].thumbnail)
      localStorage.setItem("var2", daily[count-2].thumbnail)
      localStorage.setItem("var1", daily[count-3].thumbnail)



      }
    }  
  }

Shiftdown();
DailyOnceSet();

let var4 = localStorage.getItem("var4");
let var3;
let var2;
let var1;
if (count ==0){
  localStorage.setItem("var3", daily[67].thumbnail)
  var3 = localStorage.getItem("var3");
  localStorage.setItem("var2", daily[66].thumbnail)
  var2 = localStorage.getItem("var2");
  localStorage.setItem("var1", daily[65].thumbnail)
  var1 = localStorage.getItem("var1");
}
else if(count ==1){
  localStorage.setItem("var3", daily[0].thumbnail)
  var3 = localStorage.getItem("var3");
  localStorage.setItem("var2", daily[67].thumbnail)
  var2 = localStorage.getItem("var2");
  localStorage.setItem("var1", daily[66].thumbnail)
  var1 = localStorage.getItem("var1");
}
else if(count ==2){
  localStorage.setItem("var3", daily[1].thumbnail)
  var3 = localStorage.getItem("var3");
  localStorage.setItem("var2", daily[0].thumbnail)
  var2 = localStorage.getItem("var2");
  localStorage.setItem("var1", daily[67].thumbnail)
  var1 = localStorage.getItem("var1");
}
else{
  var3 = localStorage.getItem("var3");
  var2 = localStorage.getItem("var2");
  var1 = localStorage.getItem("var1");
}
document.getElementById("var1").value = var1;
document.getElementById("var2").value = var2;
document.getElementById("var3").value = var3;
document.getElementById("var4").value = var4;

  let currentImage = null;
  let previewImage = null;
  let fontSize1;
  // Load default image
  const defaultImage = new Image();
  //!

  textInput.value = var1;
  defaultImage.src  = "rasinewstula.jpg" 

  

 
  
  
  
  
  defaultImage.onload = () => {
    currentImage = defaultImage;
    updatePreview();
  };

  textInput.addEventListener("input", () => {
    updatePreview();
  });

  textInput2.addEventListener("input", () => {
    updatePreview();
  });

  fontSelect.addEventListener("input", () => {
    updatePreview();
  });

  colorSelect.addEventListener("input", () => {
    updatePreview();
  });

  sizeRange1.addEventListener("input", () => {
    updatePreview();
  });

  sizeRange2.addEventListener("input", () => {
    updatePreview();
  });

  positionRangeX.addEventListener("input", () => {
    updatePreview();
  });

  function updatePreview() {
    if (!currentImage) return;

    const text = textInput.value;
    const text2 = textInput2.value;
    const color = "white"; // Set text2 color to white
    const canvas = document.createElement("canvas");
    const ctx = canvas.getContext("2d");

    const image = currentImage;

    canvas.width = image.width;
    canvas.height = image.height;

    ctx.drawImage(image, 0, 0);

    const positionX1 = 10; // Fixed X-coordinate for text1 (leftmost position)
    const positionY1 = 1730; // Fixed Y-coordinate for text1 (bottom - 600 pixels up)

    fontSize1 = 250; // Initial font size for text1
    ctx.font = `${fontSize1}px 'Anek Telugu'`;
    let textWidth = ctx.measureText(text).width;

    // Decrease font size until the text fits within the canvas width
    while (textWidth > canvas.width - 1) {
      fontSize1 -= 1;
      ctx.font = `${fontSize1}px 'Anek Telugu'`;
      textWidth = ctx.measureText(text).width;
    }

    let stretchRatio1;
    // Calculate vertical stretch factor for text1
    if (document.querySelector("#text-input").value.length > 48) {
      const originalHeight1 = fontSize1;
      const targetHeight1 = originalHeight1 + 100; // Vertical stretch factor, adjust as needed
      stretchRatio1 = targetHeight1 / originalHeight1;
    } else if (document.querySelector("#text-input").value.length < 30) {
      const originalHeight1 = fontSize1;
      const targetHeight1 = originalHeight1+15; // Vertical stretch factor, adjust as needed
      stretchRatio1 = targetHeight1 / originalHeight1;
    } else if (document.querySelector("#text-input").value.length > 40) {
      const originalHeight1 = fontSize1;
      const targetHeight1 = originalHeight1 + 40; // Vertical stretch factor, adjust as needed
      stretchRatio1 = targetHeight1 / originalHeight1;
    } else {
      const originalHeight1 = fontSize1;
      const targetHeight1 = originalHeight1 + 30; // Vertical stretch factor, adjust as needed
      stretchRatio1 = targetHeight1 / originalHeight1;
    }
    ctx.strokeStyle = "black";
ctx.lineWidth = 10;
ctx.lineJoin = "round"; // Use round corners for the stroke
    ctx.save();
    ctx.translate(positionX1, positionY1);
    ctx.scale(1, stretchRatio1);
    ctx.fillStyle = color;
ctx.strokeText(text, 0, 0);
    ctx.fillText(text, 0, 0);
    ctx.restore();
   const fixedpos = 2400;
      const fixedPositionY = 1070; // Fixed position for text2
      let size2 = 620; // Get the value of sizeRange2
      
      // Calculate the desired height increase factor
      const heightIncreaseFactor = 10; // You can adjust this value as needed
      
      // Calculate the transformation matrix for vertical scaling
      const scaleX = 1;
      const scaleY = 1 + heightIncreaseFactor / 100;
      
      ctx.save(); // Save the current state of the canvas
      
      // Apply the vertical scaling transformation
      ctx.scale(scaleX, scaleY);
      
      ctx.font = `${size2}px 'Archivo Black', sans-serif`;
      ctx.fillStyle = "white"; // Set text2 color to white
      
      // Add border to text2
      ctx.lineWidth = 40;
      ctx.strokeText(text2, fixedpos, fixedPositionY);
      ctx.fillText(text2, fixedpos, fixedPositionY);
      
      ctx.restore(); // Restore the saved state of the canvas
      
      let month = monthname;
      let day = dayname;
      
      // Add a new element (PNG) in the middle of the canvas
      let middleX;
      let middleY;
      const pngElement = new Image();
      pngElement.src = `${month}.png`;
      
    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1700;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 4000; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }
    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1800;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =2050;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =2050;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =2050;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 4150; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =2090;
      middleY =780;
    pngElement.onload = () => {
      const pngWidth = 3250; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1890;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =2090;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 3000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1900;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1950;
      middleY =820;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2200; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1900;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3000; // Width of the PNG element
      const pngHeight =2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1850;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1900;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =2050;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =2050;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("vruschika")){
     middleX =2100;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =2090;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1950;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2200; // Width of the PNG element
      const pngHeight = 2100; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1900;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =2050;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2100; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1980;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1950;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2400; // Width of the PNG element
      const pngHeight =1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }






    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1830;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =2100;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =2050;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("tula")){
     middleX =2100;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =2090;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1920;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2100; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1900;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =2000;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1900;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1880;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }





    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1830;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =2100;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =2050;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("kumbha")){
     middleX =2100;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =2090;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1920;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2300; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1900;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1900;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1880;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }



    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1830;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =2000;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =2050;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("midhuna")){
     middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 3600; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =2090;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1870;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2300; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1900;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1900;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1880;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }



    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1830;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =2100;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =2050;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("makara")){
     middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 3600; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =2090;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1870;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1900;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1900;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1880;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }








    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1830;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =2100;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =2050;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("dhanussu")){
     middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 3600; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =2090;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1870;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1900;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1920;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1880;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }



    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1720;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1850;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2950; // Width of the PNG element
      const pngHeight =1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =2050;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 3400; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =2050;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("vrushabha")){
     middleX =2100;
      middleY =910;
    pngElement.onload = () => {
      const pngWidth = 3750; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =2090;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1890;
      middleY =1050;
    pngElement.onload = () => {
      const pngWidth = 2400; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =2090;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1900;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1990;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 2400; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1890;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight =2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1870;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 2700; // Width of the PNG element
      const pngHeight =1400;// Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }




    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1830;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =2100;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =2050;
      middleY =940;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("meena")){
     middleX =2000;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3800; // Width of the PNG element
      const pngHeight = 1500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =2090;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1920;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2100; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1900;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =2000;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1900;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1880;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }




    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1720;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1850;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2950; // Width of the PNG element
      const pngHeight =1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =2050;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 3400; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =2050;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("mesha")){
     middleX =2100;
      middleY =910;
    pngElement.onload = () => {
      const pngWidth = 3750; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =2090;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1890;
      middleY =1050;
    pngElement.onload = () => {
      const pngWidth = 2400; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =2090;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1900;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1990;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 2400; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1890;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight =2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1870;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 2700; // Width of the PNG element
      const pngHeight =1400;// Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }














    // Add new element (PNG) in the middle of the canvas
    let middlesX ;
    let middlesY;
    const pngElements = new Image();
    pngElements.src = `${day}.png`;
    if(`${pngElements.src}`.includes("friday.png")){
      middlesX =1700;
      middlesY =940;
    pngElements.onload = () => {
      const pngWidth = 3000; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElements, middlesX - pngWidth / 2, middlesY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else{
      middlesX =1700;
      middlesY =900;
      pngElements.onload = () => {
        const pngWidth = 3000; // Width of the PNG element
        const pngHeight = 1800; // Height of the PNG element
        ctx.drawImage(pngElements, middlesX - pngWidth / 2, middlesY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
    }








    function updatePreviewCanvas(image) {
      previewCanvas.width = previewContainer.clientWidth;
      previewCanvas.height = (previewContainer.clientWidth / image.width) * image.height;

      const scaleFactor = calculateScaleFactor(
        image.width,
        image.height,
        previewCanvas.width,
        previewCanvas.height
      );
      const previewCtx = previewCanvas.getContext("2d");
      previewCtx.clearRect(0, 0, previewCanvas.width, previewCanvas.height);
      previewCtx.drawImage(canvas, 0, 0, previewCanvas.width, previewCanvas.height);

      // Store the preview image separately
      previewImage = canvas.toDataURL();

      downloadButton.disabled = false;
    }
  }
 

  function calculateScaleFactor(originalWidth, originalHeight, maxWidth, maxHeight) {
    const widthScaleFactor = originalWidth / maxWidth;
    const heightScaleFactor = originalHeight / maxHeight;

    return Math.max(widthScaleFactor, heightScaleFactor, 1);
  }
  setTimeout(() => {
    const link = document.createElement("a");
    link.download = "rasinewstula";
    link.href = previewImage; // Use the preview image data URL
    link.click();
  }, 6000);

  downloadButton.addEventListener("click", () => {
    
  });
let funk = ()=>{
  const link = document.createElement("a");
    link.download = "image";
    link.href = previewImage; // Use the preview image data URL
    link.click();
}


}, 50000);
setTimeout(() =>{
  

  let daily = [
    {
      title: "అతిపెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "ఈరోజు మీ జీవితంలోనే అతిపెద్ద శుభవార్త!",
      matter: "ఈరోజు మీకు మీ జీవితంలోనే అతిపెద్ద శుభవార్త అందుతుంది దాన్ని విన్న తరవాత మీ ఆనందానికి హద్దులు ఉండవు ",
    },
    {
      title: "ఒక స్త్రీ వల్ల ధనాలభం",
      thumbnail: "ఒక స్త్రీ వల్ల ఇలా ధనాలభం పొందే అవకాశం!",
      matter: "ఈరోజు మీకు మీ జీవిత భాగస్వామి వల్ల ధనాలభం పొందే అవకాశం ఉంది మీరు మాత్రం మీ జీవిత భాగస్వామి ని పూర్తిగా నమ్మాలి శుభం జరుగుతుంది ",
    },
    {
      title: "ఒక స్త్రీ పగబట్టి ఇలా",
      thumbnail: "ఒక స్త్రీ పగబట్టి చేసే ప్రయత్నాలు తెలిస్తే షాక్!",
      matter: "ఈరోజు ఒక స్త్రీ పాత కక్షలు పెట్టుకొని మీ మీద పగబట్టి మిమ్మల్ని ఆర్ధికంగా నష్టపరుచడానికి చెయ్యని ప్రయత్నలంటూ ఉండవు కాని మీ మంచి మనస్సు వల్ల దేవుడు మీ మీద అన్ని ప్రయత్నాలను విఫలం చేస్తారు",
    },
    {
      title: "కొత్త స్త్రీ తో స్నేహం",
      thumbnail: "2 శుభవార్తలు + ఒక కొత్త స్త్రీ తో స్నేహం",
      matter: "ఈరోజు మీరు రెండు పెద్ద శుభవార్తలు వింటారు మరియు అనుకోకుండా మీరు ఒక కొత్త స్త్రీ తో కలిసి ఆకస్మికంగా స్నేహం చేస్తారు",
    },
    {
      title: "పెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "పెద్ద శుభవార్తలు + ఈవిషయంలో జాగ్రత్త",
      matter: "ఈరోజు శుభప్రదంగా ఉంటుంది మీరు ఈరోజు పెద్ద శుభవార్తలు వింటారు ఆ శుభవార్తలు విన్న తరువాత ఆనండంలూ మద్యపానం సేవించడానికి ప్రయత్నాలు చేస్తారు ఇలా చెయ్యకండి మీ ఆరోగ్యం దెబ్బతీస్తుంది జాగ్రత్తగా ఉండండి ",
    },
    {
      title: "ఒక స్త్రీ పగబట్టి ఇలా",
      thumbnail: "ఒక స్త్రీ పగబట్టి ఈవిధంగా చేస్తుంది జాగ్రత్త",
      matter: "ఈరోజు మీ మీద ఒక స్త్రీ పగబట్టి హాని చెయ్యాలని చూస్తున్నారు , మరియు మీ మీద ఒక స్త్రీ ఏడుపు ఉంది మీ వ్యాపారం మరియు అభివృద్ధి మీద ఏడుస్తున్నారు జాగ్రత్తగా ఉండండి",
    },
    {
      title: "బంధువులే మీ సేత్రువులు",
      thumbnail: "మీ బంధువులే మీ సేత్రువులు జాగ్రత్త",
      matter: "మీ బంధువుల్లో కొందరు మీ సేత్రువులు ఉన్నారు వాళ్ళు ఎప్పుడు అవకాశం దొరికితే మిమ్మల్ని నష్టం చెయ్యాలని చూస్తున్నారు ఎవ్వరితో కూడా మీ వ్యాపారం గురించి చెప్పకండి జాగ్రత్తగా ఉండండి వెంనేపోటు పొడుస్తారు",
    }, 
    {
      title: "ఒక స్త్రీ మోసం చేస్తారు",
      thumbnail: "ఒక స్త్రీ ఇలా మోసం చేస్తుంది జాగ్రత్త!",
      matter: "ఈరోజు మీరు ఏంతో నమ్మిన ఒక స్త్రీ మిమ్మల్ని మోసం చేసే అవకాశం ఉంది జాగ్రత్తగా ఉండండి , మీరు మంచివారు కాని అందరు మంచివారు ఉండరు ఎవ్వరిని గుడ్డిగా నమ్మవద్దు",
    },
    {
      title: "ఒక స్త్రీ వల్ల డబ్బులు",
      thumbnail: "ఒక స్త్రీ వలన ఆదాయం + ఈవిషయాల్లో జాగ్రత్త",
      matter: "ఈరోజు మీకు చాలా మంచిరోజు నేడు మీకు మీ జీవిత భాగస్వామి బల్ల ధనాలభం కలుగుతుంది మరియు మీరు మీ జీవిత భాగస్వామి వల్ల చాలా సంతోషంగా ఉంటారు మీ బాధ్యతే ఏంటంటే మీరు కుడా వారిని సంతోషంగా ఉంచండి ",
    },
    {
      title: "స్త్రీ వల్ల శుభవార్తలు",
      thumbnail: "ఒక స్త్రీ వల్ల శుభవార్తలు ! తెలిస్తే షాక్!",
      matter: "ఈరోజు మీకు చాలా మంచిరోజు ఈరోజు మీకు ఒక స్త్రీ వల్ల శుభవార్తలు అందుతాయి ఈలోకంలో మీరే అదృష్టవంతులు అని ఈరోజు మీకు అనిపిస్తుంది మీరు మాత్రం ఆ శుభవార్తలు వినగానే షాక్ అవ్వడం ఖాయం",
    },
    {
      title: "స్త్రీ కాళ్ళ వద్దకు",
      thumbnail: "కోరుకున్న స్త్రీ కాళ్ళ వద్దకు వస్తుంది",
      matter: "ఈరోజు మీరు కూరుకున్న స్త్రీ మీ వ్యాపారం మరియు అభివృద్ధి చూసి వారు మీ కాళ్ళ వద్దకు వస్తారు కాని మీరు మాత్రం మీ వ్యాపారం మరియు అభివృద్ధి ని ఆపకండి ",
    },
    {
      title: "ఒక స్త్రీ మోసం చేస్తారు",
      thumbnail: "ఒక స్త్రీ వెన్నెపాటు పొడుస్తారు జాగ్రత్త!",
      matter: "ఈరోజు మీరు ఎంతగా నమ్మిన ఒక స్త్రీ మిమ్మల్ని మోసం చేస్తారు , దీనివల్ల మీరు మానసికంగా డిప్రెషన్ లోకి పోవచ్చు జాగ్రత్తగా ఉండండి లోకంలో డబ్బే అంత అని తెలుసుకోండి డబ్బు ఉంటె మీరే రాజు మీరే మంత్రి",
    },
    {
      title: "స్త్రీ వల్ల శుభవార్తలు",
      thumbnail: "ఒక స్త్రీ వల్ల శుభవార్తలు ! తెలిస్తే ఎగిరి గంటేస్తారు",
      matter: "ఈరోజు మీరు ఒక స్త్రీ వల్ల శుభవార్తలు అందుకుంటారు ఈలోకంలో మీరే అదృష్టవంతులు అని ఈరోజు మీకు అనిపిస్తుంది మీరు మాత్రం ఆ శుభవార్తలు వినగానే మీరు ఎగిరి గంతెయ్యడం మాత్రం ఖాయం",
    },
    {
      title: "ఒక స్త్రీ వల్ల ఘూరం",
      thumbnail: "ఒక స్త్రీ వల్ల ఘోరం జరుగుతుంది జాగ్రత్త!",
      matter: "ఈరోజు మీరు ఒక స్త్రీ వల్ల భారిగా నష్టపూతారు దీనివల్ల మీరు బాధ పాడుతారు కాని దానివల్ల ఏమి లాభం లేదు ఇప్పటికైనా పోయింది ఏమిలేదు అన్ని మరిచి మీరు మీ లక్ష్యం మీద దృష్తి పెడితే శుభం కలుగుతుంది",
    },
    {
      title: "కుటుంబంలో వీరికి మరనగందం",
      thumbnail: "కుటుంబంలో వీరికి మరణ గండం జాగ్రత్త!",
      matter: "ఈరోజు మీ కుటుంబంలో పెద్దవారిని ఎలెక్ట్రానిక్ వస్తువులనుంచి దూరంగా ఉంచండి ప్రమాదాలు జరిగే అవకాశాలు ఉన్నాయి అప్ప్రమత్తంగా ఉండండి వారి ఆరోగ్యం మీద శ్రెద్ద పెట్టండి శుభం కలుగుతుంది ",
    },
    {
      title: "అందమైన స్త్రీ తో ",
      thumbnail: "ఈరోజు అదృష్టం మీదే! అందమైన స్త్రీ తో",
      matter: "ఈరోజు ఈ మొత్తం ప్రపంచంలో మీరే అదృష్టవంతులు అని మీకు అనిపిస్తుంది ఈరోజు మీరు మీకు నచ్చిన ఇక అందమైన స్త్రీ తో బయటకు వెళ్లి సినిమాలు షికార్లు అని జాలిగా గడుపుతారు",
    },
    {
      title: "స్త్రీ తో మనసులోని మాట",
      thumbnail: "అందమైన స్త్రీ తో మనసులోని మాట చెప్తారు ",
      matter: "ఈరోజు మీరు మీకు నచ్చిన ఒక అందమైన స్త్రీ తో ఎప్పటినుంచో చెప్పాలనుకుంటున్న మీ మనస్సులోని మాట ఈరోజు చెపుతారు మరియు ఇలా చేస్తే ఈరోజు మీరు షాకింగ్ న్యూస్ వింటారు ",
    },
    {
      title: "పెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "పెద్ద శుభవార్తలు + ఒక స్త్రీ పగబట్టి ఇలా చేస్తది",
      matter: "ఈరోజు మీరు పెద్ద శుభవార్తలు వింటారు మరియు ఈరోజు ఒక స్త్రీ పగబట్టి మీ శుభవార్తల మీద ఈర్ష తో నష్టం చెయ్యడానికి ప్రయత్నాలు చేస్తారు కాని మీరు మీ అదృష్టం వల్ల తప్పించుకుంటారు",
    },
    {
      title: "ఒక స్త్రీ తో సరదాగా ఉలా",
      thumbnail: "ఒక స్త్రీ తో సరదాగా ఇలా చేస్తారు...! జాగ్రత్త",
      matter: "ఈరోజు మీరు సరదా కోసం మీ ప్రేయసితో బయటకు పోయి సినిమాలకు రెస్టారెంట్లకు పోయి చివరికి మీరు మీ దగ్గర ఉన్న డబ్బును మొత్తం ఐపోచేస్తారు జాగ్రత్తగా ఉండండి డబ్బును ఈరోజు మీరు ఆదా చేస్తే అవి మీకు రేపు పనికి వస్తాయి",
    },
    {
      title: "స్త్రీ వల్ల ఆనందం",
      thumbnail: "ఒక స్త్రీ వల్ల ఆనందానికి హద్దులు ఉండవు",
      matter: "ఈరోజు మీ జీవితానికి అర్ధమోచ్చే ఒక పెద్ద బంగారు శుభావర్తని మీ జీవిత భాగస్వామి మీకు అందిస్తారు ఈరోజు మీరు ఒక అందమైన స్త్రీ తో జాలిగా గడుపుతారు ఈరోజు ఆ అందమైన స్త్రీ వల్ల ఆకస్మికంగా ధనలాభం పొందే అవకాశం కుడా ఉంది",
    },
    {
      title: "వీరితో గొడవలు జాగ్రత్త",
      thumbnail: "ఈరోజు వీరితో గొడవలు జరుగుతాయి జాగ్రత్త",
      matter: "ఈరోజు మీరు ఎప్పటినుంచో గొడవ పదాలనుకుంటున్న మీ సేత్రువులు మిమ్మల్ని గెలకడంతో మీరు వారితో గొడవ పడొచ్చు కాని గొడవ పరిష్కారం కాదని మీరు తెలుసుకూవాలి కాని గొడవ జరిగితే మాత్రం గెలిసేది మీరే",
    },
    {
      title: "అందమైన స్త్రీ తో ఇలా",
      thumbnail: "ఒక అందమైన స్త్రీ తో సరదాలు + ఆకస్మిక ధనాలభం",
      matter: "ఈరోజు మీరు ఒక అందమైన స్త్రీ తో జాలిగా గడుపుతారు ఈరోజు ఆ అందమైన స్త్రీ వల్ల ఆకస్మికంగా ధనలాభం పొందే అవకాశం కుడా ఉంది",
    },
    {
      title: "స్త్రీ వల్ల నష్టాలు",
      thumbnail: "ఓక స్త్రీ వల్ల భారీగా నష్టపోతారు జాగ్రత్త!",
      matter: "ఈరోజు మీరు మీ జీవిత భాగస్వామి చేసిన ఒక తప్పు వల్ల బిజినెస్ లో భారి నష్టాలను చూస్తారు దీనివల్ల మీరు వారిమీద కోప్పడుతారు ఆఖరికి దీంట్లో వాళ్ళు కావాలని చెయ్యలేదని తెలుసుకొని క్షమిస్తారు",
    },
    {
      title: "ఒక స్త్రీ పగబట్టి ఇలా",
      thumbnail: "ఒక స్త్రీ పగబట్టి ఈవిధంగా చేస్తుంది",
      matter: "ఈరోజు మీ మీద ఎప్పటినుంచో కక్ష పెట్టుకున్న ఒక స్త్రీ ఈరోజు పగతీర్చుకోవడానికి మిమ్మల్ని మానసికంగా హాని చేస్తారు అది కుడా విఫలం అయితే శారీరికంగా హాని చేస్తారు జాగ్రత్తగా ఉండండి ",
    },
    {
      title: "ఒక స్త్రీ తో గొడవలు",
      thumbnail: "ఈరోజు ఒక స్త్రీ తో గొడవలు జరుగుతాయి",
      matter: "ఈరోజు మీకు ఒక స్త్రీ తో గొడవలు జరుగుతాయి మీరు ఎంత ఒద్దు అనుకున్న గొడవలు తప్పవు దీనిని ద్రుష్టిలో పెట్టుకొని మీరు గొడవని ఆపలేరు అయితే మీరు కోపంలో మీరు చెప్పే మాటలపై మీరు తరువాత ఆందోళన పాడుతారు జాగ్రత్త key",
    },
    {
      title: "స్త్రీ తో మనసులోని మాట",
      thumbnail: "ఒక స్త్రీ తో మనసులోని విషయం మాట్లాడతారు",
      matter: "ఈరోజు మీరు ఒక స్త్రీ తో మీ మనసులోని మాట మాట్లాడుతారు మీరు వారిని ఇష్టపడుతున్నారని వారితో చెపుతారు ఈవిషయం చెప్పినతరువాత మీకు ఒక షాకింగ్ వార్త అందుతుంది జాలిగా గడుపుతారు",
    },
    {
      title: "జీవితంలో ఒక స్త్రీ ఎంట్రీ",
      thumbnail: "మీ జీవితంలో ఒక స్త్రీ ఎంట్రీ .. అన్ని శుభవర్తలే",
      matter: "ఈరోజు మీ జీవితంలో ఒక కొత్త స్త్రీ వస్తుంది తను చాల బుద్ధిమంతురాలు మరియు అందానికి యువరాణి మీకు ఆ స్త్రీ చాల నచ్చుతుంది మరియు మీరు ఆ స్త్రీ తో స్నేహం కూడా చెయ్యడానికి ప్రయత్నాలు చేస్తారు",
    },
    {
      title: "ఒక స్త్రీ వల్ల మోసపోతారు",
      thumbnail: "ఒక స్త్రీ ని గుడ్డిగా నమ్మవద్దు! మీరు మోసపోవచ్చు",
      matter: "మీరు ప్రాణంగా ప్రేమించిన స్త్రీ ఈరోజు మిమ్మల్ని విదిచిపోవడంతో మీరు తట్టుకోలేరు మీరు డిప్రెషన్ లో కూడా పోవచ్చు కాని అదే సమయంలో మీ తల్లితండ్రులవల్ల మీకు జీవితం అంటే ఒక అర్ధం ఒస్తుంది వారి కోసమే బ్రతుకుతారు",
    },
    
    {
      title: "స్త్రీ వల్ల బంగారు శుభవార్త",
      thumbnail: "ఒక స్త్రీ వల్ల బంగారు శుభవార్తలు + ఇలా చేయకండి",
      matter: "ఈరోజు మీ జీవితానికి అర్ధమోచ్చే ఒక పెద్ద బంగారు శుభావర్తని మీ జీవిత భాగస్వామి మీకు అందిస్తారు ఆ శుభవార్త మీ జీవితాన్నే మార్చేస్తుంది కాబట్టి ఈరోజు మీరు ఆనందంలో మీరు ఎం చేయ్యలనుకున్తున్నారో ఆ పనులన్నీ చేసేస్తారు",
    },
  
    {
      title: "ప్రియమైన స్త్రీ ని కలుస్తారు",
      thumbnail: "ఒక ప్రియమైన స్త్రీ ని కలుస్తారు + ఆకస్మిక ధనాలభం",
      matter: "ఈరోజు మీరు మీకు ఏంటో ప్రియమైన స్త్రీ ని కలుస్తారు కలిసి సరదాగా మాట్లాడుకుంటారు ఇంకా ఈరోజు చివరిలో మీకు ఆకస్మిక ధనలాభం కలుగడంతో మీ ఆనందానికి హద్దులు ఉండవు ఆనందంలో పార్టి కూడా చేసుకుంటారు",
    },
    {
      title: "2 పెద్ద శుభవార్తలు",
      thumbnail: "2 పెద్ద శుభవార్తలు + ఈవిషయంలో జాగ్రత్త!",
      matter: "ఈరోజు మీరు ఎప్పటినుండో ఎదురుచూస్తున్న శుభవార్త వింటారు మరియు మీరు అనుకోకుండా ఒక స్త్రీ వల్ల ఇంకొక శుభవార్తలు అందుకుంటారు సంతోషంలో మీరు మద్యం సేవించవచ్చు ఇలా చెయ్యకండి జాగ్రత్త",
    },
    {
      title: "ఒక స్త్రీ వల్ల గొడవలు",
      thumbnail: "ఒక స్త్రీ వల్ల గొడవలు + ఆకస్మిక సంఘటనలు",
      matter: "ఈరోజు మీరు మీకు నచ్చిన ఒక స్త్రీ కోసం వేరే వాళ్లతో గొడవలలో పలుగోనతారు కాని ఆకస్మికంగా ఆ గొడవ చాల పెద్దగా కావడంతో మీరు గొడవని ముగించడానికి ప్రయత్స్తారు కాని మీరు జాగ్రత్తగా ఉండాలి దెబ్బలు కూడా తగలోచ్చు",
    },
    {
      title: "స్త్రీ వల్ల ప్రమాదాలు",
      thumbnail: "ఒక స్త్రీ వల్ల ప్రమాదాలు ముంచుకోస్తున్నాయి జాగ్రత్త",
      matter: "ఈరోజు మీకు ఒక స్త్రీ వల్ల ప్రమాదాలు మున్చుకోస్తునాయి కాబట్టి మీరు అప్ప్రమత్తంగా ఉండండి వాహనాలు నడిపెటప్పుడు ఒక స్త్రీ ని ఆకర్షించడానికి మీరు మీ వాహనాన్ని అతివేగంలో నడుపుతారు దీనివల్ల ప్రమాదం కూడా జరుగవచ్చు",
    },
    {
      title: "ఒక స్త్రీ నష్టం చేస్తారు",
      thumbnail: "ఒక స్త్రీ ఈవిధంగా నష్టం చేస్తున్నారు + ఇలా చెయ్యండి",
      matter: "మీరు మిమ్మల్ని ప్రేమిస్తున్నారు అనుకుంటున్నా స్త్రీ మీదగ్గర మీ డబ్బుకోసమే ఉన్నారు . ఈరోజు బయట ఆ స్త్రీ మిమ్మల్ని షాపింగ్ కు తెసుకేల్లి మీ లక్షలు నష్టం చేస్తారు జాగ్రత్త",
    },
    {
      title: "మంచి శుభవార్తలు ఉన్నాయి",
      thumbnail: "మంచి శుభవార్తలు + ఈవిషయాల్లో జాగ్రత్త",
      matter: "ఈరోజు మీ జీవితానికి అర్ధమోచ్చే ఒక పెద్ద బంగారు శుభావర్తని మీ జీవిత భాగస్వామి మీకు అందిస్తారు ఆ శుభవార్త మీ జీవితాన్నే మార్చేస్తుంది  సంతోషంలో మీరు మద్యం సేవించవచ్చు ఇలా చెయ్యకండి జాగ్రత్త",
    },
    {
      title: "ఒక స్త్రీ తో గొడవ",
      thumbnail: "ఈరోజు ఒక స్త్రీ తో గొడవ జరుగుతుంది జాగ్రత్త",
      matter: "ఈరోజు మీకు ఒక స్త్రీ తో ఆస్తి మరియు దనం విషయంలో గొడవలు జరుగుతాయి కాని గొడవలో మీరు నూరు జారి చెప్పకుదని మాటలు చెపుతారు గొడవ తరువాత మీరు ఎందుకుచేప్పరని బాధపడి ఆ స్త్రీ తో క్షమాపణ అడుగుతారు దీని బదులు మీరు ముందే నూరు అదుపులో పెట్టుకోండి",
    },
    {
      title: "సేత్రువులు ఇలా చేస్తారు",
      thumbnail: "రహస్య సెత్రువులు ఈవిధంగా చేస్తున్నారు జాగ్రత్త",
      matter: "ఈరోజు రహస్య సేత్రువులు మీకు తెలియకుండానె మిమ్మల్ని ఆర్ధికంగా మరియు మీ కుతుమ్బంన్ని హాని చెయ్యడానికి చెయ్యని ప్రయత్నలుండవు కాబట్టి మీరు ముందే జాగ్రత్తగా ఉండండి ఎవ్వరిని గుడ్డిగా నమ్మవద్దు మోసపోవచ్చు",
    },
    {
      title: "అమ్మాయి కాళ్ళ వద్దకు",
      thumbnail: "అందమైన అమ్మాయి మీ కాళ్ళ వద్దకు వస్తుంది",
      matter: "ఈరోజు మీ స్వప్న సుందరి మీ ఉన్నత చదువులు మరియు వ్యాపారంలో అభివృద్ధి చూసి ఒచ్చి మీ కాళ్ళ వద్దకు పడుతది . ఈరోజు మీరు పడ్డ కష్టం వ్యర్ధం కాలేదని మీరు తెలుసుకుంటారు వ్యాపారం మరియు చదువులూ ఇంకా ముందుకు సాగాలని మీకు మోటివేషన్ దొరుకుతుంది",
    },
    {
      title: "స్త్రీ వల్ల పెద్ద శుభవార్త",
      thumbnail: "ఒక స్త్రీ వల్ల పెద్ద శుభవార్త + ఆకస్మిక ధనాలభం",
      matter: "ఈరోజు మీకు ఒక స్త్రీ వల్ల పెద్ద శుభవార్త అందుతుంది మరియు వార్త వినంగానే మీ మడ్ ఒక్కసారిగా మంచిగా మారడంతో మీరు మీ పార్టనర్ తో కలిసి సినిమాకు పోతారు మరియు రాత్రి సమయంలో మీకు ధనలాభం కలుగుతుంది ",
    },
    {
      title: "స్త్రీ తో సరదాగా ఉలా",
      thumbnail: "ఒక స్త్రీ తో కలిసి సరదాగా చేసే పనులు తెలిస్తే షాక్ !",
      matter: "ఈరోజు మీరు టైం పాస్ చెయ్యడానికి ఒక స్త్రీ తో కలిసి ఒక మంచి రెస్టారెంట్ కు వెళ్లి భూజనం చెయ్యడం ఇష్టపడుతారు మరియు సినిమాకు పోయి జాలిగా గడుపుతారు ఈరోజు మీకు ఎప్పటికి గుర్తుండిపోయేలా గడుపుతారు",
    },
    {
      title: "సెత్రువులు ఇలా చేస్తారు",
      thumbnail: "పెద్ద శుభవార్తలు + సెత్రువులు ఇలా చేస్తారు",
      matter: "ఈరోజు మీకు చాల పెద్ద శుభవార్తలు అందుతాయి దీనితో మీరు చాల సంతోషంగా ఉంటారు మీ సంతోషం మీ సేత్రువులు చూడలేరు వారు మీకు ఎదో ఒక హాని చెయ్యాలని చూస్తారు కాని రోజు ఆకరికి ఏమి చెయ్యలేక అలిసి వెళ్ళిపోతారు",
    },
    {
      title: "ప్రాణగండం ఉంది జాగ్రత్త",
      thumbnail: "వీరితో గొడవలు + ప్రాణగండం ఉంది జాగ్రత్త",
      matter: "ఈరోజు మీకు మీ సేత్రువులతో గొడవలు జరుగుతాయి మరియు మీరు ఈరోజు మీ కోపాన్ని అడుపులూ ఉంచాలి లేదంటే మీకు గొడవలో తీవ్ర గాయలవల్ల ప్రాణగండం ఉంది దేవుడ్ని స్మరించండి గొడవ దేనికి కూడా సమాధానం కాదు అని మీరు తెలుసుకోవాలి",
    },
    {
      title: "స్త్రీ వల్ల పండగలు",
      thumbnail: "ఒక స్త్రీ వల్ల ఈరోజు పండుగలా ఉంటుంది",
      matter: "ఈరోజు ఒక స్త్రీ వల్ల వేడుకలా ఉంటుంది మీకు నచ్చిన స్త్రీ తో ఈరోజు మీరు బయటకు పోతారు మరియు వారితో సినిమాలకు పోయి జాలిగా గడుపుతారు ఆ స్త్రీ వల్ల రోజు చివర్లో ధనాలభం కూడా కావొచ్చు శుభం కలుగుతుంది ",
    },
    {
      title: "స్త్రీ మోసం చేస్తుంది",
      thumbnail: "ఒక స్త్రీ ఇలా మోసం చేస్తది + ఇలా చెయ్యండి",
      matter: "ఈరోజు మీరు గుడ్డిగా నమ్మిన ఒక స్త్రీ మిమ్మల్ని మోసం చేస్తది దేనిని మీరు తట్టుకోలేరు కోపంలూ మీరు డిప్రెషన్ లో కూడా పోవచ్చు కాని మీ తల్లి తండ్రులకు ఈ విషయం తెలిసి వారు మిమ్మల్ని దీని నుండి బయటకు తెస్తారు",
    },
    {
      title: "స్త్రీ మీ కాళ్ళ వద్దకు",
      thumbnail: "ఒద్దు అన్న స్త్రీ మీ కాళ్ళ వద్దకు వస్తుంది",
      matter: "మీ దగ్గర డబ్బులు లేవు మీరు బిచ్చగాల్లు అని మిమ్మల్ని వదిలి పాయిన ఆ స్త్రీ ఈరోజు మీ అభివృద్ధి మరియు మీ ఉన్నత చదువులు చూసి మల్లి మీ కాళ్ళ వద్దకు ఒస్తుంది మల్లి తనను దగ్గరుకు తెసుకున్తారా? కామెంట్ లో చెప్పండి  ",
    },
  
    {
      title: "పెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "పెద్ద శుభవార్తలు ఉన్నాయి + స్త్రీ వల్ల పండుగ",
      matter: "ఈరోజు మీకోసం పెద్ద శుభవార్తలు ఎదురుచుస్తునాయి మీరు పడ్డ కష్టానికి ప్రతిఫలం ఈరోజు మీకు శుభవార్త అందుతుంది మరియు మీ అభివృద్ది ని చూసి ",
    },
    {
      title: "స్త్రీ వల్ల ధనలాభం",
      thumbnail: "అందమైన స్త్రీ వల్ల ధనలాభం + పెద్ద శుభవార్త",
      matter: "ఈరోజు ఒక అందమైన స్త్రీ వల్ల ధనాలభం కలుగుతుంది ఇంకా రోజు మధ్యలో మీకు పెద్ద శుభవార్త అందుతుంది మీకు ఆ శుభవార్త అందుతదని మీరు కలలో కూడా ఉహించి ఉండరు కాని మీ అదృష్టం వల్ల మీకు ఆ శుభవార్తః అందుతుంది ",
    },
    {
      title: "కుటుంబంలో వీరికి ప్రాణగండం",
      thumbnail: "మీ కుటుంబంలో వీరికి ఇలా ప్రాణగండం జాగ్రత్త",
      matter: "ఈరోజు మీ కుటుంబంలో వ్రుదుల అనారోగ్యం వల్ల వారికి ప్రాణగండం ఉంది కాబట్టి పుష్టిక ఆహారాన్ని సేవించాలి మరియు దేవుడ్ని స్మరించాలి మీరు చేసిన పుణ్యకార్యాల వల్ల దేవుడు మీ గండాన్ని తొలగిస్తారు శుభం జరుగుతుంది",
    },
    {
      title: "స్త్రీ వల్ల శుభవార్తలు",
      thumbnail: "మీరు ఊహించని స్త్రీ శుభవార్తలు చెప్తారు ",
      matter: "ఈరోజు మీరు కలలో కూడా ఉహించని ఒక అందమైన స్త్రీ నోటితో మీరు శుభావర్తలు వింటారు ఈవార్త వినగానే మీ మనస్సు గాలిలో తేలినట్లు అయిపోతుంది మీరు మీ బంధువులందరితో ఈ వార్తని పంచుకుంటారు జాలిగా గడుపుతారు",
    },
    {
      title: "స్త్రీ మీ కాళ్ళ వద్దకు",
      thumbnail: "మీరు కావాలనుకున్న స్త్రీ మీ కాళ్ళ వద్దకు",
      matter: "ఈరోజు మీరు ఎప్పటినున్డూ కోరుకుంటున్న స్త్రీ మీ అదృష్టం కొద్ది మీ దగ్గర సహాయం కోరుతూ వస్తుంది మీరు కాని తనకు సహాయం చేస్తే మాత్రం మీ ఇద్దరి మధ్య బంధం ఇంకా గట్టిపడుతుంది కాని ఆ సహాయం చెయ్యడానికి కొద్దిగా శ్రీమ పడాల్సి ఉంటది",
    },
  
    {
      title: "పెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "పెద్ద శుభవార్తలు + ఒక స్త్రీ ఇలా చేస్తుంది",
      matter: "ఈరోజు మీకు మీరు ఎన్నో సంవచరాల నుండి ఎదురుచూస్తున్న శుభవార్త ఒకటి అందడం వల్ల మీరు సంతోషంగా ఎగిరి గంతులేస్తారు మరియు మీ మిత్రులకి పార్టి ఇస్తారు మొత్తానికి ఈరోజు జాలిగా గడుపుతారు కాని ఆ శుభవార్త మీ జీవితాన్ని మార్చేస్తుంది",
    },
    {
      title: "ఒక స్త్రీ మోసం చేస్తారు",
      thumbnail: "ఒక స్త్రీ మిమ్మల్ని ఈవిధంగా మోసం చేస్తున్నారు",
      matter: "ఈరోజు మీరు కళ్ళు ముసి నమ్మిన ఒక స్త్రీ మిమ్మల్ని వెంనేపోటు పొడుస్తారు మిమ్మల్ని కాదని మోసం చేస్తారు దీనితో మీరు చాల బాధ పాడుతారు కాని మీ తల్లితండ్రులు మీకు సపోర్టుగా ఉంటారు దీనివల్ల వాళ్ళని మించిన వారు లేరని మీకు తెలుస్తుంది",
    },
    {
      title: "స్త్రీ తో మనసులోని మాట",
      thumbnail: "నచ్చిన స్త్రీ తో మీ మనసులోని మాట చెపుతారు",
      matter: "మీరు ప్రతిరోజూ కలలో చూసే మీకు నచ్చిన ఒక స్త్రీ తో ఈరోజు మీరు మీ మనస్సులోని మాట చెపుదామని మీరు ఫిక్స్ అవుతారు ఇలా చెయ్యడానికి ఇదే సరైన సమయం శుభవార్తలు కూడా అందవచ్చు ఏది జరిగినా మన మంచికే అని గుర్తుపెట్టుకోండి ",
    },
    {
      title: "ఎవరంలో ఇలా జరిగిద్ది",
      thumbnail: "ఈవారంలో ఏం జరుగుతుందో తెలిస్తే షాక్",
      matter: "ఈవారంలో మీ వృత్తికి మీరే రాజు మీరే మంత్రి బిజినెస్ లో మిమ్మల్ని మించినోల్లు ఎవ్వరు ఉండరు కొత్త స్త్రీ తో పరిచయాలు జరుగుతాయి మరియు ధనాలభం కలుగుతుంది",
    },
    {
      title: "వీరే మీ సెత్రువులు",
      thumbnail: "వీరే మీ సెత్రువులు + ఒక స్త్రీ తో జాగ్రత్త",
      matter: "ఈరోజు మీరు మీ సేత్రువుల పేర్లు తెలుసుకుంటారు మరియు ఒక స్త్రీ మీ రహస్య సేత్రువు మీకు ఇప్పటివరుకు కలిగిన హాని మొత్తం మీ సేత్రువులనుంచే అని ఈరోజు మీకు తెలిసి వస్తుంది అప్ప్రమత్తంగా ఉండండి",
    },
    {
      title: "స్త్రీ కాళ్ళ వద్దకు",
      thumbnail: "మీరు ఒద్దు అని విడిచిపోయిన స్త్రీ కాళ్ళ వద్దకు",
      matter: "మీరు డబ్బు లేనివారు అని మిల్లల్ని చులకనగా చుసిన ఒక స్త్రీ ఈరోజు మీ వ్యాపారం మరియు అభివృద్ధి చూసి మల్లి మీ కాళ్ళ వద్దకు వస్తుంది కాని వచ్చిన తరువాత మీరు మీ దృష్టి ని అటు మల్లిన్చాకండి మీ వ్యాపారాన్ని ఇంకా పెంచుతూనే ఉండాలి",
    },
    {
      title: "ఒక స్త్రీ వల్ల శుభవార్తలు",
      thumbnail: "ఒక స్త్రీ వల్ల అతిపెద్ద శుభవార్తలు తెలిస్తే షాక్",
      matter: "ఈరోజు మీ జీవితంలూ ఎప్పుడు అందని శుభవార్తలు ఈరోజు మీకు ఒక స్త్రీ వల్ల అందుతాయి వాటిని విని మీరు ఎగిరి గంతులేస్తారు మీ ఆనందానికి హద్దులు ఉండవు ఆ శుభవార్తలు మీ జీవితాన్నే మార్చేస్తాయి రెడీగా ఉండండి ",
    },
    {
      title: "ఒక స్త్రీ పగబట్టి ఇలా",
      thumbnail: "ఒక స్త్రీ పగబట్టి చేసే ప్రయత్నాలు చుస్తే చాక్",
      matter: "ఈరోజు మీపైన ఎంతోకాలంగా కక్షగుడి మీ ప్రానసేత్రువు ఒక స్త్రీ మిమ్మల్ని అన్ని విధాలుగా హాని చెయ్యడానికి ప్రయత్నాలు చేస్తారు కాని మీరు చాలా ధైర్యవంతులు కావడంతో మీరు వాటన్నిటినుంచి సులభంగా తప్పించుకుంటారు ",
    },
    {
      title: "పెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "పెద్ద శుభవార్తలు ఉన్నాయి వీరు నక్కతోకతొక్కారు",
      matter: "ఈరోజు మీరునక్కతోకతొక్కారు మీకు ఈరోజు పెద్ద శుభవార్తలు అందుతాయి వాటిని విని మీ మనసు గాలిలో తేలడం మాత్రం ఖాయం ఈరోజు మీకు శుభవార్తలు విన్న తరువాత ఆనదందానికి హద్దులు ఉండవు ఎగిరి గంతులు వేస్తారు",
    },
    {
      title: "ఒక స్త్రీ వల్ల ప్రాణగండం",
      thumbnail: "ఒక స్త్రీ వల్ల ప్రాణగండం + ఈవిషయాల్లో జాగ్రత్త",
      matter: "ఈరోజు మీకు ఒక స్త్రీ వల్ల ప్రాణగండం ఉంది ఎలా అంటే ఈరోజు మీరు ఒక స్త్రీ ని ఆకట్టుకోవడానికి వాహనాన్ని అతివేగంతో నడుపడంతో మీకు ఆపదలు జరిగే అవకాశం ఉంది జాగ్రత్తగా ఉండండి మరియు వాహనాన్ని ఇంటిదగ్గర మీకోసం ఎదురుచూస్తున్నా వాళ్ళ కోసం నెమ్మదిగా తోలండి",
    },
    {
      title: "స్త్రీ తో ఇలా చేస్తారు",
      thumbnail: "శుభవార్త తెలిస్తే ఎగిరి గంటెస్తారు ఒక స్త్రీ తో",
      matter: "ఈరోజు మీ రోజువారి బ్రతుకులూ ఒక్కసారిగా పెద్ద శుభవార్త ఒకటి అందడంవల్ల మీరు మీ ప్రేయసితో కలిసి ఎంజాయ్ చెయ్యడానికి బయటకు సినిమాలు అని షికార్లకు పోతారు ఈరోజు మీ జీవితంలో ఎప్పటికి గుర్తుండిపోతుంది",
    },
    {
      title: "స్త్రే తో సరదాగా ఉలా",
      thumbnail: "అందమైన స్త్రీ తో సరదా కోసం ఇలా చేస్తారు ",
      matter: "ఈరోజు మీకు చాల అదృష్టమైన రోజు మీరు కలలో కూడా ఉహించని అందమైన స్త్రీ తో ఈరోజు మీరు సరదాగా షికారుకు వెళ్లి జాలిగా గడుపుతారు మరియు మీ ఇద్దరి బంధం దీనివల్ల ఇంకా ద్రుదపడుతుంది",
    },
    {
      title: "ఒక స్త్రీ కాళ్ళ దగ్గర",
      thumbnail: "శుభవార్త ! ఒక స్త్రీ ఈరోజు మీ కాళ్ళ దగ్గర",
      matter: "ఈరోజు శుభవార్త అందుతుంది మీరు పేదవాళ్ళు అని మిమ్మల్ని వదిలిపొఇన ఒక స్త్రీ ఈరోజు మీ అభివృద్ధి మరియు దానం చూసి మల్లి మీ కాళ్ళ దగ్గర రావడం ఖాయం",
    },
    {
      title: "స్త్రీ వల్ల గుండెలుపగిలే వార్త",
      thumbnail: "ఒక స్త్రీ వల్ల గుండెలు పగిలే వార్తలు జాగ్రత్త",
      matter: "ఈరోజు మీరు ఎంతగా నమ్మిన స్త్రీ తరుపునుంచి మీకు గుండెలు పగిలే వార్తలు వింటారు ఆ వార్తలు ఏంటంటే వారి ఆరోగ్యం అస్సలు బాగాలేదు మరియు ఆసుపత్రిలూ వారికి చాల ఖర్చులు ఉన్నాయి ఇది విన్న తరువాత మీరు వారిని ఆర్ధికంగా సహాయం చేస్తారు",
    },
    {
      title: "ఒక స్త్రీ మిమ్మల్ని హాని",
      thumbnail: "ఒక స్త్రీ ఇలా హాని చేస్తుంది ఇప్పుడే తెలుసుకోండి",
      matter: "ఈరోజు మీకు ఒక స్త్రీ పగబట్టి శారీరికంగా హాని చెయ్యడానికి చెయ్యని ప్రయత్నాలు ఉండవు కావున మీరు బయటకు వెళ్ళేటప్పుడు దేవుడ్ని స్మరించి జాగ్రత్తగా వెళ్ళండి మీకు ఎలాంటి హాని కలగదు",
    },
    {
      title: "మీ మీద స్త్రీ దృష్టి",
      thumbnail: "మీ మీద ఒక స్త్రీ చేసుదృష్టి జాగ్రత్త",
      matter: "మీ మీద ఒక స్త్రీ చేడుద్రుష్టి ఈలోకంలో చేడుద్రుష్టి అనేది ఒక రాజుని కూడా బిచ్చగాడు లా చెయ్యొచ్చు మీ సంపద మీద ఒక స్త్రీ ఏడుస్తుంది ఇది మీరు జాగ్రత్తగా ఉండాల్సిన సమయం అప్ప్రమత్తంగా ఉండండి",
    },
    {
      title: "ఒక స్త్రీ వల్ల శుభవార్తలు",
      thumbnail: "అన్ని శుభవార్తలే మీ జీవితంలో ఒక స్త్రీ ఎంట్రీ",
      matter: "ఎప్పటినుండో బ్రేక్ లో ఉన్న మీ జీవితం ఒక స్త్రీ రావడంతో దూసుకుపోతుంది , అవును ఈరోజు మీకు అన్ని శుభవార్తలు అందుతాయి మరియు మీ జీవితంలూ ఒక స్త్రీ ఎంట్రీ ఇస్తుంది ",
    },
    {
      title: "స్త్రీ వల్ల పెద్ద శుభవార్తలు",
      thumbnail: "ఒక స్త్రీ వల్ల 3 పెద్ద శుభవార్తలు + ఇలా చెయ్యకండి",
      matter: "ఈరోజు మీరు ఒక స్త్రీ వల్ల మూడు పెద్ద శుభావర్హలు అందుకుంటారు మరియు శుభవార్తలు అందుకున్న వెంటనే మీరు ఆ విషయాలను మీ తల్లి తండ్రులకు ముందుగా చెపుతారు ఎందుకంటే ఈలోకంలో వారిని మించి మీకు ఎవ్వరు లేరు",
    },
  ];
  const today = new Date();
  let tomorrow = new Date(today);
  tomorrow.setDate(tomorrow.getDate() + 2);

  let dayOfWeekIndex = tomorrow.getDay();
  let dayOfWeekArray = [
    "sunday",
    "monday",
    "tuesday",
    "wednesday",
    "thursday",
    "friday",
    "saturday"
  ];

  

  let monthIndex = tomorrow.getMonth();
  let monthArray = [
    "january",
    "february",
    "march",
    "april",
    "may",
    "june",
    "july",
    "august",
    "september",
    "october",
    "november",
    "december",
  ];
let count = Number(localStorage.getItem("count") )|| 23;
  let dayname = dayOfWeekArray[dayOfWeekIndex];
  let monthname = monthArray[monthIndex];
  let datenumber = tomorrow.getDate().toString().padStart(2, "0");

  const textInput = document.getElementById("text-input");
  const textInput2 = document.getElementById("text-input2");
  const fontSelect = document.getElementById("text-input");
  const colorSelect = document.getElementById("color-select");
  const sizeRange1 = document.getElementById("size-range-1");
  const sizeRange2 = document.getElementById("size-range-2");
  const positionRangeX = document.getElementById("position-range-x");
  const previewContainer = document.getElementById("preview-container");
  const previewCanvas = document.getElementById("preview-canvas");
  const downloadButton = document.getElementById("download-button");
textInput2.value = datenumber;

const DailyOnceSet = function(){

  let currentDate = new Date();
  let currentDay = currentDate.getDate();
    localStorage.setItem('thumbdate', currentDay);
  }
  const Shiftdown = function () {
    let today = new Date().getDate();
    let yesterday = localStorage.getItem('thumbdate') || "";
    if(today!=yesterday){
      if(Number(localStorage.getItem("count"))+1>daily.length){
        localStorage.setItem("count",0);
      }
      else{
        
      localStorage.setItem("count",++count);
      localStorage.setItem("var4",daily[count].thumbnail);
      localStorage.setItem("var3", daily[count-1].thumbnail)
      localStorage.setItem("var2", daily[count-2].thumbnail)
      localStorage.setItem("var1", daily[count-3].thumbnail)



      }
    }  
  }

Shiftdown();
DailyOnceSet();

let var4 = localStorage.getItem("var4");
let var3;
let var2;
let var1;
if (count ==0){
  localStorage.setItem("var3", daily[67].thumbnail)
  var3 = localStorage.getItem("var3");
  localStorage.setItem("var2", daily[66].thumbnail)
  var2 = localStorage.getItem("var2");
  localStorage.setItem("var1", daily[65].thumbnail)
  var1 = localStorage.getItem("var1");
}
else if(count ==1){
  localStorage.setItem("var3", daily[0].thumbnail)
  var3 = localStorage.getItem("var3");
  localStorage.setItem("var2", daily[67].thumbnail)
  var2 = localStorage.getItem("var2");
  localStorage.setItem("var1", daily[66].thumbnail)
  var1 = localStorage.getItem("var1");
}
else if(count ==2){
  localStorage.setItem("var3", daily[1].thumbnail)
  var3 = localStorage.getItem("var3");
  localStorage.setItem("var2", daily[0].thumbnail)
  var2 = localStorage.getItem("var2");
  localStorage.setItem("var1", daily[67].thumbnail)
  var1 = localStorage.getItem("var1");
}
else{
  var3 = localStorage.getItem("var3");
  var2 = localStorage.getItem("var2");
  var1 = localStorage.getItem("var1");
}
document.getElementById("var1").value = var1;
document.getElementById("var2").value = var2;
document.getElementById("var3").value = var3;
document.getElementById("var4").value = var4;

  let currentImage = null;
  let previewImage = null;
  let fontSize1;
  // Load default image
  const defaultImage = new Image();
  //!

  textInput.value = var2;
  defaultImage.src  = "grasiphalalutula.jpg" 

  
  
  defaultImage.onload = () => {
    currentImage = defaultImage;
    updatePreview();
  };

  textInput.addEventListener("input", () => {
    updatePreview();
  });

  textInput2.addEventListener("input", () => {
    updatePreview();
  });

  fontSelect.addEventListener("input", () => {
    updatePreview();
  });

  colorSelect.addEventListener("input", () => {
    updatePreview();
  });

  sizeRange1.addEventListener("input", () => {
    updatePreview();
  });

  sizeRange2.addEventListener("input", () => {
    updatePreview();
  });

  positionRangeX.addEventListener("input", () => {
    updatePreview();
  });

  function updatePreview() {
    if (!currentImage) return;

    const text = textInput.value;
    const text2 = textInput2.value;
    const color = "white"; // Set text2 color to white
    const canvas = document.createElement("canvas");
    const ctx = canvas.getContext("2d");

    const image = currentImage;

    canvas.width = image.width;
    canvas.height = image.height;

    ctx.drawImage(image, 0, 0);

    const positionX1 = 10; // Fixed X-coordinate for text1 (leftmost position)
    const positionY1 = 1730; // Fixed Y-coordinate for text1 (bottom - 600 pixels up)

    fontSize1 = 250; // Initial font size for text1
    ctx.font = `${fontSize1}px 'Anek Telugu'`;
    let textWidth = ctx.measureText(text).width;

    // Decrease font size until the text fits within the canvas width
    while (textWidth > canvas.width - 1) {
      fontSize1 -= 1;
      ctx.font = `${fontSize1}px 'Anek Telugu'`;
      textWidth = ctx.measureText(text).width;
    }

    let stretchRatio1;
    // Calculate vertical stretch factor for text1
    if (document.querySelector("#text-input").value.length > 48) {
      const originalHeight1 = fontSize1;
      const targetHeight1 = originalHeight1 + 100; // Vertical stretch factor, adjust as needed
      stretchRatio1 = targetHeight1 / originalHeight1;
    } else if (document.querySelector("#text-input").value.length < 30) {
      const originalHeight1 = fontSize1;
      const targetHeight1 = originalHeight1+15; // Vertical stretch factor, adjust as needed
      stretchRatio1 = targetHeight1 / originalHeight1;
    } else if (document.querySelector("#text-input").value.length > 40) {
      const originalHeight1 = fontSize1;
      const targetHeight1 = originalHeight1 + 40; // Vertical stretch factor, adjust as needed
      stretchRatio1 = targetHeight1 / originalHeight1;
    } else {
      const originalHeight1 = fontSize1;
      const targetHeight1 = originalHeight1 + 30; // Vertical stretch factor, adjust as needed
      stretchRatio1 = targetHeight1 / originalHeight1;
    }
    ctx.strokeStyle = "black";
ctx.lineWidth = 10;
ctx.lineJoin = "round"; // Use round corners for the stroke
    ctx.save();
    ctx.translate(positionX1, positionY1);
    ctx.scale(1, stretchRatio1);
    ctx.fillStyle = color;
ctx.strokeText(text, 0, 0);
    ctx.fillText(text, 0, 0);
    ctx.restore();
   const fixedpos = 2400;
      const fixedPositionY = 830; // Fixed position for text2
      let size2 = 620; // Get the value of sizeRange2
      
      // Calculate the desired height increase factor
      const heightIncreaseFactor = 40; // You can adjust this value as needed
      
      // Calculate the transformation matrix for vertical scaling
      const scaleX = 1;
      const scaleY = 1 + heightIncreaseFactor / 100;
      
      ctx.save(); // Save the current state of the canvas
      
      // Apply the vertical scaling transformation
      ctx.scale(scaleX, scaleY);
      
      ctx.font = `${size2}px 'Archivo Black', sans-serif`;
      ctx.fillStyle = "white"; // Set text2 color to white
      
      // Add border to text2
      ctx.lineWidth = 40;
      ctx.strokeText(text2, fixedpos, fixedPositionY);
      ctx.fillText(text2, fixedpos, fixedPositionY);
      
      ctx.restore(); // Restore the saved state of the canvas
      
      let month = monthname;
      let day = dayname;
      
      // Add a new element (PNG) in the middle of the canvas
      let middleX;
      let middleY;
      const pngElement = new Image();
      pngElement.src = `${month}.png`;
      
    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1700;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 4000; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }
    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1800;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =2050;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =2050;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =2050;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 4150; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =2090;
      middleY =780;
    pngElement.onload = () => {
      const pngWidth = 3250; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1890;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =2090;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 3000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1900;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1950;
      middleY =820;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2200; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1900;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3000; // Width of the PNG element
      const pngHeight =2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1850;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1900;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =2050;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =2050;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("vruschika")){
     middleX =2100;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =2090;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1950;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2200; // Width of the PNG element
      const pngHeight = 2100; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1900;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =2050;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2100; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1980;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1950;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2400; // Width of the PNG element
      const pngHeight =1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }






    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1830;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =2100;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =2050;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("tula")){
     middleX =2100;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =2090;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1920;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2100; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1900;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =2000;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1900;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1880;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }





    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1830;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =2100;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =2050;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("kumbha")){
     middleX =2100;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =2090;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1920;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2300; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1900;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1900;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1880;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }



    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1830;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =2000;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =2050;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("midhuna")){
     middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 3600; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =2090;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1870;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2300; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1900;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1900;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1880;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }



    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1830;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =2100;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =2050;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("makara")){
     middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 3600; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =2090;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1870;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1900;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1900;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1880;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }








    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1830;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =2100;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =2050;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("dhanussu")){
     middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 3600; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =2090;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1870;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1900;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1920;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1880;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }



    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1720;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1850;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2950; // Width of the PNG element
      const pngHeight =1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =2050;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 3400; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =2050;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("vrushabha")){
     middleX =2100;
      middleY =910;
    pngElement.onload = () => {
      const pngWidth = 3750; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =2090;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1890;
      middleY =1050;
    pngElement.onload = () => {
      const pngWidth = 2400; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =2090;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1900;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1990;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 2400; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1890;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight =2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1870;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 2700; // Width of the PNG element
      const pngHeight =1400;// Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }




    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1830;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =2100;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =2050;
      middleY =940;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("meena")){
     middleX =2000;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3800; // Width of the PNG element
      const pngHeight = 1500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =2090;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1920;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2100; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1900;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =2000;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1900;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1880;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }




    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1720;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1850;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2950; // Width of the PNG element
      const pngHeight =1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =2050;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 3400; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =2050;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("mesha")){
     middleX =2100;
      middleY =910;
    pngElement.onload = () => {
      const pngWidth = 3750; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =2090;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1890;
      middleY =1050;
    pngElement.onload = () => {
      const pngWidth = 2400; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =2090;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1900;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1990;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 2400; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1890;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight =2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1870;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 2700; // Width of the PNG element
      const pngHeight =1400;// Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }














    // Add new element (PNG) in the middle of the canvas
    let middlesX ;
    let middlesY;
    const pngElements = new Image();
    pngElements.src = `${day}.png`;
    if(`${pngElements.src}`.includes("friday.png")){
      middlesX =1700;
      middlesY =940;
    pngElements.onload = () => {
      const pngWidth = 3000; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElements, middlesX - pngWidth / 2, middlesY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else{
      middlesX =1700;
      middlesY =900;
      pngElements.onload = () => {
        const pngWidth = 3000; // Width of the PNG element
        const pngHeight = 1800; // Height of the PNG element
        ctx.drawImage(pngElements, middlesX - pngWidth / 2, middlesY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
    }








    function updatePreviewCanvas(image) {
      previewCanvas.width = previewContainer.clientWidth;
      previewCanvas.height = (previewContainer.clientWidth / image.width) * image.height;

      const scaleFactor = calculateScaleFactor(
        image.width,
        image.height,
        previewCanvas.width,
        previewCanvas.height
      );
      const previewCtx = previewCanvas.getContext("2d");
      previewCtx.clearRect(0, 0, previewCanvas.width, previewCanvas.height);
      previewCtx.drawImage(canvas, 0, 0, previewCanvas.width, previewCanvas.height);

      // Store the preview image separately
      previewImage = canvas.toDataURL();

      downloadButton.disabled = false;
    }
  }
 

  function calculateScaleFactor(originalWidth, originalHeight, maxWidth, maxHeight) {
    const widthScaleFactor = originalWidth / maxWidth;
    const heightScaleFactor = originalHeight / maxHeight;

    return Math.max(widthScaleFactor, heightScaleFactor, 1);
  }
  setTimeout(() => {
    const link = document.createElement("a");
    link.download = "grasiphalalutula";
    link.href = previewImage; // Use the preview image data URL
    link.click();
  }, 6000);
  downloadButton.addEventListener("click", () => {
   
  });
let funk = ()=>{
  const link = document.createElement("a");
    link.download = "image";
    link.href = previewImage; // Use the preview image data URL
    link.click();
}


},60000);
setTimeout(() =>{
  

  let daily = [
    {
      title: "అతిపెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "ఈరోజు మీ జీవితంలోనే అతిపెద్ద శుభవార్త!",
      matter: "ఈరోజు మీకు మీ జీవితంలోనే అతిపెద్ద శుభవార్త అందుతుంది దాన్ని విన్న తరవాత మీ ఆనందానికి హద్దులు ఉండవు ",
    },
    {
      title: "ఒక స్త్రీ వల్ల ధనాలభం",
      thumbnail: "ఒక స్త్రీ వల్ల ఇలా ధనాలభం పొందే అవకాశం!",
      matter: "ఈరోజు మీకు మీ జీవిత భాగస్వామి వల్ల ధనాలభం పొందే అవకాశం ఉంది మీరు మాత్రం మీ జీవిత భాగస్వామి ని పూర్తిగా నమ్మాలి శుభం జరుగుతుంది ",
    },
    {
      title: "ఒక స్త్రీ పగబట్టి ఇలా",
      thumbnail: "ఒక స్త్రీ పగబట్టి చేసే ప్రయత్నాలు తెలిస్తే షాక్!",
      matter: "ఈరోజు ఒక స్త్రీ పాత కక్షలు పెట్టుకొని మీ మీద పగబట్టి మిమ్మల్ని ఆర్ధికంగా నష్టపరుచడానికి చెయ్యని ప్రయత్నలంటూ ఉండవు కాని మీ మంచి మనస్సు వల్ల దేవుడు మీ మీద అన్ని ప్రయత్నాలను విఫలం చేస్తారు",
    },
    {
      title: "కొత్త స్త్రీ తో స్నేహం",
      thumbnail: "2 శుభవార్తలు + ఒక కొత్త స్త్రీ తో స్నేహం",
      matter: "ఈరోజు మీరు రెండు పెద్ద శుభవార్తలు వింటారు మరియు అనుకోకుండా మీరు ఒక కొత్త స్త్రీ తో కలిసి ఆకస్మికంగా స్నేహం చేస్తారు",
    },
    {
      title: "పెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "పెద్ద శుభవార్తలు + ఈవిషయంలో జాగ్రత్త",
      matter: "ఈరోజు శుభప్రదంగా ఉంటుంది మీరు ఈరోజు పెద్ద శుభవార్తలు వింటారు ఆ శుభవార్తలు విన్న తరువాత ఆనండంలూ మద్యపానం సేవించడానికి ప్రయత్నాలు చేస్తారు ఇలా చెయ్యకండి మీ ఆరోగ్యం దెబ్బతీస్తుంది జాగ్రత్తగా ఉండండి ",
    },
    {
      title: "ఒక స్త్రీ పగబట్టి ఇలా",
      thumbnail: "ఒక స్త్రీ పగబట్టి ఈవిధంగా చేస్తుంది జాగ్రత్త",
      matter: "ఈరోజు మీ మీద ఒక స్త్రీ పగబట్టి హాని చెయ్యాలని చూస్తున్నారు , మరియు మీ మీద ఒక స్త్రీ ఏడుపు ఉంది మీ వ్యాపారం మరియు అభివృద్ధి మీద ఏడుస్తున్నారు జాగ్రత్తగా ఉండండి",
    },
    {
      title: "బంధువులే మీ సేత్రువులు",
      thumbnail: "మీ బంధువులే మీ సేత్రువులు జాగ్రత్త",
      matter: "మీ బంధువుల్లో కొందరు మీ సేత్రువులు ఉన్నారు వాళ్ళు ఎప్పుడు అవకాశం దొరికితే మిమ్మల్ని నష్టం చెయ్యాలని చూస్తున్నారు ఎవ్వరితో కూడా మీ వ్యాపారం గురించి చెప్పకండి జాగ్రత్తగా ఉండండి వెంనేపోటు పొడుస్తారు",
    }, 
    {
      title: "ఒక స్త్రీ మోసం చేస్తారు",
      thumbnail: "ఒక స్త్రీ ఇలా మోసం చేస్తుంది జాగ్రత్త!",
      matter: "ఈరోజు మీరు ఏంతో నమ్మిన ఒక స్త్రీ మిమ్మల్ని మోసం చేసే అవకాశం ఉంది జాగ్రత్తగా ఉండండి , మీరు మంచివారు కాని అందరు మంచివారు ఉండరు ఎవ్వరిని గుడ్డిగా నమ్మవద్దు",
    },
    {
      title: "ఒక స్త్రీ వల్ల డబ్బులు",
      thumbnail: "ఒక స్త్రీ వలన ఆదాయం + ఈవిషయాల్లో జాగ్రత్త",
      matter: "ఈరోజు మీకు చాలా మంచిరోజు నేడు మీకు మీ జీవిత భాగస్వామి బల్ల ధనాలభం కలుగుతుంది మరియు మీరు మీ జీవిత భాగస్వామి వల్ల చాలా సంతోషంగా ఉంటారు మీ బాధ్యతే ఏంటంటే మీరు కుడా వారిని సంతోషంగా ఉంచండి ",
    },
    {
      title: "స్త్రీ వల్ల శుభవార్తలు",
      thumbnail: "ఒక స్త్రీ వల్ల శుభవార్తలు ! తెలిస్తే షాక్!",
      matter: "ఈరోజు మీకు చాలా మంచిరోజు ఈరోజు మీకు ఒక స్త్రీ వల్ల శుభవార్తలు అందుతాయి ఈలోకంలో మీరే అదృష్టవంతులు అని ఈరోజు మీకు అనిపిస్తుంది మీరు మాత్రం ఆ శుభవార్తలు వినగానే షాక్ అవ్వడం ఖాయం",
    },
    {
      title: "స్త్రీ కాళ్ళ వద్దకు",
      thumbnail: "కోరుకున్న స్త్రీ కాళ్ళ వద్దకు వస్తుంది",
      matter: "ఈరోజు మీరు కూరుకున్న స్త్రీ మీ వ్యాపారం మరియు అభివృద్ధి చూసి వారు మీ కాళ్ళ వద్దకు వస్తారు కాని మీరు మాత్రం మీ వ్యాపారం మరియు అభివృద్ధి ని ఆపకండి ",
    },
    {
      title: "ఒక స్త్రీ మోసం చేస్తారు",
      thumbnail: "ఒక స్త్రీ వెన్నెపాటు పొడుస్తారు జాగ్రత్త!",
      matter: "ఈరోజు మీరు ఎంతగా నమ్మిన ఒక స్త్రీ మిమ్మల్ని మోసం చేస్తారు , దీనివల్ల మీరు మానసికంగా డిప్రెషన్ లోకి పోవచ్చు జాగ్రత్తగా ఉండండి లోకంలో డబ్బే అంత అని తెలుసుకోండి డబ్బు ఉంటె మీరే రాజు మీరే మంత్రి",
    },
    {
      title: "స్త్రీ వల్ల శుభవార్తలు",
      thumbnail: "ఒక స్త్రీ వల్ల శుభవార్తలు ! తెలిస్తే ఎగిరి గంటేస్తారు",
      matter: "ఈరోజు మీరు ఒక స్త్రీ వల్ల శుభవార్తలు అందుకుంటారు ఈలోకంలో మీరే అదృష్టవంతులు అని ఈరోజు మీకు అనిపిస్తుంది మీరు మాత్రం ఆ శుభవార్తలు వినగానే మీరు ఎగిరి గంతెయ్యడం మాత్రం ఖాయం",
    },
    {
      title: "ఒక స్త్రీ వల్ల ఘూరం",
      thumbnail: "ఒక స్త్రీ వల్ల ఘోరం జరుగుతుంది జాగ్రత్త!",
      matter: "ఈరోజు మీరు ఒక స్త్రీ వల్ల భారిగా నష్టపూతారు దీనివల్ల మీరు బాధ పాడుతారు కాని దానివల్ల ఏమి లాభం లేదు ఇప్పటికైనా పోయింది ఏమిలేదు అన్ని మరిచి మీరు మీ లక్ష్యం మీద దృష్తి పెడితే శుభం కలుగుతుంది",
    },
    {
      title: "కుటుంబంలో వీరికి మరనగందం",
      thumbnail: "కుటుంబంలో వీరికి మరణ గండం జాగ్రత్త!",
      matter: "ఈరోజు మీ కుటుంబంలో పెద్దవారిని ఎలెక్ట్రానిక్ వస్తువులనుంచి దూరంగా ఉంచండి ప్రమాదాలు జరిగే అవకాశాలు ఉన్నాయి అప్ప్రమత్తంగా ఉండండి వారి ఆరోగ్యం మీద శ్రెద్ద పెట్టండి శుభం కలుగుతుంది ",
    },
    {
      title: "అందమైన స్త్రీ తో ",
      thumbnail: "ఈరోజు అదృష్టం మీదే! అందమైన స్త్రీ తో",
      matter: "ఈరోజు ఈ మొత్తం ప్రపంచంలో మీరే అదృష్టవంతులు అని మీకు అనిపిస్తుంది ఈరోజు మీరు మీకు నచ్చిన ఇక అందమైన స్త్రీ తో బయటకు వెళ్లి సినిమాలు షికార్లు అని జాలిగా గడుపుతారు",
    },
    {
      title: "స్త్రీ తో మనసులోని మాట",
      thumbnail: "అందమైన స్త్రీ తో మనసులోని మాట చెప్తారు ",
      matter: "ఈరోజు మీరు మీకు నచ్చిన ఒక అందమైన స్త్రీ తో ఎప్పటినుంచో చెప్పాలనుకుంటున్న మీ మనస్సులోని మాట ఈరోజు చెపుతారు మరియు ఇలా చేస్తే ఈరోజు మీరు షాకింగ్ న్యూస్ వింటారు ",
    },
    {
      title: "పెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "పెద్ద శుభవార్తలు + ఒక స్త్రీ పగబట్టి ఇలా చేస్తది",
      matter: "ఈరోజు మీరు పెద్ద శుభవార్తలు వింటారు మరియు ఈరోజు ఒక స్త్రీ పగబట్టి మీ శుభవార్తల మీద ఈర్ష తో నష్టం చెయ్యడానికి ప్రయత్నాలు చేస్తారు కాని మీరు మీ అదృష్టం వల్ల తప్పించుకుంటారు",
    },
    {
      title: "ఒక స్త్రీ తో సరదాగా ఉలా",
      thumbnail: "ఒక స్త్రీ తో సరదాగా ఇలా చేస్తారు...! జాగ్రత్త",
      matter: "ఈరోజు మీరు సరదా కోసం మీ ప్రేయసితో బయటకు పోయి సినిమాలకు రెస్టారెంట్లకు పోయి చివరికి మీరు మీ దగ్గర ఉన్న డబ్బును మొత్తం ఐపోచేస్తారు జాగ్రత్తగా ఉండండి డబ్బును ఈరోజు మీరు ఆదా చేస్తే అవి మీకు రేపు పనికి వస్తాయి",
    },
    {
      title: "స్త్రీ వల్ల ఆనందం",
      thumbnail: "ఒక స్త్రీ వల్ల ఆనందానికి హద్దులు ఉండవు",
      matter: "ఈరోజు మీ జీవితానికి అర్ధమోచ్చే ఒక పెద్ద బంగారు శుభావర్తని మీ జీవిత భాగస్వామి మీకు అందిస్తారు ఈరోజు మీరు ఒక అందమైన స్త్రీ తో జాలిగా గడుపుతారు ఈరోజు ఆ అందమైన స్త్రీ వల్ల ఆకస్మికంగా ధనలాభం పొందే అవకాశం కుడా ఉంది",
    },
    {
      title: "వీరితో గొడవలు జాగ్రత్త",
      thumbnail: "ఈరోజు వీరితో గొడవలు జరుగుతాయి జాగ్రత్త",
      matter: "ఈరోజు మీరు ఎప్పటినుంచో గొడవ పదాలనుకుంటున్న మీ సేత్రువులు మిమ్మల్ని గెలకడంతో మీరు వారితో గొడవ పడొచ్చు కాని గొడవ పరిష్కారం కాదని మీరు తెలుసుకూవాలి కాని గొడవ జరిగితే మాత్రం గెలిసేది మీరే",
    },
    {
      title: "అందమైన స్త్రీ తో ఇలా",
      thumbnail: "ఒక అందమైన స్త్రీ తో సరదాలు + ఆకస్మిక ధనాలభం",
      matter: "ఈరోజు మీరు ఒక అందమైన స్త్రీ తో జాలిగా గడుపుతారు ఈరోజు ఆ అందమైన స్త్రీ వల్ల ఆకస్మికంగా ధనలాభం పొందే అవకాశం కుడా ఉంది",
    },
    {
      title: "స్త్రీ వల్ల నష్టాలు",
      thumbnail: "ఓక స్త్రీ వల్ల భారీగా నష్టపోతారు జాగ్రత్త!",
      matter: "ఈరోజు మీరు మీ జీవిత భాగస్వామి చేసిన ఒక తప్పు వల్ల బిజినెస్ లో భారి నష్టాలను చూస్తారు దీనివల్ల మీరు వారిమీద కోప్పడుతారు ఆఖరికి దీంట్లో వాళ్ళు కావాలని చెయ్యలేదని తెలుసుకొని క్షమిస్తారు",
    },
    {
      title: "ఒక స్త్రీ పగబట్టి ఇలా",
      thumbnail: "ఒక స్త్రీ పగబట్టి ఈవిధంగా చేస్తుంది",
      matter: "ఈరోజు మీ మీద ఎప్పటినుంచో కక్ష పెట్టుకున్న ఒక స్త్రీ ఈరోజు పగతీర్చుకోవడానికి మిమ్మల్ని మానసికంగా హాని చేస్తారు అది కుడా విఫలం అయితే శారీరికంగా హాని చేస్తారు జాగ్రత్తగా ఉండండి ",
    },
    {
      title: "ఒక స్త్రీ తో గొడవలు",
      thumbnail: "ఈరోజు ఒక స్త్రీ తో గొడవలు జరుగుతాయి",
      matter: "ఈరోజు మీకు ఒక స్త్రీ తో గొడవలు జరుగుతాయి మీరు ఎంత ఒద్దు అనుకున్న గొడవలు తప్పవు దీనిని ద్రుష్టిలో పెట్టుకొని మీరు గొడవని ఆపలేరు అయితే మీరు కోపంలో మీరు చెప్పే మాటలపై మీరు తరువాత ఆందోళన పాడుతారు జాగ్రత్త key",
    },
    {
      title: "స్త్రీ తో మనసులోని మాట",
      thumbnail: "ఒక స్త్రీ తో మనసులోని విషయం మాట్లాడతారు",
      matter: "ఈరోజు మీరు ఒక స్త్రీ తో మీ మనసులోని మాట మాట్లాడుతారు మీరు వారిని ఇష్టపడుతున్నారని వారితో చెపుతారు ఈవిషయం చెప్పినతరువాత మీకు ఒక షాకింగ్ వార్త అందుతుంది జాలిగా గడుపుతారు",
    },
    {
      title: "జీవితంలో ఒక స్త్రీ ఎంట్రీ",
      thumbnail: "మీ జీవితంలో ఒక స్త్రీ ఎంట్రీ .. అన్ని శుభవర్తలే",
      matter: "ఈరోజు మీ జీవితంలో ఒక కొత్త స్త్రీ వస్తుంది తను చాల బుద్ధిమంతురాలు మరియు అందానికి యువరాణి మీకు ఆ స్త్రీ చాల నచ్చుతుంది మరియు మీరు ఆ స్త్రీ తో స్నేహం కూడా చెయ్యడానికి ప్రయత్నాలు చేస్తారు",
    },
    {
      title: "ఒక స్త్రీ వల్ల మోసపోతారు",
      thumbnail: "ఒక స్త్రీ ని గుడ్డిగా నమ్మవద్దు! మీరు మోసపోవచ్చు",
      matter: "మీరు ప్రాణంగా ప్రేమించిన స్త్రీ ఈరోజు మిమ్మల్ని విదిచిపోవడంతో మీరు తట్టుకోలేరు మీరు డిప్రెషన్ లో కూడా పోవచ్చు కాని అదే సమయంలో మీ తల్లితండ్రులవల్ల మీకు జీవితం అంటే ఒక అర్ధం ఒస్తుంది వారి కోసమే బ్రతుకుతారు",
    },
    
    {
      title: "స్త్రీ వల్ల బంగారు శుభవార్త",
      thumbnail: "ఒక స్త్రీ వల్ల బంగారు శుభవార్తలు + ఇలా చేయకండి",
      matter: "ఈరోజు మీ జీవితానికి అర్ధమోచ్చే ఒక పెద్ద బంగారు శుభావర్తని మీ జీవిత భాగస్వామి మీకు అందిస్తారు ఆ శుభవార్త మీ జీవితాన్నే మార్చేస్తుంది కాబట్టి ఈరోజు మీరు ఆనందంలో మీరు ఎం చేయ్యలనుకున్తున్నారో ఆ పనులన్నీ చేసేస్తారు",
    },
  
    {
      title: "ప్రియమైన స్త్రీ ని కలుస్తారు",
      thumbnail: "ఒక ప్రియమైన స్త్రీ ని కలుస్తారు + ఆకస్మిక ధనాలభం",
      matter: "ఈరోజు మీరు మీకు ఏంటో ప్రియమైన స్త్రీ ని కలుస్తారు కలిసి సరదాగా మాట్లాడుకుంటారు ఇంకా ఈరోజు చివరిలో మీకు ఆకస్మిక ధనలాభం కలుగడంతో మీ ఆనందానికి హద్దులు ఉండవు ఆనందంలో పార్టి కూడా చేసుకుంటారు",
    },
    {
      title: "2 పెద్ద శుభవార్తలు",
      thumbnail: "2 పెద్ద శుభవార్తలు + ఈవిషయంలో జాగ్రత్త!",
      matter: "ఈరోజు మీరు ఎప్పటినుండో ఎదురుచూస్తున్న శుభవార్త వింటారు మరియు మీరు అనుకోకుండా ఒక స్త్రీ వల్ల ఇంకొక శుభవార్తలు అందుకుంటారు సంతోషంలో మీరు మద్యం సేవించవచ్చు ఇలా చెయ్యకండి జాగ్రత్త",
    },
    {
      title: "ఒక స్త్రీ వల్ల గొడవలు",
      thumbnail: "ఒక స్త్రీ వల్ల గొడవలు + ఆకస్మిక సంఘటనలు",
      matter: "ఈరోజు మీరు మీకు నచ్చిన ఒక స్త్రీ కోసం వేరే వాళ్లతో గొడవలలో పలుగోనతారు కాని ఆకస్మికంగా ఆ గొడవ చాల పెద్దగా కావడంతో మీరు గొడవని ముగించడానికి ప్రయత్స్తారు కాని మీరు జాగ్రత్తగా ఉండాలి దెబ్బలు కూడా తగలోచ్చు",
    },
    {
      title: "స్త్రీ వల్ల ప్రమాదాలు",
      thumbnail: "ఒక స్త్రీ వల్ల ప్రమాదాలు ముంచుకోస్తున్నాయి జాగ్రత్త",
      matter: "ఈరోజు మీకు ఒక స్త్రీ వల్ల ప్రమాదాలు మున్చుకోస్తునాయి కాబట్టి మీరు అప్ప్రమత్తంగా ఉండండి వాహనాలు నడిపెటప్పుడు ఒక స్త్రీ ని ఆకర్షించడానికి మీరు మీ వాహనాన్ని అతివేగంలో నడుపుతారు దీనివల్ల ప్రమాదం కూడా జరుగవచ్చు",
    },
    {
      title: "ఒక స్త్రీ నష్టం చేస్తారు",
      thumbnail: "ఒక స్త్రీ ఈవిధంగా నష్టం చేస్తున్నారు + ఇలా చెయ్యండి",
      matter: "మీరు మిమ్మల్ని ప్రేమిస్తున్నారు అనుకుంటున్నా స్త్రీ మీదగ్గర మీ డబ్బుకోసమే ఉన్నారు . ఈరోజు బయట ఆ స్త్రీ మిమ్మల్ని షాపింగ్ కు తెసుకేల్లి మీ లక్షలు నష్టం చేస్తారు జాగ్రత్త",
    },
    {
      title: "మంచి శుభవార్తలు ఉన్నాయి",
      thumbnail: "మంచి శుభవార్తలు + ఈవిషయాల్లో జాగ్రత్త",
      matter: "ఈరోజు మీ జీవితానికి అర్ధమోచ్చే ఒక పెద్ద బంగారు శుభావర్తని మీ జీవిత భాగస్వామి మీకు అందిస్తారు ఆ శుభవార్త మీ జీవితాన్నే మార్చేస్తుంది  సంతోషంలో మీరు మద్యం సేవించవచ్చు ఇలా చెయ్యకండి జాగ్రత్త",
    },
    {
      title: "ఒక స్త్రీ తో గొడవ",
      thumbnail: "ఈరోజు ఒక స్త్రీ తో గొడవ జరుగుతుంది జాగ్రత్త",
      matter: "ఈరోజు మీకు ఒక స్త్రీ తో ఆస్తి మరియు దనం విషయంలో గొడవలు జరుగుతాయి కాని గొడవలో మీరు నూరు జారి చెప్పకుదని మాటలు చెపుతారు గొడవ తరువాత మీరు ఎందుకుచేప్పరని బాధపడి ఆ స్త్రీ తో క్షమాపణ అడుగుతారు దీని బదులు మీరు ముందే నూరు అదుపులో పెట్టుకోండి",
    },
    {
      title: "సేత్రువులు ఇలా చేస్తారు",
      thumbnail: "రహస్య సెత్రువులు ఈవిధంగా చేస్తున్నారు జాగ్రత్త",
      matter: "ఈరోజు రహస్య సేత్రువులు మీకు తెలియకుండానె మిమ్మల్ని ఆర్ధికంగా మరియు మీ కుతుమ్బంన్ని హాని చెయ్యడానికి చెయ్యని ప్రయత్నలుండవు కాబట్టి మీరు ముందే జాగ్రత్తగా ఉండండి ఎవ్వరిని గుడ్డిగా నమ్మవద్దు మోసపోవచ్చు",
    },
    {
      title: "అమ్మాయి కాళ్ళ వద్దకు",
      thumbnail: "అందమైన అమ్మాయి మీ కాళ్ళ వద్దకు వస్తుంది",
      matter: "ఈరోజు మీ స్వప్న సుందరి మీ ఉన్నత చదువులు మరియు వ్యాపారంలో అభివృద్ధి చూసి ఒచ్చి మీ కాళ్ళ వద్దకు పడుతది . ఈరోజు మీరు పడ్డ కష్టం వ్యర్ధం కాలేదని మీరు తెలుసుకుంటారు వ్యాపారం మరియు చదువులూ ఇంకా ముందుకు సాగాలని మీకు మోటివేషన్ దొరుకుతుంది",
    },
    {
      title: "స్త్రీ వల్ల పెద్ద శుభవార్త",
      thumbnail: "ఒక స్త్రీ వల్ల పెద్ద శుభవార్త + ఆకస్మిక ధనాలభం",
      matter: "ఈరోజు మీకు ఒక స్త్రీ వల్ల పెద్ద శుభవార్త అందుతుంది మరియు వార్త వినంగానే మీ మడ్ ఒక్కసారిగా మంచిగా మారడంతో మీరు మీ పార్టనర్ తో కలిసి సినిమాకు పోతారు మరియు రాత్రి సమయంలో మీకు ధనలాభం కలుగుతుంది ",
    },
    {
      title: "స్త్రీ తో సరదాగా ఉలా",
      thumbnail: "ఒక స్త్రీ తో కలిసి సరదాగా చేసే పనులు తెలిస్తే షాక్ !",
      matter: "ఈరోజు మీరు టైం పాస్ చెయ్యడానికి ఒక స్త్రీ తో కలిసి ఒక మంచి రెస్టారెంట్ కు వెళ్లి భూజనం చెయ్యడం ఇష్టపడుతారు మరియు సినిమాకు పోయి జాలిగా గడుపుతారు ఈరోజు మీకు ఎప్పటికి గుర్తుండిపోయేలా గడుపుతారు",
    },
    {
      title: "సెత్రువులు ఇలా చేస్తారు",
      thumbnail: "పెద్ద శుభవార్తలు + సెత్రువులు ఇలా చేస్తారు",
      matter: "ఈరోజు మీకు చాల పెద్ద శుభవార్తలు అందుతాయి దీనితో మీరు చాల సంతోషంగా ఉంటారు మీ సంతోషం మీ సేత్రువులు చూడలేరు వారు మీకు ఎదో ఒక హాని చెయ్యాలని చూస్తారు కాని రోజు ఆకరికి ఏమి చెయ్యలేక అలిసి వెళ్ళిపోతారు",
    },
    {
      title: "ప్రాణగండం ఉంది జాగ్రత్త",
      thumbnail: "వీరితో గొడవలు + ప్రాణగండం ఉంది జాగ్రత్త",
      matter: "ఈరోజు మీకు మీ సేత్రువులతో గొడవలు జరుగుతాయి మరియు మీరు ఈరోజు మీ కోపాన్ని అడుపులూ ఉంచాలి లేదంటే మీకు గొడవలో తీవ్ర గాయలవల్ల ప్రాణగండం ఉంది దేవుడ్ని స్మరించండి గొడవ దేనికి కూడా సమాధానం కాదు అని మీరు తెలుసుకోవాలి",
    },
    {
      title: "స్త్రీ వల్ల పండగలు",
      thumbnail: "ఒక స్త్రీ వల్ల ఈరోజు పండుగలా ఉంటుంది",
      matter: "ఈరోజు ఒక స్త్రీ వల్ల వేడుకలా ఉంటుంది మీకు నచ్చిన స్త్రీ తో ఈరోజు మీరు బయటకు పోతారు మరియు వారితో సినిమాలకు పోయి జాలిగా గడుపుతారు ఆ స్త్రీ వల్ల రోజు చివర్లో ధనాలభం కూడా కావొచ్చు శుభం కలుగుతుంది ",
    },
    {
      title: "స్త్రీ మోసం చేస్తుంది",
      thumbnail: "ఒక స్త్రీ ఇలా మోసం చేస్తది + ఇలా చెయ్యండి",
      matter: "ఈరోజు మీరు గుడ్డిగా నమ్మిన ఒక స్త్రీ మిమ్మల్ని మోసం చేస్తది దేనిని మీరు తట్టుకోలేరు కోపంలూ మీరు డిప్రెషన్ లో కూడా పోవచ్చు కాని మీ తల్లి తండ్రులకు ఈ విషయం తెలిసి వారు మిమ్మల్ని దీని నుండి బయటకు తెస్తారు",
    },
    {
      title: "స్త్రీ మీ కాళ్ళ వద్దకు",
      thumbnail: "ఒద్దు అన్న స్త్రీ మీ కాళ్ళ వద్దకు వస్తుంది",
      matter: "మీ దగ్గర డబ్బులు లేవు మీరు బిచ్చగాల్లు అని మిమ్మల్ని వదిలి పాయిన ఆ స్త్రీ ఈరోజు మీ అభివృద్ధి మరియు మీ ఉన్నత చదువులు చూసి మల్లి మీ కాళ్ళ వద్దకు ఒస్తుంది మల్లి తనను దగ్గరుకు తెసుకున్తారా? కామెంట్ లో చెప్పండి  ",
    },
  
    {
      title: "పెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "పెద్ద శుభవార్తలు ఉన్నాయి + స్త్రీ వల్ల పండుగ",
      matter: "ఈరోజు మీకోసం పెద్ద శుభవార్తలు ఎదురుచుస్తునాయి మీరు పడ్డ కష్టానికి ప్రతిఫలం ఈరోజు మీకు శుభవార్త అందుతుంది మరియు మీ అభివృద్ది ని చూసి ",
    },
    {
      title: "స్త్రీ వల్ల ధనలాభం",
      thumbnail: "అందమైన స్త్రీ వల్ల ధనలాభం + పెద్ద శుభవార్త",
      matter: "ఈరోజు ఒక అందమైన స్త్రీ వల్ల ధనాలభం కలుగుతుంది ఇంకా రోజు మధ్యలో మీకు పెద్ద శుభవార్త అందుతుంది మీకు ఆ శుభవార్త అందుతదని మీరు కలలో కూడా ఉహించి ఉండరు కాని మీ అదృష్టం వల్ల మీకు ఆ శుభవార్తః అందుతుంది ",
    },
    {
      title: "కుటుంబంలో వీరికి ప్రాణగండం",
      thumbnail: "మీ కుటుంబంలో వీరికి ఇలా ప్రాణగండం జాగ్రత్త",
      matter: "ఈరోజు మీ కుటుంబంలో వ్రుదుల అనారోగ్యం వల్ల వారికి ప్రాణగండం ఉంది కాబట్టి పుష్టిక ఆహారాన్ని సేవించాలి మరియు దేవుడ్ని స్మరించాలి మీరు చేసిన పుణ్యకార్యాల వల్ల దేవుడు మీ గండాన్ని తొలగిస్తారు శుభం జరుగుతుంది",
    },
    {
      title: "స్త్రీ వల్ల శుభవార్తలు",
      thumbnail: "మీరు ఊహించని స్త్రీ శుభవార్తలు చెప్తారు ",
      matter: "ఈరోజు మీరు కలలో కూడా ఉహించని ఒక అందమైన స్త్రీ నోటితో మీరు శుభావర్తలు వింటారు ఈవార్త వినగానే మీ మనస్సు గాలిలో తేలినట్లు అయిపోతుంది మీరు మీ బంధువులందరితో ఈ వార్తని పంచుకుంటారు జాలిగా గడుపుతారు",
    },
    {
      title: "స్త్రీ మీ కాళ్ళ వద్దకు",
      thumbnail: "మీరు కావాలనుకున్న స్త్రీ మీ కాళ్ళ వద్దకు",
      matter: "ఈరోజు మీరు ఎప్పటినున్డూ కోరుకుంటున్న స్త్రీ మీ అదృష్టం కొద్ది మీ దగ్గర సహాయం కోరుతూ వస్తుంది మీరు కాని తనకు సహాయం చేస్తే మాత్రం మీ ఇద్దరి మధ్య బంధం ఇంకా గట్టిపడుతుంది కాని ఆ సహాయం చెయ్యడానికి కొద్దిగా శ్రీమ పడాల్సి ఉంటది",
    },
  
    {
      title: "పెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "పెద్ద శుభవార్తలు + ఒక స్త్రీ ఇలా చేస్తుంది",
      matter: "ఈరోజు మీకు మీరు ఎన్నో సంవచరాల నుండి ఎదురుచూస్తున్న శుభవార్త ఒకటి అందడం వల్ల మీరు సంతోషంగా ఎగిరి గంతులేస్తారు మరియు మీ మిత్రులకి పార్టి ఇస్తారు మొత్తానికి ఈరోజు జాలిగా గడుపుతారు కాని ఆ శుభవార్త మీ జీవితాన్ని మార్చేస్తుంది",
    },
    {
      title: "ఒక స్త్రీ మోసం చేస్తారు",
      thumbnail: "ఒక స్త్రీ మిమ్మల్ని ఈవిధంగా మోసం చేస్తున్నారు",
      matter: "ఈరోజు మీరు కళ్ళు ముసి నమ్మిన ఒక స్త్రీ మిమ్మల్ని వెంనేపోటు పొడుస్తారు మిమ్మల్ని కాదని మోసం చేస్తారు దీనితో మీరు చాల బాధ పాడుతారు కాని మీ తల్లితండ్రులు మీకు సపోర్టుగా ఉంటారు దీనివల్ల వాళ్ళని మించిన వారు లేరని మీకు తెలుస్తుంది",
    },
    {
      title: "స్త్రీ తో మనసులోని మాట",
      thumbnail: "నచ్చిన స్త్రీ తో మీ మనసులోని మాట చెపుతారు",
      matter: "మీరు ప్రతిరోజూ కలలో చూసే మీకు నచ్చిన ఒక స్త్రీ తో ఈరోజు మీరు మీ మనస్సులోని మాట చెపుదామని మీరు ఫిక్స్ అవుతారు ఇలా చెయ్యడానికి ఇదే సరైన సమయం శుభవార్తలు కూడా అందవచ్చు ఏది జరిగినా మన మంచికే అని గుర్తుపెట్టుకోండి ",
    },
    {
      title: "ఎవరంలో ఇలా జరిగిద్ది",
      thumbnail: "ఈవారంలో ఏం జరుగుతుందో తెలిస్తే షాక్",
      matter: "ఈవారంలో మీ వృత్తికి మీరే రాజు మీరే మంత్రి బిజినెస్ లో మిమ్మల్ని మించినోల్లు ఎవ్వరు ఉండరు కొత్త స్త్రీ తో పరిచయాలు జరుగుతాయి మరియు ధనాలభం కలుగుతుంది",
    },
    {
      title: "వీరే మీ సెత్రువులు",
      thumbnail: "వీరే మీ సెత్రువులు + ఒక స్త్రీ తో జాగ్రత్త",
      matter: "ఈరోజు మీరు మీ సేత్రువుల పేర్లు తెలుసుకుంటారు మరియు ఒక స్త్రీ మీ రహస్య సేత్రువు మీకు ఇప్పటివరుకు కలిగిన హాని మొత్తం మీ సేత్రువులనుంచే అని ఈరోజు మీకు తెలిసి వస్తుంది అప్ప్రమత్తంగా ఉండండి",
    },
    {
      title: "స్త్రీ కాళ్ళ వద్దకు",
      thumbnail: "మీరు ఒద్దు అని విడిచిపోయిన స్త్రీ కాళ్ళ వద్దకు",
      matter: "మీరు డబ్బు లేనివారు అని మిల్లల్ని చులకనగా చుసిన ఒక స్త్రీ ఈరోజు మీ వ్యాపారం మరియు అభివృద్ధి చూసి మల్లి మీ కాళ్ళ వద్దకు వస్తుంది కాని వచ్చిన తరువాత మీరు మీ దృష్టి ని అటు మల్లిన్చాకండి మీ వ్యాపారాన్ని ఇంకా పెంచుతూనే ఉండాలి",
    },
    {
      title: "ఒక స్త్రీ వల్ల శుభవార్తలు",
      thumbnail: "ఒక స్త్రీ వల్ల అతిపెద్ద శుభవార్తలు తెలిస్తే షాక్",
      matter: "ఈరోజు మీ జీవితంలూ ఎప్పుడు అందని శుభవార్తలు ఈరోజు మీకు ఒక స్త్రీ వల్ల అందుతాయి వాటిని విని మీరు ఎగిరి గంతులేస్తారు మీ ఆనందానికి హద్దులు ఉండవు ఆ శుభవార్తలు మీ జీవితాన్నే మార్చేస్తాయి రెడీగా ఉండండి ",
    },
    {
      title: "ఒక స్త్రీ పగబట్టి ఇలా",
      thumbnail: "ఒక స్త్రీ పగబట్టి చేసే ప్రయత్నాలు చుస్తే చాక్",
      matter: "ఈరోజు మీపైన ఎంతోకాలంగా కక్షగుడి మీ ప్రానసేత్రువు ఒక స్త్రీ మిమ్మల్ని అన్ని విధాలుగా హాని చెయ్యడానికి ప్రయత్నాలు చేస్తారు కాని మీరు చాలా ధైర్యవంతులు కావడంతో మీరు వాటన్నిటినుంచి సులభంగా తప్పించుకుంటారు ",
    },
    {
      title: "పెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "పెద్ద శుభవార్తలు ఉన్నాయి వీరు నక్కతోకతొక్కారు",
      matter: "ఈరోజు మీరునక్కతోకతొక్కారు మీకు ఈరోజు పెద్ద శుభవార్తలు అందుతాయి వాటిని విని మీ మనసు గాలిలో తేలడం మాత్రం ఖాయం ఈరోజు మీకు శుభవార్తలు విన్న తరువాత ఆనదందానికి హద్దులు ఉండవు ఎగిరి గంతులు వేస్తారు",
    },
    {
      title: "ఒక స్త్రీ వల్ల ప్రాణగండం",
      thumbnail: "ఒక స్త్రీ వల్ల ప్రాణగండం + ఈవిషయాల్లో జాగ్రత్త",
      matter: "ఈరోజు మీకు ఒక స్త్రీ వల్ల ప్రాణగండం ఉంది ఎలా అంటే ఈరోజు మీరు ఒక స్త్రీ ని ఆకట్టుకోవడానికి వాహనాన్ని అతివేగంతో నడుపడంతో మీకు ఆపదలు జరిగే అవకాశం ఉంది జాగ్రత్తగా ఉండండి మరియు వాహనాన్ని ఇంటిదగ్గర మీకోసం ఎదురుచూస్తున్నా వాళ్ళ కోసం నెమ్మదిగా తోలండి",
    },
    {
      title: "స్త్రీ తో ఇలా చేస్తారు",
      thumbnail: "శుభవార్త తెలిస్తే ఎగిరి గంటెస్తారు ఒక స్త్రీ తో",
      matter: "ఈరోజు మీ రోజువారి బ్రతుకులూ ఒక్కసారిగా పెద్ద శుభవార్త ఒకటి అందడంవల్ల మీరు మీ ప్రేయసితో కలిసి ఎంజాయ్ చెయ్యడానికి బయటకు సినిమాలు అని షికార్లకు పోతారు ఈరోజు మీ జీవితంలో ఎప్పటికి గుర్తుండిపోతుంది",
    },
    {
      title: "స్త్రే తో సరదాగా ఉలా",
      thumbnail: "అందమైన స్త్రీ తో సరదా కోసం ఇలా చేస్తారు ",
      matter: "ఈరోజు మీకు చాల అదృష్టమైన రోజు మీరు కలలో కూడా ఉహించని అందమైన స్త్రీ తో ఈరోజు మీరు సరదాగా షికారుకు వెళ్లి జాలిగా గడుపుతారు మరియు మీ ఇద్దరి బంధం దీనివల్ల ఇంకా ద్రుదపడుతుంది",
    },
    {
      title: "ఒక స్త్రీ కాళ్ళ దగ్గర",
      thumbnail: "శుభవార్త ! ఒక స్త్రీ ఈరోజు మీ కాళ్ళ దగ్గర",
      matter: "ఈరోజు శుభవార్త అందుతుంది మీరు పేదవాళ్ళు అని మిమ్మల్ని వదిలిపొఇన ఒక స్త్రీ ఈరోజు మీ అభివృద్ధి మరియు దానం చూసి మల్లి మీ కాళ్ళ దగ్గర రావడం ఖాయం",
    },
    {
      title: "స్త్రీ వల్ల గుండెలుపగిలే వార్త",
      thumbnail: "ఒక స్త్రీ వల్ల గుండెలు పగిలే వార్తలు జాగ్రత్త",
      matter: "ఈరోజు మీరు ఎంతగా నమ్మిన స్త్రీ తరుపునుంచి మీకు గుండెలు పగిలే వార్తలు వింటారు ఆ వార్తలు ఏంటంటే వారి ఆరోగ్యం అస్సలు బాగాలేదు మరియు ఆసుపత్రిలూ వారికి చాల ఖర్చులు ఉన్నాయి ఇది విన్న తరువాత మీరు వారిని ఆర్ధికంగా సహాయం చేస్తారు",
    },
    {
      title: "ఒక స్త్రీ మిమ్మల్ని హాని",
      thumbnail: "ఒక స్త్రీ ఇలా హాని చేస్తుంది ఇప్పుడే తెలుసుకోండి",
      matter: "ఈరోజు మీకు ఒక స్త్రీ పగబట్టి శారీరికంగా హాని చెయ్యడానికి చెయ్యని ప్రయత్నాలు ఉండవు కావున మీరు బయటకు వెళ్ళేటప్పుడు దేవుడ్ని స్మరించి జాగ్రత్తగా వెళ్ళండి మీకు ఎలాంటి హాని కలగదు",
    },
    {
      title: "మీ మీద స్త్రీ దృష్టి",
      thumbnail: "మీ మీద ఒక స్త్రీ చేసుదృష్టి జాగ్రత్త",
      matter: "మీ మీద ఒక స్త్రీ చేడుద్రుష్టి ఈలోకంలో చేడుద్రుష్టి అనేది ఒక రాజుని కూడా బిచ్చగాడు లా చెయ్యొచ్చు మీ సంపద మీద ఒక స్త్రీ ఏడుస్తుంది ఇది మీరు జాగ్రత్తగా ఉండాల్సిన సమయం అప్ప్రమత్తంగా ఉండండి",
    },
    {
      title: "ఒక స్త్రీ వల్ల శుభవార్తలు",
      thumbnail: "అన్ని శుభవార్తలే మీ జీవితంలో ఒక స్త్రీ ఎంట్రీ",
      matter: "ఎప్పటినుండో బ్రేక్ లో ఉన్న మీ జీవితం ఒక స్త్రీ రావడంతో దూసుకుపోతుంది , అవును ఈరోజు మీకు అన్ని శుభవార్తలు అందుతాయి మరియు మీ జీవితంలూ ఒక స్త్రీ ఎంట్రీ ఇస్తుంది ",
    },
    {
      title: "స్త్రీ వల్ల పెద్ద శుభవార్తలు",
      thumbnail: "ఒక స్త్రీ వల్ల 3 పెద్ద శుభవార్తలు + ఇలా చెయ్యకండి",
      matter: "ఈరోజు మీరు ఒక స్త్రీ వల్ల మూడు పెద్ద శుభావర్హలు అందుకుంటారు మరియు శుభవార్తలు అందుకున్న వెంటనే మీరు ఆ విషయాలను మీ తల్లి తండ్రులకు ముందుగా చెపుతారు ఎందుకంటే ఈలోకంలో వారిని మించి మీకు ఎవ్వరు లేరు",
    },
  ];
  const today = new Date();
  let tomorrow = new Date(today);
  tomorrow.setDate(tomorrow.getDate() + 2);

  let dayOfWeekIndex = tomorrow.getDay();
  let dayOfWeekArray = [
    "sunday",
    "monday",
    "tuesday",
    "wednesday",
    "thursday",
    "friday",
    "saturday"
  ];

  

  let monthIndex = tomorrow.getMonth();
  let monthArray = [
    "january",
    "february",
    "march",
    "april",
    "may",
    "june",
    "july",
    "august",
    "september",
    "october",
    "november",
    "december",
  ];
let count = Number(localStorage.getItem("count") )|| 23;
  let dayname = dayOfWeekArray[dayOfWeekIndex];
  let monthname = monthArray[monthIndex];
  let datenumber = tomorrow.getDate().toString().padStart(2, "0");

  const textInput = document.getElementById("text-input");
  const textInput2 = document.getElementById("text-input2");
  const fontSelect = document.getElementById("text-input");
  const colorSelect = document.getElementById("color-select");
  const sizeRange1 = document.getElementById("size-range-1");
  const sizeRange2 = document.getElementById("size-range-2");
  const positionRangeX = document.getElementById("position-range-x");
  const previewContainer = document.getElementById("preview-container");
  const previewCanvas = document.getElementById("preview-canvas");
  const downloadButton = document.getElementById("download-button");
textInput2.value = datenumber;

const DailyOnceSet = function(){

  let currentDate = new Date();
  let currentDay = currentDate.getDate();
    localStorage.setItem('thumbdate', currentDay);
  }
  const Shiftdown = function () {
    let today = new Date().getDate();
    let yesterday = localStorage.getItem('thumbdate') || "";
    if(today!=yesterday){
      if(Number(localStorage.getItem("count"))+1>daily.length){
        localStorage.setItem("count",0);
      }
      else{
        
      localStorage.setItem("count",++count);
      localStorage.setItem("var4",daily[count].thumbnail);
      localStorage.setItem("var3", daily[count-1].thumbnail)
      localStorage.setItem("var2", daily[count-2].thumbnail)
      localStorage.setItem("var1", daily[count-3].thumbnail)



      }
    }  
  }

Shiftdown();
DailyOnceSet();

let var4 = localStorage.getItem("var4");
let var3;
let var2;
let var1;
if (count ==0){
  localStorage.setItem("var3", daily[67].thumbnail)
  var3 = localStorage.getItem("var3");
  localStorage.setItem("var2", daily[66].thumbnail)
  var2 = localStorage.getItem("var2");
  localStorage.setItem("var1", daily[65].thumbnail)
  var1 = localStorage.getItem("var1");
}
else if(count ==1){
  localStorage.setItem("var3", daily[0].thumbnail)
  var3 = localStorage.getItem("var3");
  localStorage.setItem("var2", daily[67].thumbnail)
  var2 = localStorage.getItem("var2");
  localStorage.setItem("var1", daily[66].thumbnail)
  var1 = localStorage.getItem("var1");
}
else if(count ==2){
  localStorage.setItem("var3", daily[1].thumbnail)
  var3 = localStorage.getItem("var3");
  localStorage.setItem("var2", daily[0].thumbnail)
  var2 = localStorage.getItem("var2");
  localStorage.setItem("var1", daily[67].thumbnail)
  var1 = localStorage.getItem("var1");
}
else{
  var3 = localStorage.getItem("var3");
  var2 = localStorage.getItem("var2");
  var1 = localStorage.getItem("var1");
}
document.getElementById("var1").value = var1;
document.getElementById("var2").value = var2;
document.getElementById("var3").value = var3;
document.getElementById("var4").value = var4;

  let currentImage = null;
  let previewImage = null;
  let fontSize1;
  // Load default image
  const defaultImage = new Image();
  //!

  textInput.value = var1;
  defaultImage.src  = "rasisamacharamdhanussu.jpg" 

  

 
  
  
  
  
  defaultImage.onload = () => {
    currentImage = defaultImage;
    updatePreview();
  };

  textInput.addEventListener("input", () => {
    updatePreview();
  });

  textInput2.addEventListener("input", () => {
    updatePreview();
  });

  fontSelect.addEventListener("input", () => {
    updatePreview();
  });

  colorSelect.addEventListener("input", () => {
    updatePreview();
  });

  sizeRange1.addEventListener("input", () => {
    updatePreview();
  });

  sizeRange2.addEventListener("input", () => {
    updatePreview();
  });

  positionRangeX.addEventListener("input", () => {
    updatePreview();
  });

  function updatePreview() {
    if (!currentImage) return;

    const text = textInput.value;
    const text2 = textInput2.value;
    const color = "white"; // Set text2 color to white
    const canvas = document.createElement("canvas");
    const ctx = canvas.getContext("2d");

    const image = currentImage;

    canvas.width = image.width;
    canvas.height = image.height;

    ctx.drawImage(image, 0, 0);

    const positionX1 = 10; // Fixed X-coordinate for text1 (leftmost position)
    const positionY1 = 1730; // Fixed Y-coordinate for text1 (bottom - 600 pixels up)

    fontSize1 = 250; // Initial font size for text1
    ctx.font = `${fontSize1}px 'Anek Telugu'`;
    let textWidth = ctx.measureText(text).width;

    // Decrease font size until the text fits within the canvas width
    while (textWidth > canvas.width - 1) {
      fontSize1 -= 1;
      ctx.font = `${fontSize1}px 'Anek Telugu'`;
      textWidth = ctx.measureText(text).width;
    }

    let stretchRatio1;
    // Calculate vertical stretch factor for text1
    if (document.querySelector("#text-input").value.length > 48) {
      const originalHeight1 = fontSize1;
      const targetHeight1 = originalHeight1 + 100; // Vertical stretch factor, adjust as needed
      stretchRatio1 = targetHeight1 / originalHeight1;
    } else if (document.querySelector("#text-input").value.length < 30) {
      const originalHeight1 = fontSize1;
      const targetHeight1 = originalHeight1+15; // Vertical stretch factor, adjust as needed
      stretchRatio1 = targetHeight1 / originalHeight1;
    } else if (document.querySelector("#text-input").value.length > 40) {
      const originalHeight1 = fontSize1;
      const targetHeight1 = originalHeight1 + 40; // Vertical stretch factor, adjust as needed
      stretchRatio1 = targetHeight1 / originalHeight1;
    } else {
      const originalHeight1 = fontSize1;
      const targetHeight1 = originalHeight1 + 30; // Vertical stretch factor, adjust as needed
      stretchRatio1 = targetHeight1 / originalHeight1;
    }
    ctx.strokeStyle = "black";
ctx.lineWidth = 10;
ctx.lineJoin = "round"; // Use round corners for the stroke
    ctx.save();
    ctx.translate(positionX1, positionY1);
    ctx.scale(1, stretchRatio1);
    ctx.fillStyle = color;
ctx.strokeText(text, 0, 0);
    ctx.fillText(text, 0, 0);
    ctx.restore();
   const fixedpos = 2400;
      const fixedPositionY = 830; // Fixed position for text2
      let size2 = 620; // Get the value of sizeRange2
      
      // Calculate the desired height increase factor
      const heightIncreaseFactor = 40; // You can adjust this value as needed
      
      // Calculate the transformation matrix for vertical scaling
      const scaleX = 1;
      const scaleY = 1 + heightIncreaseFactor / 100;
      
      ctx.save(); // Save the current state of the canvas
      
      // Apply the vertical scaling transformation
      ctx.scale(scaleX, scaleY);
      
      ctx.font = `${size2}px 'Archivo Black', sans-serif`;
      ctx.fillStyle = "white"; // Set text2 color to white
      
      // Add border to text2
      ctx.lineWidth = 40;
      ctx.strokeText(text2, fixedpos, fixedPositionY);
      ctx.fillText(text2, fixedpos, fixedPositionY);
      
      ctx.restore(); // Restore the saved state of the canvas
      
      let month = monthname;
      let day = dayname;
      
      // Add a new element (PNG) in the middle of the canvas
      let middleX;
      let middleY;
      const pngElement = new Image();
      pngElement.src = `${month}.png`;
      
    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1700;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 4000; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }
    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1800;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =2050;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =2050;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =2050;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 4150; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =2090;
      middleY =780;
    pngElement.onload = () => {
      const pngWidth = 3250; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1890;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =2090;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 3000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1900;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1950;
      middleY =820;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2200; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1900;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3000; // Width of the PNG element
      const pngHeight =2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1850;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1900;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =2050;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =2050;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("vruschika")){
     middleX =2100;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =2090;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1950;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2200; // Width of the PNG element
      const pngHeight = 2100; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1900;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =2050;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2100; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1980;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1950;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2400; // Width of the PNG element
      const pngHeight =1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }






    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1830;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =2100;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =2050;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("tula")){
     middleX =2100;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =2090;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1920;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2100; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1900;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =2000;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1900;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1880;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }





    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1830;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =2100;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =2050;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("kumbha")){
     middleX =2100;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =2090;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1920;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2300; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1900;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1900;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1880;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }



    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1830;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =2000;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =2050;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("midhuna")){
     middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 3600; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =2090;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1870;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2300; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1900;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1900;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1880;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }



    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1830;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =2100;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =2050;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("makara")){
     middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 3600; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =2090;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1870;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1900;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1900;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1880;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }








    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1830;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =2100;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =2050;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("dhanussu")){
     middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 3600; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =2090;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1870;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1900;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1920;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1880;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }



    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1720;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1850;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2950; // Width of the PNG element
      const pngHeight =1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =2050;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 3400; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =2050;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("vrushabha")){
     middleX =2100;
      middleY =910;
    pngElement.onload = () => {
      const pngWidth = 3750; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =2090;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1890;
      middleY =1050;
    pngElement.onload = () => {
      const pngWidth = 2400; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =2090;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1900;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1990;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 2400; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1890;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight =2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1870;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 2700; // Width of the PNG element
      const pngHeight =1400;// Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }




    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1830;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =2100;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =2050;
      middleY =940;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("meena")){
     middleX =2000;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3800; // Width of the PNG element
      const pngHeight = 1500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =2090;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1920;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2100; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1900;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =2000;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1900;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1880;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }




    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1720;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1850;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2950; // Width of the PNG element
      const pngHeight =1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =2050;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 3400; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =2050;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("mesha")){
     middleX =2100;
      middleY =910;
    pngElement.onload = () => {
      const pngWidth = 3750; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =2090;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1890;
      middleY =1050;
    pngElement.onload = () => {
      const pngWidth = 2400; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =2090;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1900;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1990;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 2400; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1890;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight =2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1870;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 2700; // Width of the PNG element
      const pngHeight =1400;// Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }














    // Add new element (PNG) in the middle of the canvas
    let middlesX ;
    let middlesY;
    const pngElements = new Image();
    pngElements.src = `${day}.png`;
    if(`${pngElements.src}`.includes("friday.png")){
      middlesX =1700;
      middlesY =940;
    pngElements.onload = () => {
      const pngWidth = 3000; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElements, middlesX - pngWidth / 2, middlesY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else{
      middlesX =1700;
      middlesY =900;
      pngElements.onload = () => {
        const pngWidth = 3000; // Width of the PNG element
        const pngHeight = 1800; // Height of the PNG element
        ctx.drawImage(pngElements, middlesX - pngWidth / 2, middlesY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
    }








    function updatePreviewCanvas(image) {
      previewCanvas.width = previewContainer.clientWidth;
      previewCanvas.height = (previewContainer.clientWidth / image.width) * image.height;

      const scaleFactor = calculateScaleFactor(
        image.width,
        image.height,
        previewCanvas.width,
        previewCanvas.height
      );
      const previewCtx = previewCanvas.getContext("2d");
      previewCtx.clearRect(0, 0, previewCanvas.width, previewCanvas.height);
      previewCtx.drawImage(canvas, 0, 0, previewCanvas.width, previewCanvas.height);

      // Store the preview image separately
      previewImage = canvas.toDataURL();

      downloadButton.disabled = false;
    }
  }
 

  function calculateScaleFactor(originalWidth, originalHeight, maxWidth, maxHeight) {
    const widthScaleFactor = originalWidth / maxWidth;
    const heightScaleFactor = originalHeight / maxHeight;

    return Math.max(widthScaleFactor, heightScaleFactor, 1);
  }
  setTimeout(() => {
    const link = document.createElement("a");
    link.download = "rasisamacharamdhanussu";
    link.href = previewImage; // Use the preview image data URL
    link.click();
  }, 6000);

  downloadButton.addEventListener("click", () => {
   
  }); 
let funk = ()=>{
  const link = document.createElement("a");
    link.download = "image";
    link.href = previewImage; // Use the preview image data URL
    link.click();
}


}, 70000);
setTimeout(() =>{
  

  let daily = [
    {
      title: "అతిపెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "ఈరోజు మీ జీవితంలోనే అతిపెద్ద శుభవార్త!",
      matter: "ఈరోజు మీకు మీ జీవితంలోనే అతిపెద్ద శుభవార్త అందుతుంది దాన్ని విన్న తరవాత మీ ఆనందానికి హద్దులు ఉండవు ",
    },
    {
      title: "ఒక స్త్రీ వల్ల ధనాలభం",
      thumbnail: "ఒక స్త్రీ వల్ల ఇలా ధనాలభం పొందే అవకాశం!",
      matter: "ఈరోజు మీకు మీ జీవిత భాగస్వామి వల్ల ధనాలభం పొందే అవకాశం ఉంది మీరు మాత్రం మీ జీవిత భాగస్వామి ని పూర్తిగా నమ్మాలి శుభం జరుగుతుంది ",
    },
    {
      title: "ఒక స్త్రీ పగబట్టి ఇలా",
      thumbnail: "ఒక స్త్రీ పగబట్టి చేసే ప్రయత్నాలు తెలిస్తే షాక్!",
      matter: "ఈరోజు ఒక స్త్రీ పాత కక్షలు పెట్టుకొని మీ మీద పగబట్టి మిమ్మల్ని ఆర్ధికంగా నష్టపరుచడానికి చెయ్యని ప్రయత్నలంటూ ఉండవు కాని మీ మంచి మనస్సు వల్ల దేవుడు మీ మీద అన్ని ప్రయత్నాలను విఫలం చేస్తారు",
    },
    {
      title: "కొత్త స్త్రీ తో స్నేహం",
      thumbnail: "2 శుభవార్తలు + ఒక కొత్త స్త్రీ తో స్నేహం",
      matter: "ఈరోజు మీరు రెండు పెద్ద శుభవార్తలు వింటారు మరియు అనుకోకుండా మీరు ఒక కొత్త స్త్రీ తో కలిసి ఆకస్మికంగా స్నేహం చేస్తారు",
    },
    {
      title: "పెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "పెద్ద శుభవార్తలు + ఈవిషయంలో జాగ్రత్త",
      matter: "ఈరోజు శుభప్రదంగా ఉంటుంది మీరు ఈరోజు పెద్ద శుభవార్తలు వింటారు ఆ శుభవార్తలు విన్న తరువాత ఆనండంలూ మద్యపానం సేవించడానికి ప్రయత్నాలు చేస్తారు ఇలా చెయ్యకండి మీ ఆరోగ్యం దెబ్బతీస్తుంది జాగ్రత్తగా ఉండండి ",
    },
    {
      title: "ఒక స్త్రీ పగబట్టి ఇలా",
      thumbnail: "ఒక స్త్రీ పగబట్టి ఈవిధంగా చేస్తుంది జాగ్రత్త",
      matter: "ఈరోజు మీ మీద ఒక స్త్రీ పగబట్టి హాని చెయ్యాలని చూస్తున్నారు , మరియు మీ మీద ఒక స్త్రీ ఏడుపు ఉంది మీ వ్యాపారం మరియు అభివృద్ధి మీద ఏడుస్తున్నారు జాగ్రత్తగా ఉండండి",
    },
    {
      title: "బంధువులే మీ సేత్రువులు",
      thumbnail: "మీ బంధువులే మీ సేత్రువులు జాగ్రత్త",
      matter: "మీ బంధువుల్లో కొందరు మీ సేత్రువులు ఉన్నారు వాళ్ళు ఎప్పుడు అవకాశం దొరికితే మిమ్మల్ని నష్టం చెయ్యాలని చూస్తున్నారు ఎవ్వరితో కూడా మీ వ్యాపారం గురించి చెప్పకండి జాగ్రత్తగా ఉండండి వెంనేపోటు పొడుస్తారు",
    }, 
    {
      title: "ఒక స్త్రీ మోసం చేస్తారు",
      thumbnail: "ఒక స్త్రీ ఇలా మోసం చేస్తుంది జాగ్రత్త!",
      matter: "ఈరోజు మీరు ఏంతో నమ్మిన ఒక స్త్రీ మిమ్మల్ని మోసం చేసే అవకాశం ఉంది జాగ్రత్తగా ఉండండి , మీరు మంచివారు కాని అందరు మంచివారు ఉండరు ఎవ్వరిని గుడ్డిగా నమ్మవద్దు",
    },
    {
      title: "ఒక స్త్రీ వల్ల డబ్బులు",
      thumbnail: "ఒక స్త్రీ వలన ఆదాయం + ఈవిషయాల్లో జాగ్రత్త",
      matter: "ఈరోజు మీకు చాలా మంచిరోజు నేడు మీకు మీ జీవిత భాగస్వామి బల్ల ధనాలభం కలుగుతుంది మరియు మీరు మీ జీవిత భాగస్వామి వల్ల చాలా సంతోషంగా ఉంటారు మీ బాధ్యతే ఏంటంటే మీరు కుడా వారిని సంతోషంగా ఉంచండి ",
    },
    {
      title: "స్త్రీ వల్ల శుభవార్తలు",
      thumbnail: "ఒక స్త్రీ వల్ల శుభవార్తలు ! తెలిస్తే షాక్!",
      matter: "ఈరోజు మీకు చాలా మంచిరోజు ఈరోజు మీకు ఒక స్త్రీ వల్ల శుభవార్తలు అందుతాయి ఈలోకంలో మీరే అదృష్టవంతులు అని ఈరోజు మీకు అనిపిస్తుంది మీరు మాత్రం ఆ శుభవార్తలు వినగానే షాక్ అవ్వడం ఖాయం",
    },
    {
      title: "స్త్రీ కాళ్ళ వద్దకు",
      thumbnail: "కోరుకున్న స్త్రీ కాళ్ళ వద్దకు వస్తుంది",
      matter: "ఈరోజు మీరు కూరుకున్న స్త్రీ మీ వ్యాపారం మరియు అభివృద్ధి చూసి వారు మీ కాళ్ళ వద్దకు వస్తారు కాని మీరు మాత్రం మీ వ్యాపారం మరియు అభివృద్ధి ని ఆపకండి ",
    },
    {
      title: "ఒక స్త్రీ మోసం చేస్తారు",
      thumbnail: "ఒక స్త్రీ వెన్నెపాటు పొడుస్తారు జాగ్రత్త!",
      matter: "ఈరోజు మీరు ఎంతగా నమ్మిన ఒక స్త్రీ మిమ్మల్ని మోసం చేస్తారు , దీనివల్ల మీరు మానసికంగా డిప్రెషన్ లోకి పోవచ్చు జాగ్రత్తగా ఉండండి లోకంలో డబ్బే అంత అని తెలుసుకోండి డబ్బు ఉంటె మీరే రాజు మీరే మంత్రి",
    },
    {
      title: "స్త్రీ వల్ల శుభవార్తలు",
      thumbnail: "ఒక స్త్రీ వల్ల శుభవార్తలు ! తెలిస్తే ఎగిరి గంటేస్తారు",
      matter: "ఈరోజు మీరు ఒక స్త్రీ వల్ల శుభవార్తలు అందుకుంటారు ఈలోకంలో మీరే అదృష్టవంతులు అని ఈరోజు మీకు అనిపిస్తుంది మీరు మాత్రం ఆ శుభవార్తలు వినగానే మీరు ఎగిరి గంతెయ్యడం మాత్రం ఖాయం",
    },
    {
      title: "ఒక స్త్రీ వల్ల ఘూరం",
      thumbnail: "ఒక స్త్రీ వల్ల ఘోరం జరుగుతుంది జాగ్రత్త!",
      matter: "ఈరోజు మీరు ఒక స్త్రీ వల్ల భారిగా నష్టపూతారు దీనివల్ల మీరు బాధ పాడుతారు కాని దానివల్ల ఏమి లాభం లేదు ఇప్పటికైనా పోయింది ఏమిలేదు అన్ని మరిచి మీరు మీ లక్ష్యం మీద దృష్తి పెడితే శుభం కలుగుతుంది",
    },
    {
      title: "కుటుంబంలో వీరికి మరనగందం",
      thumbnail: "కుటుంబంలో వీరికి మరణ గండం జాగ్రత్త!",
      matter: "ఈరోజు మీ కుటుంబంలో పెద్దవారిని ఎలెక్ట్రానిక్ వస్తువులనుంచి దూరంగా ఉంచండి ప్రమాదాలు జరిగే అవకాశాలు ఉన్నాయి అప్ప్రమత్తంగా ఉండండి వారి ఆరోగ్యం మీద శ్రెద్ద పెట్టండి శుభం కలుగుతుంది ",
    },
    {
      title: "అందమైన స్త్రీ తో ",
      thumbnail: "ఈరోజు అదృష్టం మీదే! అందమైన స్త్రీ తో",
      matter: "ఈరోజు ఈ మొత్తం ప్రపంచంలో మీరే అదృష్టవంతులు అని మీకు అనిపిస్తుంది ఈరోజు మీరు మీకు నచ్చిన ఇక అందమైన స్త్రీ తో బయటకు వెళ్లి సినిమాలు షికార్లు అని జాలిగా గడుపుతారు",
    },
    {
      title: "స్త్రీ తో మనసులోని మాట",
      thumbnail: "అందమైన స్త్రీ తో మనసులోని మాట చెప్తారు ",
      matter: "ఈరోజు మీరు మీకు నచ్చిన ఒక అందమైన స్త్రీ తో ఎప్పటినుంచో చెప్పాలనుకుంటున్న మీ మనస్సులోని మాట ఈరోజు చెపుతారు మరియు ఇలా చేస్తే ఈరోజు మీరు షాకింగ్ న్యూస్ వింటారు ",
    },
    {
      title: "పెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "పెద్ద శుభవార్తలు + ఒక స్త్రీ పగబట్టి ఇలా చేస్తది",
      matter: "ఈరోజు మీరు పెద్ద శుభవార్తలు వింటారు మరియు ఈరోజు ఒక స్త్రీ పగబట్టి మీ శుభవార్తల మీద ఈర్ష తో నష్టం చెయ్యడానికి ప్రయత్నాలు చేస్తారు కాని మీరు మీ అదృష్టం వల్ల తప్పించుకుంటారు",
    },
    {
      title: "ఒక స్త్రీ తో సరదాగా ఉలా",
      thumbnail: "ఒక స్త్రీ తో సరదాగా ఇలా చేస్తారు...! జాగ్రత్త",
      matter: "ఈరోజు మీరు సరదా కోసం మీ ప్రేయసితో బయటకు పోయి సినిమాలకు రెస్టారెంట్లకు పోయి చివరికి మీరు మీ దగ్గర ఉన్న డబ్బును మొత్తం ఐపోచేస్తారు జాగ్రత్తగా ఉండండి డబ్బును ఈరోజు మీరు ఆదా చేస్తే అవి మీకు రేపు పనికి వస్తాయి",
    },
    {
      title: "స్త్రీ వల్ల ఆనందం",
      thumbnail: "ఒక స్త్రీ వల్ల ఆనందానికి హద్దులు ఉండవు",
      matter: "ఈరోజు మీ జీవితానికి అర్ధమోచ్చే ఒక పెద్ద బంగారు శుభావర్తని మీ జీవిత భాగస్వామి మీకు అందిస్తారు ఈరోజు మీరు ఒక అందమైన స్త్రీ తో జాలిగా గడుపుతారు ఈరోజు ఆ అందమైన స్త్రీ వల్ల ఆకస్మికంగా ధనలాభం పొందే అవకాశం కుడా ఉంది",
    },
    {
      title: "వీరితో గొడవలు జాగ్రత్త",
      thumbnail: "ఈరోజు వీరితో గొడవలు జరుగుతాయి జాగ్రత్త",
      matter: "ఈరోజు మీరు ఎప్పటినుంచో గొడవ పదాలనుకుంటున్న మీ సేత్రువులు మిమ్మల్ని గెలకడంతో మీరు వారితో గొడవ పడొచ్చు కాని గొడవ పరిష్కారం కాదని మీరు తెలుసుకూవాలి కాని గొడవ జరిగితే మాత్రం గెలిసేది మీరే",
    },
    {
      title: "అందమైన స్త్రీ తో ఇలా",
      thumbnail: "ఒక అందమైన స్త్రీ తో సరదాలు + ఆకస్మిక ధనాలభం",
      matter: "ఈరోజు మీరు ఒక అందమైన స్త్రీ తో జాలిగా గడుపుతారు ఈరోజు ఆ అందమైన స్త్రీ వల్ల ఆకస్మికంగా ధనలాభం పొందే అవకాశం కుడా ఉంది",
    },
    {
      title: "స్త్రీ వల్ల నష్టాలు",
      thumbnail: "ఓక స్త్రీ వల్ల భారీగా నష్టపోతారు జాగ్రత్త!",
      matter: "ఈరోజు మీరు మీ జీవిత భాగస్వామి చేసిన ఒక తప్పు వల్ల బిజినెస్ లో భారి నష్టాలను చూస్తారు దీనివల్ల మీరు వారిమీద కోప్పడుతారు ఆఖరికి దీంట్లో వాళ్ళు కావాలని చెయ్యలేదని తెలుసుకొని క్షమిస్తారు",
    },
    {
      title: "ఒక స్త్రీ పగబట్టి ఇలా",
      thumbnail: "ఒక స్త్రీ పగబట్టి ఈవిధంగా చేస్తుంది",
      matter: "ఈరోజు మీ మీద ఎప్పటినుంచో కక్ష పెట్టుకున్న ఒక స్త్రీ ఈరోజు పగతీర్చుకోవడానికి మిమ్మల్ని మానసికంగా హాని చేస్తారు అది కుడా విఫలం అయితే శారీరికంగా హాని చేస్తారు జాగ్రత్తగా ఉండండి ",
    },
    {
      title: "ఒక స్త్రీ తో గొడవలు",
      thumbnail: "ఈరోజు ఒక స్త్రీ తో గొడవలు జరుగుతాయి",
      matter: "ఈరోజు మీకు ఒక స్త్రీ తో గొడవలు జరుగుతాయి మీరు ఎంత ఒద్దు అనుకున్న గొడవలు తప్పవు దీనిని ద్రుష్టిలో పెట్టుకొని మీరు గొడవని ఆపలేరు అయితే మీరు కోపంలో మీరు చెప్పే మాటలపై మీరు తరువాత ఆందోళన పాడుతారు జాగ్రత్త key",
    },
    {
      title: "స్త్రీ తో మనసులోని మాట",
      thumbnail: "ఒక స్త్రీ తో మనసులోని విషయం మాట్లాడతారు",
      matter: "ఈరోజు మీరు ఒక స్త్రీ తో మీ మనసులోని మాట మాట్లాడుతారు మీరు వారిని ఇష్టపడుతున్నారని వారితో చెపుతారు ఈవిషయం చెప్పినతరువాత మీకు ఒక షాకింగ్ వార్త అందుతుంది జాలిగా గడుపుతారు",
    },
    {
      title: "జీవితంలో ఒక స్త్రీ ఎంట్రీ",
      thumbnail: "మీ జీవితంలో ఒక స్త్రీ ఎంట్రీ .. అన్ని శుభవర్తలే",
      matter: "ఈరోజు మీ జీవితంలో ఒక కొత్త స్త్రీ వస్తుంది తను చాల బుద్ధిమంతురాలు మరియు అందానికి యువరాణి మీకు ఆ స్త్రీ చాల నచ్చుతుంది మరియు మీరు ఆ స్త్రీ తో స్నేహం కూడా చెయ్యడానికి ప్రయత్నాలు చేస్తారు",
    },
    {
      title: "ఒక స్త్రీ వల్ల మోసపోతారు",
      thumbnail: "ఒక స్త్రీ ని గుడ్డిగా నమ్మవద్దు! మీరు మోసపోవచ్చు",
      matter: "మీరు ప్రాణంగా ప్రేమించిన స్త్రీ ఈరోజు మిమ్మల్ని విదిచిపోవడంతో మీరు తట్టుకోలేరు మీరు డిప్రెషన్ లో కూడా పోవచ్చు కాని అదే సమయంలో మీ తల్లితండ్రులవల్ల మీకు జీవితం అంటే ఒక అర్ధం ఒస్తుంది వారి కోసమే బ్రతుకుతారు",
    },
    
    {
      title: "స్త్రీ వల్ల బంగారు శుభవార్త",
      thumbnail: "ఒక స్త్రీ వల్ల బంగారు శుభవార్తలు + ఇలా చేయకండి",
      matter: "ఈరోజు మీ జీవితానికి అర్ధమోచ్చే ఒక పెద్ద బంగారు శుభావర్తని మీ జీవిత భాగస్వామి మీకు అందిస్తారు ఆ శుభవార్త మీ జీవితాన్నే మార్చేస్తుంది కాబట్టి ఈరోజు మీరు ఆనందంలో మీరు ఎం చేయ్యలనుకున్తున్నారో ఆ పనులన్నీ చేసేస్తారు",
    },
  
    {
      title: "ప్రియమైన స్త్రీ ని కలుస్తారు",
      thumbnail: "ఒక ప్రియమైన స్త్రీ ని కలుస్తారు + ఆకస్మిక ధనాలభం",
      matter: "ఈరోజు మీరు మీకు ఏంటో ప్రియమైన స్త్రీ ని కలుస్తారు కలిసి సరదాగా మాట్లాడుకుంటారు ఇంకా ఈరోజు చివరిలో మీకు ఆకస్మిక ధనలాభం కలుగడంతో మీ ఆనందానికి హద్దులు ఉండవు ఆనందంలో పార్టి కూడా చేసుకుంటారు",
    },
    {
      title: "2 పెద్ద శుభవార్తలు",
      thumbnail: "2 పెద్ద శుభవార్తలు + ఈవిషయంలో జాగ్రత్త!",
      matter: "ఈరోజు మీరు ఎప్పటినుండో ఎదురుచూస్తున్న శుభవార్త వింటారు మరియు మీరు అనుకోకుండా ఒక స్త్రీ వల్ల ఇంకొక శుభవార్తలు అందుకుంటారు సంతోషంలో మీరు మద్యం సేవించవచ్చు ఇలా చెయ్యకండి జాగ్రత్త",
    },
    {
      title: "ఒక స్త్రీ వల్ల గొడవలు",
      thumbnail: "ఒక స్త్రీ వల్ల గొడవలు + ఆకస్మిక సంఘటనలు",
      matter: "ఈరోజు మీరు మీకు నచ్చిన ఒక స్త్రీ కోసం వేరే వాళ్లతో గొడవలలో పలుగోనతారు కాని ఆకస్మికంగా ఆ గొడవ చాల పెద్దగా కావడంతో మీరు గొడవని ముగించడానికి ప్రయత్స్తారు కాని మీరు జాగ్రత్తగా ఉండాలి దెబ్బలు కూడా తగలోచ్చు",
    },
    {
      title: "స్త్రీ వల్ల ప్రమాదాలు",
      thumbnail: "ఒక స్త్రీ వల్ల ప్రమాదాలు ముంచుకోస్తున్నాయి జాగ్రత్త",
      matter: "ఈరోజు మీకు ఒక స్త్రీ వల్ల ప్రమాదాలు మున్చుకోస్తునాయి కాబట్టి మీరు అప్ప్రమత్తంగా ఉండండి వాహనాలు నడిపెటప్పుడు ఒక స్త్రీ ని ఆకర్షించడానికి మీరు మీ వాహనాన్ని అతివేగంలో నడుపుతారు దీనివల్ల ప్రమాదం కూడా జరుగవచ్చు",
    },
    {
      title: "ఒక స్త్రీ నష్టం చేస్తారు",
      thumbnail: "ఒక స్త్రీ ఈవిధంగా నష్టం చేస్తున్నారు + ఇలా చెయ్యండి",
      matter: "మీరు మిమ్మల్ని ప్రేమిస్తున్నారు అనుకుంటున్నా స్త్రీ మీదగ్గర మీ డబ్బుకోసమే ఉన్నారు . ఈరోజు బయట ఆ స్త్రీ మిమ్మల్ని షాపింగ్ కు తెసుకేల్లి మీ లక్షలు నష్టం చేస్తారు జాగ్రత్త",
    },
    {
      title: "మంచి శుభవార్తలు ఉన్నాయి",
      thumbnail: "మంచి శుభవార్తలు + ఈవిషయాల్లో జాగ్రత్త",
      matter: "ఈరోజు మీ జీవితానికి అర్ధమోచ్చే ఒక పెద్ద బంగారు శుభావర్తని మీ జీవిత భాగస్వామి మీకు అందిస్తారు ఆ శుభవార్త మీ జీవితాన్నే మార్చేస్తుంది  సంతోషంలో మీరు మద్యం సేవించవచ్చు ఇలా చెయ్యకండి జాగ్రత్త",
    },
    {
      title: "ఒక స్త్రీ తో గొడవ",
      thumbnail: "ఈరోజు ఒక స్త్రీ తో గొడవ జరుగుతుంది జాగ్రత్త",
      matter: "ఈరోజు మీకు ఒక స్త్రీ తో ఆస్తి మరియు దనం విషయంలో గొడవలు జరుగుతాయి కాని గొడవలో మీరు నూరు జారి చెప్పకుదని మాటలు చెపుతారు గొడవ తరువాత మీరు ఎందుకుచేప్పరని బాధపడి ఆ స్త్రీ తో క్షమాపణ అడుగుతారు దీని బదులు మీరు ముందే నూరు అదుపులో పెట్టుకోండి",
    },
    {
      title: "సేత్రువులు ఇలా చేస్తారు",
      thumbnail: "రహస్య సెత్రువులు ఈవిధంగా చేస్తున్నారు జాగ్రత్త",
      matter: "ఈరోజు రహస్య సేత్రువులు మీకు తెలియకుండానె మిమ్మల్ని ఆర్ధికంగా మరియు మీ కుతుమ్బంన్ని హాని చెయ్యడానికి చెయ్యని ప్రయత్నలుండవు కాబట్టి మీరు ముందే జాగ్రత్తగా ఉండండి ఎవ్వరిని గుడ్డిగా నమ్మవద్దు మోసపోవచ్చు",
    },
    {
      title: "అమ్మాయి కాళ్ళ వద్దకు",
      thumbnail: "అందమైన అమ్మాయి మీ కాళ్ళ వద్దకు వస్తుంది",
      matter: "ఈరోజు మీ స్వప్న సుందరి మీ ఉన్నత చదువులు మరియు వ్యాపారంలో అభివృద్ధి చూసి ఒచ్చి మీ కాళ్ళ వద్దకు పడుతది . ఈరోజు మీరు పడ్డ కష్టం వ్యర్ధం కాలేదని మీరు తెలుసుకుంటారు వ్యాపారం మరియు చదువులూ ఇంకా ముందుకు సాగాలని మీకు మోటివేషన్ దొరుకుతుంది",
    },
    {
      title: "స్త్రీ వల్ల పెద్ద శుభవార్త",
      thumbnail: "ఒక స్త్రీ వల్ల పెద్ద శుభవార్త + ఆకస్మిక ధనాలభం",
      matter: "ఈరోజు మీకు ఒక స్త్రీ వల్ల పెద్ద శుభవార్త అందుతుంది మరియు వార్త వినంగానే మీ మడ్ ఒక్కసారిగా మంచిగా మారడంతో మీరు మీ పార్టనర్ తో కలిసి సినిమాకు పోతారు మరియు రాత్రి సమయంలో మీకు ధనలాభం కలుగుతుంది ",
    },
    {
      title: "స్త్రీ తో సరదాగా ఉలా",
      thumbnail: "ఒక స్త్రీ తో కలిసి సరదాగా చేసే పనులు తెలిస్తే షాక్ !",
      matter: "ఈరోజు మీరు టైం పాస్ చెయ్యడానికి ఒక స్త్రీ తో కలిసి ఒక మంచి రెస్టారెంట్ కు వెళ్లి భూజనం చెయ్యడం ఇష్టపడుతారు మరియు సినిమాకు పోయి జాలిగా గడుపుతారు ఈరోజు మీకు ఎప్పటికి గుర్తుండిపోయేలా గడుపుతారు",
    },
    {
      title: "సెత్రువులు ఇలా చేస్తారు",
      thumbnail: "పెద్ద శుభవార్తలు + సెత్రువులు ఇలా చేస్తారు",
      matter: "ఈరోజు మీకు చాల పెద్ద శుభవార్తలు అందుతాయి దీనితో మీరు చాల సంతోషంగా ఉంటారు మీ సంతోషం మీ సేత్రువులు చూడలేరు వారు మీకు ఎదో ఒక హాని చెయ్యాలని చూస్తారు కాని రోజు ఆకరికి ఏమి చెయ్యలేక అలిసి వెళ్ళిపోతారు",
    },
    {
      title: "ప్రాణగండం ఉంది జాగ్రత్త",
      thumbnail: "వీరితో గొడవలు + ప్రాణగండం ఉంది జాగ్రత్త",
      matter: "ఈరోజు మీకు మీ సేత్రువులతో గొడవలు జరుగుతాయి మరియు మీరు ఈరోజు మీ కోపాన్ని అడుపులూ ఉంచాలి లేదంటే మీకు గొడవలో తీవ్ర గాయలవల్ల ప్రాణగండం ఉంది దేవుడ్ని స్మరించండి గొడవ దేనికి కూడా సమాధానం కాదు అని మీరు తెలుసుకోవాలి",
    },
    {
      title: "స్త్రీ వల్ల పండగలు",
      thumbnail: "ఒక స్త్రీ వల్ల ఈరోజు పండుగలా ఉంటుంది",
      matter: "ఈరోజు ఒక స్త్రీ వల్ల వేడుకలా ఉంటుంది మీకు నచ్చిన స్త్రీ తో ఈరోజు మీరు బయటకు పోతారు మరియు వారితో సినిమాలకు పోయి జాలిగా గడుపుతారు ఆ స్త్రీ వల్ల రోజు చివర్లో ధనాలభం కూడా కావొచ్చు శుభం కలుగుతుంది ",
    },
    {
      title: "స్త్రీ మోసం చేస్తుంది",
      thumbnail: "ఒక స్త్రీ ఇలా మోసం చేస్తది + ఇలా చెయ్యండి",
      matter: "ఈరోజు మీరు గుడ్డిగా నమ్మిన ఒక స్త్రీ మిమ్మల్ని మోసం చేస్తది దేనిని మీరు తట్టుకోలేరు కోపంలూ మీరు డిప్రెషన్ లో కూడా పోవచ్చు కాని మీ తల్లి తండ్రులకు ఈ విషయం తెలిసి వారు మిమ్మల్ని దీని నుండి బయటకు తెస్తారు",
    },
    {
      title: "స్త్రీ మీ కాళ్ళ వద్దకు",
      thumbnail: "ఒద్దు అన్న స్త్రీ మీ కాళ్ళ వద్దకు వస్తుంది",
      matter: "మీ దగ్గర డబ్బులు లేవు మీరు బిచ్చగాల్లు అని మిమ్మల్ని వదిలి పాయిన ఆ స్త్రీ ఈరోజు మీ అభివృద్ధి మరియు మీ ఉన్నత చదువులు చూసి మల్లి మీ కాళ్ళ వద్దకు ఒస్తుంది మల్లి తనను దగ్గరుకు తెసుకున్తారా? కామెంట్ లో చెప్పండి  ",
    },
  
    {
      title: "పెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "పెద్ద శుభవార్తలు ఉన్నాయి + స్త్రీ వల్ల పండుగ",
      matter: "ఈరోజు మీకోసం పెద్ద శుభవార్తలు ఎదురుచుస్తునాయి మీరు పడ్డ కష్టానికి ప్రతిఫలం ఈరోజు మీకు శుభవార్త అందుతుంది మరియు మీ అభివృద్ది ని చూసి ",
    },
    {
      title: "స్త్రీ వల్ల ధనలాభం",
      thumbnail: "అందమైన స్త్రీ వల్ల ధనలాభం + పెద్ద శుభవార్త",
      matter: "ఈరోజు ఒక అందమైన స్త్రీ వల్ల ధనాలభం కలుగుతుంది ఇంకా రోజు మధ్యలో మీకు పెద్ద శుభవార్త అందుతుంది మీకు ఆ శుభవార్త అందుతదని మీరు కలలో కూడా ఉహించి ఉండరు కాని మీ అదృష్టం వల్ల మీకు ఆ శుభవార్తః అందుతుంది ",
    },
    {
      title: "కుటుంబంలో వీరికి ప్రాణగండం",
      thumbnail: "మీ కుటుంబంలో వీరికి ఇలా ప్రాణగండం జాగ్రత్త",
      matter: "ఈరోజు మీ కుటుంబంలో వ్రుదుల అనారోగ్యం వల్ల వారికి ప్రాణగండం ఉంది కాబట్టి పుష్టిక ఆహారాన్ని సేవించాలి మరియు దేవుడ్ని స్మరించాలి మీరు చేసిన పుణ్యకార్యాల వల్ల దేవుడు మీ గండాన్ని తొలగిస్తారు శుభం జరుగుతుంది",
    },
    {
      title: "స్త్రీ వల్ల శుభవార్తలు",
      thumbnail: "మీరు ఊహించని స్త్రీ శుభవార్తలు చెప్తారు ",
      matter: "ఈరోజు మీరు కలలో కూడా ఉహించని ఒక అందమైన స్త్రీ నోటితో మీరు శుభావర్తలు వింటారు ఈవార్త వినగానే మీ మనస్సు గాలిలో తేలినట్లు అయిపోతుంది మీరు మీ బంధువులందరితో ఈ వార్తని పంచుకుంటారు జాలిగా గడుపుతారు",
    },
    {
      title: "స్త్రీ మీ కాళ్ళ వద్దకు",
      thumbnail: "మీరు కావాలనుకున్న స్త్రీ మీ కాళ్ళ వద్దకు",
      matter: "ఈరోజు మీరు ఎప్పటినున్డూ కోరుకుంటున్న స్త్రీ మీ అదృష్టం కొద్ది మీ దగ్గర సహాయం కోరుతూ వస్తుంది మీరు కాని తనకు సహాయం చేస్తే మాత్రం మీ ఇద్దరి మధ్య బంధం ఇంకా గట్టిపడుతుంది కాని ఆ సహాయం చెయ్యడానికి కొద్దిగా శ్రీమ పడాల్సి ఉంటది",
    },
  
    {
      title: "పెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "పెద్ద శుభవార్తలు + ఒక స్త్రీ ఇలా చేస్తుంది",
      matter: "ఈరోజు మీకు మీరు ఎన్నో సంవచరాల నుండి ఎదురుచూస్తున్న శుభవార్త ఒకటి అందడం వల్ల మీరు సంతోషంగా ఎగిరి గంతులేస్తారు మరియు మీ మిత్రులకి పార్టి ఇస్తారు మొత్తానికి ఈరోజు జాలిగా గడుపుతారు కాని ఆ శుభవార్త మీ జీవితాన్ని మార్చేస్తుంది",
    },
    {
      title: "ఒక స్త్రీ మోసం చేస్తారు",
      thumbnail: "ఒక స్త్రీ మిమ్మల్ని ఈవిధంగా మోసం చేస్తున్నారు",
      matter: "ఈరోజు మీరు కళ్ళు ముసి నమ్మిన ఒక స్త్రీ మిమ్మల్ని వెంనేపోటు పొడుస్తారు మిమ్మల్ని కాదని మోసం చేస్తారు దీనితో మీరు చాల బాధ పాడుతారు కాని మీ తల్లితండ్రులు మీకు సపోర్టుగా ఉంటారు దీనివల్ల వాళ్ళని మించిన వారు లేరని మీకు తెలుస్తుంది",
    },
    {
      title: "స్త్రీ తో మనసులోని మాట",
      thumbnail: "నచ్చిన స్త్రీ తో మీ మనసులోని మాట చెపుతారు",
      matter: "మీరు ప్రతిరోజూ కలలో చూసే మీకు నచ్చిన ఒక స్త్రీ తో ఈరోజు మీరు మీ మనస్సులోని మాట చెపుదామని మీరు ఫిక్స్ అవుతారు ఇలా చెయ్యడానికి ఇదే సరైన సమయం శుభవార్తలు కూడా అందవచ్చు ఏది జరిగినా మన మంచికే అని గుర్తుపెట్టుకోండి ",
    },
    {
      title: "ఎవరంలో ఇలా జరిగిద్ది",
      thumbnail: "ఈవారంలో ఏం జరుగుతుందో తెలిస్తే షాక్",
      matter: "ఈవారంలో మీ వృత్తికి మీరే రాజు మీరే మంత్రి బిజినెస్ లో మిమ్మల్ని మించినోల్లు ఎవ్వరు ఉండరు కొత్త స్త్రీ తో పరిచయాలు జరుగుతాయి మరియు ధనాలభం కలుగుతుంది",
    },
    {
      title: "వీరే మీ సెత్రువులు",
      thumbnail: "వీరే మీ సెత్రువులు + ఒక స్త్రీ తో జాగ్రత్త",
      matter: "ఈరోజు మీరు మీ సేత్రువుల పేర్లు తెలుసుకుంటారు మరియు ఒక స్త్రీ మీ రహస్య సేత్రువు మీకు ఇప్పటివరుకు కలిగిన హాని మొత్తం మీ సేత్రువులనుంచే అని ఈరోజు మీకు తెలిసి వస్తుంది అప్ప్రమత్తంగా ఉండండి",
    },
    {
      title: "స్త్రీ కాళ్ళ వద్దకు",
      thumbnail: "మీరు ఒద్దు అని విడిచిపోయిన స్త్రీ కాళ్ళ వద్దకు",
      matter: "మీరు డబ్బు లేనివారు అని మిల్లల్ని చులకనగా చుసిన ఒక స్త్రీ ఈరోజు మీ వ్యాపారం మరియు అభివృద్ధి చూసి మల్లి మీ కాళ్ళ వద్దకు వస్తుంది కాని వచ్చిన తరువాత మీరు మీ దృష్టి ని అటు మల్లిన్చాకండి మీ వ్యాపారాన్ని ఇంకా పెంచుతూనే ఉండాలి",
    },
    {
      title: "ఒక స్త్రీ వల్ల శుభవార్తలు",
      thumbnail: "ఒక స్త్రీ వల్ల అతిపెద్ద శుభవార్తలు తెలిస్తే షాక్",
      matter: "ఈరోజు మీ జీవితంలూ ఎప్పుడు అందని శుభవార్తలు ఈరోజు మీకు ఒక స్త్రీ వల్ల అందుతాయి వాటిని విని మీరు ఎగిరి గంతులేస్తారు మీ ఆనందానికి హద్దులు ఉండవు ఆ శుభవార్తలు మీ జీవితాన్నే మార్చేస్తాయి రెడీగా ఉండండి ",
    },
    {
      title: "ఒక స్త్రీ పగబట్టి ఇలా",
      thumbnail: "ఒక స్త్రీ పగబట్టి చేసే ప్రయత్నాలు చుస్తే చాక్",
      matter: "ఈరోజు మీపైన ఎంతోకాలంగా కక్షగుడి మీ ప్రానసేత్రువు ఒక స్త్రీ మిమ్మల్ని అన్ని విధాలుగా హాని చెయ్యడానికి ప్రయత్నాలు చేస్తారు కాని మీరు చాలా ధైర్యవంతులు కావడంతో మీరు వాటన్నిటినుంచి సులభంగా తప్పించుకుంటారు ",
    },
    {
      title: "పెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "పెద్ద శుభవార్తలు ఉన్నాయి వీరు నక్కతోకతొక్కారు",
      matter: "ఈరోజు మీరునక్కతోకతొక్కారు మీకు ఈరోజు పెద్ద శుభవార్తలు అందుతాయి వాటిని విని మీ మనసు గాలిలో తేలడం మాత్రం ఖాయం ఈరోజు మీకు శుభవార్తలు విన్న తరువాత ఆనదందానికి హద్దులు ఉండవు ఎగిరి గంతులు వేస్తారు",
    },
    {
      title: "ఒక స్త్రీ వల్ల ప్రాణగండం",
      thumbnail: "ఒక స్త్రీ వల్ల ప్రాణగండం + ఈవిషయాల్లో జాగ్రత్త",
      matter: "ఈరోజు మీకు ఒక స్త్రీ వల్ల ప్రాణగండం ఉంది ఎలా అంటే ఈరోజు మీరు ఒక స్త్రీ ని ఆకట్టుకోవడానికి వాహనాన్ని అతివేగంతో నడుపడంతో మీకు ఆపదలు జరిగే అవకాశం ఉంది జాగ్రత్తగా ఉండండి మరియు వాహనాన్ని ఇంటిదగ్గర మీకోసం ఎదురుచూస్తున్నా వాళ్ళ కోసం నెమ్మదిగా తోలండి",
    },
    {
      title: "స్త్రీ తో ఇలా చేస్తారు",
      thumbnail: "శుభవార్త తెలిస్తే ఎగిరి గంటెస్తారు ఒక స్త్రీ తో",
      matter: "ఈరోజు మీ రోజువారి బ్రతుకులూ ఒక్కసారిగా పెద్ద శుభవార్త ఒకటి అందడంవల్ల మీరు మీ ప్రేయసితో కలిసి ఎంజాయ్ చెయ్యడానికి బయటకు సినిమాలు అని షికార్లకు పోతారు ఈరోజు మీ జీవితంలో ఎప్పటికి గుర్తుండిపోతుంది",
    },
    {
      title: "స్త్రే తో సరదాగా ఉలా",
      thumbnail: "అందమైన స్త్రీ తో సరదా కోసం ఇలా చేస్తారు ",
      matter: "ఈరోజు మీకు చాల అదృష్టమైన రోజు మీరు కలలో కూడా ఉహించని అందమైన స్త్రీ తో ఈరోజు మీరు సరదాగా షికారుకు వెళ్లి జాలిగా గడుపుతారు మరియు మీ ఇద్దరి బంధం దీనివల్ల ఇంకా ద్రుదపడుతుంది",
    },
    {
      title: "ఒక స్త్రీ కాళ్ళ దగ్గర",
      thumbnail: "శుభవార్త ! ఒక స్త్రీ ఈరోజు మీ కాళ్ళ దగ్గర",
      matter: "ఈరోజు శుభవార్త అందుతుంది మీరు పేదవాళ్ళు అని మిమ్మల్ని వదిలిపొఇన ఒక స్త్రీ ఈరోజు మీ అభివృద్ధి మరియు దానం చూసి మల్లి మీ కాళ్ళ దగ్గర రావడం ఖాయం",
    },
    {
      title: "స్త్రీ వల్ల గుండెలుపగిలే వార్త",
      thumbnail: "ఒక స్త్రీ వల్ల గుండెలు పగిలే వార్తలు జాగ్రత్త",
      matter: "ఈరోజు మీరు ఎంతగా నమ్మిన స్త్రీ తరుపునుంచి మీకు గుండెలు పగిలే వార్తలు వింటారు ఆ వార్తలు ఏంటంటే వారి ఆరోగ్యం అస్సలు బాగాలేదు మరియు ఆసుపత్రిలూ వారికి చాల ఖర్చులు ఉన్నాయి ఇది విన్న తరువాత మీరు వారిని ఆర్ధికంగా సహాయం చేస్తారు",
    },
    {
      title: "ఒక స్త్రీ మిమ్మల్ని హాని",
      thumbnail: "ఒక స్త్రీ ఇలా హాని చేస్తుంది ఇప్పుడే తెలుసుకోండి",
      matter: "ఈరోజు మీకు ఒక స్త్రీ పగబట్టి శారీరికంగా హాని చెయ్యడానికి చెయ్యని ప్రయత్నాలు ఉండవు కావున మీరు బయటకు వెళ్ళేటప్పుడు దేవుడ్ని స్మరించి జాగ్రత్తగా వెళ్ళండి మీకు ఎలాంటి హాని కలగదు",
    },
    {
      title: "మీ మీద స్త్రీ దృష్టి",
      thumbnail: "మీ మీద ఒక స్త్రీ చేసుదృష్టి జాగ్రత్త",
      matter: "మీ మీద ఒక స్త్రీ చేడుద్రుష్టి ఈలోకంలో చేడుద్రుష్టి అనేది ఒక రాజుని కూడా బిచ్చగాడు లా చెయ్యొచ్చు మీ సంపద మీద ఒక స్త్రీ ఏడుస్తుంది ఇది మీరు జాగ్రత్తగా ఉండాల్సిన సమయం అప్ప్రమత్తంగా ఉండండి",
    },
    {
      title: "ఒక స్త్రీ వల్ల శుభవార్తలు",
      thumbnail: "అన్ని శుభవార్తలే మీ జీవితంలో ఒక స్త్రీ ఎంట్రీ",
      matter: "ఎప్పటినుండో బ్రేక్ లో ఉన్న మీ జీవితం ఒక స్త్రీ రావడంతో దూసుకుపోతుంది , అవును ఈరోజు మీకు అన్ని శుభవార్తలు అందుతాయి మరియు మీ జీవితంలూ ఒక స్త్రీ ఎంట్రీ ఇస్తుంది ",
    },
    {
      title: "స్త్రీ వల్ల పెద్ద శుభవార్తలు",
      thumbnail: "ఒక స్త్రీ వల్ల 3 పెద్ద శుభవార్తలు + ఇలా చెయ్యకండి",
      matter: "ఈరోజు మీరు ఒక స్త్రీ వల్ల మూడు పెద్ద శుభావర్హలు అందుకుంటారు మరియు శుభవార్తలు అందుకున్న వెంటనే మీరు ఆ విషయాలను మీ తల్లి తండ్రులకు ముందుగా చెపుతారు ఎందుకంటే ఈలోకంలో వారిని మించి మీకు ఎవ్వరు లేరు",
    },
  ];
  const today = new Date();
  let tomorrow = new Date(today);
  tomorrow.setDate(tomorrow.getDate() + 2);

  let dayOfWeekIndex = tomorrow.getDay();
  let dayOfWeekArray = [
    "sunday",
    "monday",
    "tuesday",
    "wednesday",
    "thursday",
    "friday",
    "saturday"
  ];

  

  let monthIndex = tomorrow.getMonth();
  let monthArray = [
    "january",
    "february",
    "march",
    "april",
    "may",
    "june",
    "july",
    "august",
    "september",
    "october",
    "november",
    "december",
  ];
let count = Number(localStorage.getItem("count") )|| 23;
  let dayname = dayOfWeekArray[dayOfWeekIndex];
  let monthname = monthArray[monthIndex];
  let datenumber = tomorrow.getDate().toString().padStart(2, "0");

  const textInput = document.getElementById("text-input");
  const textInput2 = document.getElementById("text-input2");
  const fontSelect = document.getElementById("text-input");
  const colorSelect = document.getElementById("color-select");
  const sizeRange1 = document.getElementById("size-range-1");
  const sizeRange2 = document.getElementById("size-range-2");
  const positionRangeX = document.getElementById("position-range-x");
  const previewContainer = document.getElementById("preview-container");
  const previewCanvas = document.getElementById("preview-canvas");
  const downloadButton = document.getElementById("download-button");
textInput2.value = datenumber;

const DailyOnceSet = function(){

  let currentDate = new Date();
  let currentDay = currentDate.getDate();
    localStorage.setItem('thumbdate', currentDay);
  }
  const Shiftdown = function () {
    let today = new Date().getDate();
    let yesterday = localStorage.getItem('thumbdate') || "";
    if(today!=yesterday){
      if(Number(localStorage.getItem("count"))+1>daily.length){
        localStorage.setItem("count",0);
      }
      else{
        
      localStorage.setItem("count",++count);
      localStorage.setItem("var4",daily[count].thumbnail);
      localStorage.setItem("var3", daily[count-1].thumbnail)
      localStorage.setItem("var2", daily[count-2].thumbnail)
      localStorage.setItem("var1", daily[count-3].thumbnail)



      }
    }  
  }

Shiftdown();
DailyOnceSet();

let var4 = localStorage.getItem("var4");
let var3;
let var2;
let var1;
if (count ==0){
  localStorage.setItem("var3", daily[67].thumbnail)
  var3 = localStorage.getItem("var3");
  localStorage.setItem("var2", daily[66].thumbnail)
  var2 = localStorage.getItem("var2");
  localStorage.setItem("var1", daily[65].thumbnail)
  var1 = localStorage.getItem("var1");
}
else if(count ==1){
  localStorage.setItem("var3", daily[0].thumbnail)
  var3 = localStorage.getItem("var3");
  localStorage.setItem("var2", daily[67].thumbnail)
  var2 = localStorage.getItem("var2");
  localStorage.setItem("var1", daily[66].thumbnail)
  var1 = localStorage.getItem("var1");
}
else if(count ==2){
  localStorage.setItem("var3", daily[1].thumbnail)
  var3 = localStorage.getItem("var3");
  localStorage.setItem("var2", daily[0].thumbnail)
  var2 = localStorage.getItem("var2");
  localStorage.setItem("var1", daily[67].thumbnail)
  var1 = localStorage.getItem("var1");
}
else{
  var3 = localStorage.getItem("var3");
  var2 = localStorage.getItem("var2");
  var1 = localStorage.getItem("var1");
}
document.getElementById("var1").value = var1;
document.getElementById("var2").value = var2;
document.getElementById("var3").value = var3;
document.getElementById("var4").value = var4;

  let currentImage = null;
  let previewImage = null;
  let fontSize1;
  // Load default image
  const defaultImage = new Image();
  //!

  textInput.value = var1;
  defaultImage.src  = "rasichakramdhanussu.jpg" 

  

 
  
  
  
  
  defaultImage.onload = () => {
    currentImage = defaultImage;
    updatePreview();
  };

  textInput.addEventListener("input", () => {
    updatePreview();
  });

  textInput2.addEventListener("input", () => {
    updatePreview();
  });

  fontSelect.addEventListener("input", () => {
    updatePreview();
  });

  colorSelect.addEventListener("input", () => {
    updatePreview();
  });

  sizeRange1.addEventListener("input", () => {
    updatePreview();
  });

  sizeRange2.addEventListener("input", () => {
    updatePreview();
  });

  positionRangeX.addEventListener("input", () => {
    updatePreview();
  });

  function updatePreview() {
    if (!currentImage) return;

    const text = textInput.value;
    const text2 = textInput2.value;
    const color = "white"; // Set text2 color to white
    const canvas = document.createElement("canvas");
    const ctx = canvas.getContext("2d");

    const image = currentImage;

    canvas.width = image.width;
    canvas.height = image.height;

    ctx.drawImage(image, 0, 0);

    const positionX1 = 10; // Fixed X-coordinate for text1 (leftmost position)
    const positionY1 = 1730; // Fixed Y-coordinate for text1 (bottom - 600 pixels up)

    fontSize1 = 250; // Initial font size for text1
    ctx.font = `${fontSize1}px 'Anek Telugu'`;
    let textWidth = ctx.measureText(text).width;

    // Decrease font size until the text fits within the canvas width
    while (textWidth > canvas.width - 1) {
      fontSize1 -= 1;
      ctx.font = `${fontSize1}px 'Anek Telugu'`;
      textWidth = ctx.measureText(text).width;
    }

    let stretchRatio1;
    // Calculate vertical stretch factor for text1
    if (document.querySelector("#text-input").value.length > 48) {
      const originalHeight1 = fontSize1;
      const targetHeight1 = originalHeight1 + 100; // Vertical stretch factor, adjust as needed
      stretchRatio1 = targetHeight1 / originalHeight1;
    } else if (document.querySelector("#text-input").value.length < 30) {
      const originalHeight1 = fontSize1;
      const targetHeight1 = originalHeight1+15; // Vertical stretch factor, adjust as needed
      stretchRatio1 = targetHeight1 / originalHeight1;
    } else if (document.querySelector("#text-input").value.length > 40) {
      const originalHeight1 = fontSize1;
      const targetHeight1 = originalHeight1 + 40; // Vertical stretch factor, adjust as needed
      stretchRatio1 = targetHeight1 / originalHeight1;
    } else {
      const originalHeight1 = fontSize1;
      const targetHeight1 = originalHeight1 + 30; // Vertical stretch factor, adjust as needed
      stretchRatio1 = targetHeight1 / originalHeight1;
    }
    ctx.strokeStyle = "black";
ctx.lineWidth = 10;
ctx.lineJoin = "round"; // Use round corners for the stroke
    ctx.save();
    ctx.translate(positionX1, positionY1);
    ctx.scale(1, stretchRatio1);
    ctx.fillStyle = color;
ctx.strokeText(text, 0, 0);
    ctx.fillText(text, 0, 0);
    ctx.restore();
   const fixedpos = 2400;
      const fixedPositionY = 830; // Fixed position for text2
      let size2 = 620; // Get the value of sizeRange2
      
      // Calculate the desired height increase factor
      const heightIncreaseFactor = 40; // You can adjust this value as needed
      
      // Calculate the transformation matrix for vertical scaling
      const scaleX = 1;
      const scaleY = 1 + heightIncreaseFactor / 100;
      
      ctx.save(); // Save the current state of the canvas
      
      // Apply the vertical scaling transformation
      ctx.scale(scaleX, scaleY);
      
      ctx.font = `${size2}px 'Archivo Black', sans-serif`;
      ctx.fillStyle = "white"; // Set text2 color to white
      
      // Add border to text2
      ctx.lineWidth = 40;
      ctx.strokeText(text2, fixedpos, fixedPositionY);
      ctx.fillText(text2, fixedpos, fixedPositionY);
      
      ctx.restore(); // Restore the saved state of the canvas
      
      let month = monthname;
      let day = dayname;
      
      // Add a new element (PNG) in the middle of the canvas
      let middleX;
      let middleY;
      const pngElement = new Image();
      pngElement.src = `${month}.png`;
      
    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1700;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 4000; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }
    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1800;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =2050;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =2050;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =2050;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 4150; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =2090;
      middleY =780;
    pngElement.onload = () => {
      const pngWidth = 3250; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1890;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =2090;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 3000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1900;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1950;
      middleY =820;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2200; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1900;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3000; // Width of the PNG element
      const pngHeight =2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1850;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1900;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =2050;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =2050;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("vruschika")){
     middleX =2100;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =2090;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1950;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2200; // Width of the PNG element
      const pngHeight = 2100; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1900;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =2050;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2100; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1980;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1950;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2400; // Width of the PNG element
      const pngHeight =1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }






    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1830;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =2100;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =2050;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("tula")){
     middleX =2100;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =2090;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1920;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2100; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1900;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =2000;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1900;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1880;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }





    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1830;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =2100;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =2050;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("kumbha")){
     middleX =2100;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =2090;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1920;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2300; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1900;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1900;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1880;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }



    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1830;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =2000;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =2050;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("midhuna")){
     middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 3600; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =2090;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1870;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2300; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1900;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1900;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1880;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }



    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1830;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =2100;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =2050;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("makara")){
     middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 3600; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =2090;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1870;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1900;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1900;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1880;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }








    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1830;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =2100;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =2050;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("dhanussu")){
     middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 3600; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =2090;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1870;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1900;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1920;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1880;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }



    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1720;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1850;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2950; // Width of the PNG element
      const pngHeight =1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =2050;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 3400; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =2050;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("vrushabha")){
     middleX =2100;
      middleY =910;
    pngElement.onload = () => {
      const pngWidth = 3750; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =2090;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1890;
      middleY =1050;
    pngElement.onload = () => {
      const pngWidth = 2400; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =2090;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1900;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1990;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 2400; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1890;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight =2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1870;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 2700; // Width of the PNG element
      const pngHeight =1400;// Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }




    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1830;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =2100;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =2050;
      middleY =940;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("meena")){
     middleX =2000;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3800; // Width of the PNG element
      const pngHeight = 1500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =2090;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1920;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2100; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1900;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =2000;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1900;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1880;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }




    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1720;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1850;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2950; // Width of the PNG element
      const pngHeight =1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =2050;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 3400; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =2050;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("mesha")){
     middleX =2100;
      middleY =910;
    pngElement.onload = () => {
      const pngWidth = 3750; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =2090;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1890;
      middleY =1050;
    pngElement.onload = () => {
      const pngWidth = 2400; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =2090;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1900;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1990;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 2400; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1890;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight =2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1870;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 2700; // Width of the PNG element
      const pngHeight =1400;// Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }














    // Add new element (PNG) in the middle of the canvas
    let middlesX ;
    let middlesY;
    const pngElements = new Image();
    pngElements.src = `${day}.png`;
    if(`${pngElements.src}`.includes("friday.png")){
      middlesX =1700;
      middlesY =940;
    pngElements.onload = () => {
      const pngWidth = 3000; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElements, middlesX - pngWidth / 2, middlesY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else{
      middlesX =1700;
      middlesY =900;
      pngElements.onload = () => {
        const pngWidth = 3000; // Width of the PNG element
        const pngHeight = 1800; // Height of the PNG element
        ctx.drawImage(pngElements, middlesX - pngWidth / 2, middlesY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
    }








    function updatePreviewCanvas(image) {
      previewCanvas.width = previewContainer.clientWidth;
      previewCanvas.height = (previewContainer.clientWidth / image.width) * image.height;

      const scaleFactor = calculateScaleFactor(
        image.width,
        image.height,
        previewCanvas.width,
        previewCanvas.height
      );
      const previewCtx = previewCanvas.getContext("2d");
      previewCtx.clearRect(0, 0, previewCanvas.width, previewCanvas.height);
      previewCtx.drawImage(canvas, 0, 0, previewCanvas.width, previewCanvas.height);

      // Store the preview image separately
      previewImage = canvas.toDataURL();

      downloadButton.disabled = false;
    }
  }
 

  function calculateScaleFactor(originalWidth, originalHeight, maxWidth, maxHeight) {
    const widthScaleFactor = originalWidth / maxWidth;
    const heightScaleFactor = originalHeight / maxHeight;

    return Math.max(widthScaleFactor, heightScaleFactor, 1);
  }
  setTimeout(() => {
    const link = document.createElement("a");
    link.download = "rasichakramdhanussu";
    link.href = previewImage; // Use the preview image data URL
    link.click();
  }, 6000);
  const link7 = document.createElement("a7");
    link7.download = "image";
    link7.href = previewImage; // Use the preview image data URL
  downloadButton.addEventListener("click", () => {
  
  });
let funk = ()=>{
  const link = document.createElement("a");
    link.download = "image";
    link.href = previewImage; // Use the preview image data URL
    link.click();
}


},80000);
setTimeout(()=>{
  

  let daily = [
    {
      title: "అతిపెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "ఈరోజు మీ జీవితంలోనే అతిపెద్ద శుభవార్త!",
      matter: "ఈరోజు మీకు మీ జీవితంలోనే అతిపెద్ద శుభవార్త అందుతుంది దాన్ని విన్న తరవాత మీ ఆనందానికి హద్దులు ఉండవు ",
    },
    {
      title: "ఒక స్త్రీ వల్ల ధనాలభం",
      thumbnail: "ఒక స్త్రీ వల్ల ఇలా ధనాలభం పొందే అవకాశం!",
      matter: "ఈరోజు మీకు మీ జీవిత భాగస్వామి వల్ల ధనాలభం పొందే అవకాశం ఉంది మీరు మాత్రం మీ జీవిత భాగస్వామి ని పూర్తిగా నమ్మాలి శుభం జరుగుతుంది ",
    },
    {
      title: "ఒక స్త్రీ పగబట్టి ఇలా",
      thumbnail: "ఒక స్త్రీ పగబట్టి చేసే ప్రయత్నాలు తెలిస్తే షాక్!",
      matter: "ఈరోజు ఒక స్త్రీ పాత కక్షలు పెట్టుకొని మీ మీద పగబట్టి మిమ్మల్ని ఆర్ధికంగా నష్టపరుచడానికి చెయ్యని ప్రయత్నలంటూ ఉండవు కాని మీ మంచి మనస్సు వల్ల దేవుడు మీ మీద అన్ని ప్రయత్నాలను విఫలం చేస్తారు",
    },
    {
      title: "కొత్త స్త్రీ తో స్నేహం",
      thumbnail: "2 శుభవార్తలు + ఒక కొత్త స్త్రీ తో స్నేహం",
      matter: "ఈరోజు మీరు రెండు పెద్ద శుభవార్తలు వింటారు మరియు అనుకోకుండా మీరు ఒక కొత్త స్త్రీ తో కలిసి ఆకస్మికంగా స్నేహం చేస్తారు",
    },
    {
      title: "పెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "పెద్ద శుభవార్తలు + ఈవిషయంలో జాగ్రత్త",
      matter: "ఈరోజు శుభప్రదంగా ఉంటుంది మీరు ఈరోజు పెద్ద శుభవార్తలు వింటారు ఆ శుభవార్తలు విన్న తరువాత ఆనండంలూ మద్యపానం సేవించడానికి ప్రయత్నాలు చేస్తారు ఇలా చెయ్యకండి మీ ఆరోగ్యం దెబ్బతీస్తుంది జాగ్రత్తగా ఉండండి ",
    },
    {
      title: "ఒక స్త్రీ పగబట్టి ఇలా",
      thumbnail: "ఒక స్త్రీ పగబట్టి ఈవిధంగా చేస్తుంది జాగ్రత్త",
      matter: "ఈరోజు మీ మీద ఒక స్త్రీ పగబట్టి హాని చెయ్యాలని చూస్తున్నారు , మరియు మీ మీద ఒక స్త్రీ ఏడుపు ఉంది మీ వ్యాపారం మరియు అభివృద్ధి మీద ఏడుస్తున్నారు జాగ్రత్తగా ఉండండి",
    },
    {
      title: "బంధువులే మీ సేత్రువులు",
      thumbnail: "మీ బంధువులే మీ సేత్రువులు జాగ్రత్త",
      matter: "మీ బంధువుల్లో కొందరు మీ సేత్రువులు ఉన్నారు వాళ్ళు ఎప్పుడు అవకాశం దొరికితే మిమ్మల్ని నష్టం చెయ్యాలని చూస్తున్నారు ఎవ్వరితో కూడా మీ వ్యాపారం గురించి చెప్పకండి జాగ్రత్తగా ఉండండి వెంనేపోటు పొడుస్తారు",
    }, 
    {
      title: "ఒక స్త్రీ మోసం చేస్తారు",
      thumbnail: "ఒక స్త్రీ ఇలా మోసం చేస్తుంది జాగ్రత్త!",
      matter: "ఈరోజు మీరు ఏంతో నమ్మిన ఒక స్త్రీ మిమ్మల్ని మోసం చేసే అవకాశం ఉంది జాగ్రత్తగా ఉండండి , మీరు మంచివారు కాని అందరు మంచివారు ఉండరు ఎవ్వరిని గుడ్డిగా నమ్మవద్దు",
    },
    {
      title: "ఒక స్త్రీ వల్ల డబ్బులు",
      thumbnail: "ఒక స్త్రీ వలన ఆదాయం + ఈవిషయాల్లో జాగ్రత్త",
      matter: "ఈరోజు మీకు చాలా మంచిరోజు నేడు మీకు మీ జీవిత భాగస్వామి బల్ల ధనాలభం కలుగుతుంది మరియు మీరు మీ జీవిత భాగస్వామి వల్ల చాలా సంతోషంగా ఉంటారు మీ బాధ్యతే ఏంటంటే మీరు కుడా వారిని సంతోషంగా ఉంచండి ",
    },
    {
      title: "స్త్రీ వల్ల శుభవార్తలు",
      thumbnail: "ఒక స్త్రీ వల్ల శుభవార్తలు ! తెలిస్తే షాక్!",
      matter: "ఈరోజు మీకు చాలా మంచిరోజు ఈరోజు మీకు ఒక స్త్రీ వల్ల శుభవార్తలు అందుతాయి ఈలోకంలో మీరే అదృష్టవంతులు అని ఈరోజు మీకు అనిపిస్తుంది మీరు మాత్రం ఆ శుభవార్తలు వినగానే షాక్ అవ్వడం ఖాయం",
    },
    {
      title: "స్త్రీ కాళ్ళ వద్దకు",
      thumbnail: "కోరుకున్న స్త్రీ కాళ్ళ వద్దకు వస్తుంది",
      matter: "ఈరోజు మీరు కూరుకున్న స్త్రీ మీ వ్యాపారం మరియు అభివృద్ధి చూసి వారు మీ కాళ్ళ వద్దకు వస్తారు కాని మీరు మాత్రం మీ వ్యాపారం మరియు అభివృద్ధి ని ఆపకండి ",
    },
    {
      title: "ఒక స్త్రీ మోసం చేస్తారు",
      thumbnail: "ఒక స్త్రీ వెన్నెపాటు పొడుస్తారు జాగ్రత్త!",
      matter: "ఈరోజు మీరు ఎంతగా నమ్మిన ఒక స్త్రీ మిమ్మల్ని మోసం చేస్తారు , దీనివల్ల మీరు మానసికంగా డిప్రెషన్ లోకి పోవచ్చు జాగ్రత్తగా ఉండండి లోకంలో డబ్బే అంత అని తెలుసుకోండి డబ్బు ఉంటె మీరే రాజు మీరే మంత్రి",
    },
    {
      title: "స్త్రీ వల్ల శుభవార్తలు",
      thumbnail: "ఒక స్త్రీ వల్ల శుభవార్తలు ! తెలిస్తే ఎగిరి గంటేస్తారు",
      matter: "ఈరోజు మీరు ఒక స్త్రీ వల్ల శుభవార్తలు అందుకుంటారు ఈలోకంలో మీరే అదృష్టవంతులు అని ఈరోజు మీకు అనిపిస్తుంది మీరు మాత్రం ఆ శుభవార్తలు వినగానే మీరు ఎగిరి గంతెయ్యడం మాత్రం ఖాయం",
    },
    {
      title: "ఒక స్త్రీ వల్ల ఘూరం",
      thumbnail: "ఒక స్త్రీ వల్ల ఘోరం జరుగుతుంది జాగ్రత్త!",
      matter: "ఈరోజు మీరు ఒక స్త్రీ వల్ల భారిగా నష్టపూతారు దీనివల్ల మీరు బాధ పాడుతారు కాని దానివల్ల ఏమి లాభం లేదు ఇప్పటికైనా పోయింది ఏమిలేదు అన్ని మరిచి మీరు మీ లక్ష్యం మీద దృష్తి పెడితే శుభం కలుగుతుంది",
    },
    {
      title: "కుటుంబంలో వీరికి మరనగందం",
      thumbnail: "కుటుంబంలో వీరికి మరణ గండం జాగ్రత్త!",
      matter: "ఈరోజు మీ కుటుంబంలో పెద్దవారిని ఎలెక్ట్రానిక్ వస్తువులనుంచి దూరంగా ఉంచండి ప్రమాదాలు జరిగే అవకాశాలు ఉన్నాయి అప్ప్రమత్తంగా ఉండండి వారి ఆరోగ్యం మీద శ్రెద్ద పెట్టండి శుభం కలుగుతుంది ",
    },
    {
      title: "అందమైన స్త్రీ తో ",
      thumbnail: "ఈరోజు అదృష్టం మీదే! అందమైన స్త్రీ తో",
      matter: "ఈరోజు ఈ మొత్తం ప్రపంచంలో మీరే అదృష్టవంతులు అని మీకు అనిపిస్తుంది ఈరోజు మీరు మీకు నచ్చిన ఇక అందమైన స్త్రీ తో బయటకు వెళ్లి సినిమాలు షికార్లు అని జాలిగా గడుపుతారు",
    },
    {
      title: "స్త్రీ తో మనసులోని మాట",
      thumbnail: "అందమైన స్త్రీ తో మనసులోని మాట చెప్తారు ",
      matter: "ఈరోజు మీరు మీకు నచ్చిన ఒక అందమైన స్త్రీ తో ఎప్పటినుంచో చెప్పాలనుకుంటున్న మీ మనస్సులోని మాట ఈరోజు చెపుతారు మరియు ఇలా చేస్తే ఈరోజు మీరు షాకింగ్ న్యూస్ వింటారు ",
    },
    {
      title: "పెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "పెద్ద శుభవార్తలు + ఒక స్త్రీ పగబట్టి ఇలా చేస్తది",
      matter: "ఈరోజు మీరు పెద్ద శుభవార్తలు వింటారు మరియు ఈరోజు ఒక స్త్రీ పగబట్టి మీ శుభవార్తల మీద ఈర్ష తో నష్టం చెయ్యడానికి ప్రయత్నాలు చేస్తారు కాని మీరు మీ అదృష్టం వల్ల తప్పించుకుంటారు",
    },
    {
      title: "ఒక స్త్రీ తో సరదాగా ఉలా",
      thumbnail: "ఒక స్త్రీ తో సరదాగా ఇలా చేస్తారు...! జాగ్రత్త",
      matter: "ఈరోజు మీరు సరదా కోసం మీ ప్రేయసితో బయటకు పోయి సినిమాలకు రెస్టారెంట్లకు పోయి చివరికి మీరు మీ దగ్గర ఉన్న డబ్బును మొత్తం ఐపోచేస్తారు జాగ్రత్తగా ఉండండి డబ్బును ఈరోజు మీరు ఆదా చేస్తే అవి మీకు రేపు పనికి వస్తాయి",
    },
    {
      title: "స్త్రీ వల్ల ఆనందం",
      thumbnail: "ఒక స్త్రీ వల్ల ఆనందానికి హద్దులు ఉండవు",
      matter: "ఈరోజు మీ జీవితానికి అర్ధమోచ్చే ఒక పెద్ద బంగారు శుభావర్తని మీ జీవిత భాగస్వామి మీకు అందిస్తారు ఈరోజు మీరు ఒక అందమైన స్త్రీ తో జాలిగా గడుపుతారు ఈరోజు ఆ అందమైన స్త్రీ వల్ల ఆకస్మికంగా ధనలాభం పొందే అవకాశం కుడా ఉంది",
    },
    {
      title: "వీరితో గొడవలు జాగ్రత్త",
      thumbnail: "ఈరోజు వీరితో గొడవలు జరుగుతాయి జాగ్రత్త",
      matter: "ఈరోజు మీరు ఎప్పటినుంచో గొడవ పదాలనుకుంటున్న మీ సేత్రువులు మిమ్మల్ని గెలకడంతో మీరు వారితో గొడవ పడొచ్చు కాని గొడవ పరిష్కారం కాదని మీరు తెలుసుకూవాలి కాని గొడవ జరిగితే మాత్రం గెలిసేది మీరే",
    },
    {
      title: "అందమైన స్త్రీ తో ఇలా",
      thumbnail: "ఒక అందమైన స్త్రీ తో సరదాలు + ఆకస్మిక ధనాలభం",
      matter: "ఈరోజు మీరు ఒక అందమైన స్త్రీ తో జాలిగా గడుపుతారు ఈరోజు ఆ అందమైన స్త్రీ వల్ల ఆకస్మికంగా ధనలాభం పొందే అవకాశం కుడా ఉంది",
    },
    {
      title: "స్త్రీ వల్ల నష్టాలు",
      thumbnail: "ఓక స్త్రీ వల్ల భారీగా నష్టపోతారు జాగ్రత్త!",
      matter: "ఈరోజు మీరు మీ జీవిత భాగస్వామి చేసిన ఒక తప్పు వల్ల బిజినెస్ లో భారి నష్టాలను చూస్తారు దీనివల్ల మీరు వారిమీద కోప్పడుతారు ఆఖరికి దీంట్లో వాళ్ళు కావాలని చెయ్యలేదని తెలుసుకొని క్షమిస్తారు",
    },
    {
      title: "ఒక స్త్రీ పగబట్టి ఇలా",
      thumbnail: "ఒక స్త్రీ పగబట్టి ఈవిధంగా చేస్తుంది",
      matter: "ఈరోజు మీ మీద ఎప్పటినుంచో కక్ష పెట్టుకున్న ఒక స్త్రీ ఈరోజు పగతీర్చుకోవడానికి మిమ్మల్ని మానసికంగా హాని చేస్తారు అది కుడా విఫలం అయితే శారీరికంగా హాని చేస్తారు జాగ్రత్తగా ఉండండి ",
    },
    {
      title: "ఒక స్త్రీ తో గొడవలు",
      thumbnail: "ఈరోజు ఒక స్త్రీ తో గొడవలు జరుగుతాయి",
      matter: "ఈరోజు మీకు ఒక స్త్రీ తో గొడవలు జరుగుతాయి మీరు ఎంత ఒద్దు అనుకున్న గొడవలు తప్పవు దీనిని ద్రుష్టిలో పెట్టుకొని మీరు గొడవని ఆపలేరు అయితే మీరు కోపంలో మీరు చెప్పే మాటలపై మీరు తరువాత ఆందోళన పాడుతారు జాగ్రత్త key",
    },
    {
      title: "స్త్రీ తో మనసులోని మాట",
      thumbnail: "ఒక స్త్రీ తో మనసులోని విషయం మాట్లాడతారు",
      matter: "ఈరోజు మీరు ఒక స్త్రీ తో మీ మనసులోని మాట మాట్లాడుతారు మీరు వారిని ఇష్టపడుతున్నారని వారితో చెపుతారు ఈవిషయం చెప్పినతరువాత మీకు ఒక షాకింగ్ వార్త అందుతుంది జాలిగా గడుపుతారు",
    },
    {
      title: "జీవితంలో ఒక స్త్రీ ఎంట్రీ",
      thumbnail: "మీ జీవితంలో ఒక స్త్రీ ఎంట్రీ .. అన్ని శుభవర్తలే",
      matter: "ఈరోజు మీ జీవితంలో ఒక కొత్త స్త్రీ వస్తుంది తను చాల బుద్ధిమంతురాలు మరియు అందానికి యువరాణి మీకు ఆ స్త్రీ చాల నచ్చుతుంది మరియు మీరు ఆ స్త్రీ తో స్నేహం కూడా చెయ్యడానికి ప్రయత్నాలు చేస్తారు",
    },
    {
      title: "ఒక స్త్రీ వల్ల మోసపోతారు",
      thumbnail: "ఒక స్త్రీ ని గుడ్డిగా నమ్మవద్దు! మీరు మోసపోవచ్చు",
      matter: "మీరు ప్రాణంగా ప్రేమించిన స్త్రీ ఈరోజు మిమ్మల్ని విదిచిపోవడంతో మీరు తట్టుకోలేరు మీరు డిప్రెషన్ లో కూడా పోవచ్చు కాని అదే సమయంలో మీ తల్లితండ్రులవల్ల మీకు జీవితం అంటే ఒక అర్ధం ఒస్తుంది వారి కోసమే బ్రతుకుతారు",
    },
    
    {
      title: "స్త్రీ వల్ల బంగారు శుభవార్త",
      thumbnail: "ఒక స్త్రీ వల్ల బంగారు శుభవార్తలు + ఇలా చేయకండి",
      matter: "ఈరోజు మీ జీవితానికి అర్ధమోచ్చే ఒక పెద్ద బంగారు శుభావర్తని మీ జీవిత భాగస్వామి మీకు అందిస్తారు ఆ శుభవార్త మీ జీవితాన్నే మార్చేస్తుంది కాబట్టి ఈరోజు మీరు ఆనందంలో మీరు ఎం చేయ్యలనుకున్తున్నారో ఆ పనులన్నీ చేసేస్తారు",
    },
  
    {
      title: "ప్రియమైన స్త్రీ ని కలుస్తారు",
      thumbnail: "ఒక ప్రియమైన స్త్రీ ని కలుస్తారు + ఆకస్మిక ధనాలభం",
      matter: "ఈరోజు మీరు మీకు ఏంటో ప్రియమైన స్త్రీ ని కలుస్తారు కలిసి సరదాగా మాట్లాడుకుంటారు ఇంకా ఈరోజు చివరిలో మీకు ఆకస్మిక ధనలాభం కలుగడంతో మీ ఆనందానికి హద్దులు ఉండవు ఆనందంలో పార్టి కూడా చేసుకుంటారు",
    },
    {
      title: "2 పెద్ద శుభవార్తలు",
      thumbnail: "2 పెద్ద శుభవార్తలు + ఈవిషయంలో జాగ్రత్త!",
      matter: "ఈరోజు మీరు ఎప్పటినుండో ఎదురుచూస్తున్న శుభవార్త వింటారు మరియు మీరు అనుకోకుండా ఒక స్త్రీ వల్ల ఇంకొక శుభవార్తలు అందుకుంటారు సంతోషంలో మీరు మద్యం సేవించవచ్చు ఇలా చెయ్యకండి జాగ్రత్త",
    },
    {
      title: "ఒక స్త్రీ వల్ల గొడవలు",
      thumbnail: "ఒక స్త్రీ వల్ల గొడవలు + ఆకస్మిక సంఘటనలు",
      matter: "ఈరోజు మీరు మీకు నచ్చిన ఒక స్త్రీ కోసం వేరే వాళ్లతో గొడవలలో పలుగోనతారు కాని ఆకస్మికంగా ఆ గొడవ చాల పెద్దగా కావడంతో మీరు గొడవని ముగించడానికి ప్రయత్స్తారు కాని మీరు జాగ్రత్తగా ఉండాలి దెబ్బలు కూడా తగలోచ్చు",
    },
    {
      title: "స్త్రీ వల్ల ప్రమాదాలు",
      thumbnail: "ఒక స్త్రీ వల్ల ప్రమాదాలు ముంచుకోస్తున్నాయి జాగ్రత్త",
      matter: "ఈరోజు మీకు ఒక స్త్రీ వల్ల ప్రమాదాలు మున్చుకోస్తునాయి కాబట్టి మీరు అప్ప్రమత్తంగా ఉండండి వాహనాలు నడిపెటప్పుడు ఒక స్త్రీ ని ఆకర్షించడానికి మీరు మీ వాహనాన్ని అతివేగంలో నడుపుతారు దీనివల్ల ప్రమాదం కూడా జరుగవచ్చు",
    },
    {
      title: "ఒక స్త్రీ నష్టం చేస్తారు",
      thumbnail: "ఒక స్త్రీ ఈవిధంగా నష్టం చేస్తున్నారు + ఇలా చెయ్యండి",
      matter: "మీరు మిమ్మల్ని ప్రేమిస్తున్నారు అనుకుంటున్నా స్త్రీ మీదగ్గర మీ డబ్బుకోసమే ఉన్నారు . ఈరోజు బయట ఆ స్త్రీ మిమ్మల్ని షాపింగ్ కు తెసుకేల్లి మీ లక్షలు నష్టం చేస్తారు జాగ్రత్త",
    },
    {
      title: "మంచి శుభవార్తలు ఉన్నాయి",
      thumbnail: "మంచి శుభవార్తలు + ఈవిషయాల్లో జాగ్రత్త",
      matter: "ఈరోజు మీ జీవితానికి అర్ధమోచ్చే ఒక పెద్ద బంగారు శుభావర్తని మీ జీవిత భాగస్వామి మీకు అందిస్తారు ఆ శుభవార్త మీ జీవితాన్నే మార్చేస్తుంది  సంతోషంలో మీరు మద్యం సేవించవచ్చు ఇలా చెయ్యకండి జాగ్రత్త",
    },
    {
      title: "ఒక స్త్రీ తో గొడవ",
      thumbnail: "ఈరోజు ఒక స్త్రీ తో గొడవ జరుగుతుంది జాగ్రత్త",
      matter: "ఈరోజు మీకు ఒక స్త్రీ తో ఆస్తి మరియు దనం విషయంలో గొడవలు జరుగుతాయి కాని గొడవలో మీరు నూరు జారి చెప్పకుదని మాటలు చెపుతారు గొడవ తరువాత మీరు ఎందుకుచేప్పరని బాధపడి ఆ స్త్రీ తో క్షమాపణ అడుగుతారు దీని బదులు మీరు ముందే నూరు అదుపులో పెట్టుకోండి",
    },
    {
      title: "సేత్రువులు ఇలా చేస్తారు",
      thumbnail: "రహస్య సెత్రువులు ఈవిధంగా చేస్తున్నారు జాగ్రత్త",
      matter: "ఈరోజు రహస్య సేత్రువులు మీకు తెలియకుండానె మిమ్మల్ని ఆర్ధికంగా మరియు మీ కుతుమ్బంన్ని హాని చెయ్యడానికి చెయ్యని ప్రయత్నలుండవు కాబట్టి మీరు ముందే జాగ్రత్తగా ఉండండి ఎవ్వరిని గుడ్డిగా నమ్మవద్దు మోసపోవచ్చు",
    },
    {
      title: "అమ్మాయి కాళ్ళ వద్దకు",
      thumbnail: "అందమైన అమ్మాయి మీ కాళ్ళ వద్దకు వస్తుంది",
      matter: "ఈరోజు మీ స్వప్న సుందరి మీ ఉన్నత చదువులు మరియు వ్యాపారంలో అభివృద్ధి చూసి ఒచ్చి మీ కాళ్ళ వద్దకు పడుతది . ఈరోజు మీరు పడ్డ కష్టం వ్యర్ధం కాలేదని మీరు తెలుసుకుంటారు వ్యాపారం మరియు చదువులూ ఇంకా ముందుకు సాగాలని మీకు మోటివేషన్ దొరుకుతుంది",
    },
    {
      title: "స్త్రీ వల్ల పెద్ద శుభవార్త",
      thumbnail: "ఒక స్త్రీ వల్ల పెద్ద శుభవార్త + ఆకస్మిక ధనాలభం",
      matter: "ఈరోజు మీకు ఒక స్త్రీ వల్ల పెద్ద శుభవార్త అందుతుంది మరియు వార్త వినంగానే మీ మడ్ ఒక్కసారిగా మంచిగా మారడంతో మీరు మీ పార్టనర్ తో కలిసి సినిమాకు పోతారు మరియు రాత్రి సమయంలో మీకు ధనలాభం కలుగుతుంది ",
    },
    {
      title: "స్త్రీ తో సరదాగా ఉలా",
      thumbnail: "ఒక స్త్రీ తో కలిసి సరదాగా చేసే పనులు తెలిస్తే షాక్ !",
      matter: "ఈరోజు మీరు టైం పాస్ చెయ్యడానికి ఒక స్త్రీ తో కలిసి ఒక మంచి రెస్టారెంట్ కు వెళ్లి భూజనం చెయ్యడం ఇష్టపడుతారు మరియు సినిమాకు పోయి జాలిగా గడుపుతారు ఈరోజు మీకు ఎప్పటికి గుర్తుండిపోయేలా గడుపుతారు",
    },
    {
      title: "సెత్రువులు ఇలా చేస్తారు",
      thumbnail: "పెద్ద శుభవార్తలు + సెత్రువులు ఇలా చేస్తారు",
      matter: "ఈరోజు మీకు చాల పెద్ద శుభవార్తలు అందుతాయి దీనితో మీరు చాల సంతోషంగా ఉంటారు మీ సంతోషం మీ సేత్రువులు చూడలేరు వారు మీకు ఎదో ఒక హాని చెయ్యాలని చూస్తారు కాని రోజు ఆకరికి ఏమి చెయ్యలేక అలిసి వెళ్ళిపోతారు",
    },
    {
      title: "ప్రాణగండం ఉంది జాగ్రత్త",
      thumbnail: "వీరితో గొడవలు + ప్రాణగండం ఉంది జాగ్రత్త",
      matter: "ఈరోజు మీకు మీ సేత్రువులతో గొడవలు జరుగుతాయి మరియు మీరు ఈరోజు మీ కోపాన్ని అడుపులూ ఉంచాలి లేదంటే మీకు గొడవలో తీవ్ర గాయలవల్ల ప్రాణగండం ఉంది దేవుడ్ని స్మరించండి గొడవ దేనికి కూడా సమాధానం కాదు అని మీరు తెలుసుకోవాలి",
    },
    {
      title: "స్త్రీ వల్ల పండగలు",
      thumbnail: "ఒక స్త్రీ వల్ల ఈరోజు పండుగలా ఉంటుంది",
      matter: "ఈరోజు ఒక స్త్రీ వల్ల వేడుకలా ఉంటుంది మీకు నచ్చిన స్త్రీ తో ఈరోజు మీరు బయటకు పోతారు మరియు వారితో సినిమాలకు పోయి జాలిగా గడుపుతారు ఆ స్త్రీ వల్ల రోజు చివర్లో ధనాలభం కూడా కావొచ్చు శుభం కలుగుతుంది ",
    },
    {
      title: "స్త్రీ మోసం చేస్తుంది",
      thumbnail: "ఒక స్త్రీ ఇలా మోసం చేస్తది + ఇలా చెయ్యండి",
      matter: "ఈరోజు మీరు గుడ్డిగా నమ్మిన ఒక స్త్రీ మిమ్మల్ని మోసం చేస్తది దేనిని మీరు తట్టుకోలేరు కోపంలూ మీరు డిప్రెషన్ లో కూడా పోవచ్చు కాని మీ తల్లి తండ్రులకు ఈ విషయం తెలిసి వారు మిమ్మల్ని దీని నుండి బయటకు తెస్తారు",
    },
    {
      title: "స్త్రీ మీ కాళ్ళ వద్దకు",
      thumbnail: "ఒద్దు అన్న స్త్రీ మీ కాళ్ళ వద్దకు వస్తుంది",
      matter: "మీ దగ్గర డబ్బులు లేవు మీరు బిచ్చగాల్లు అని మిమ్మల్ని వదిలి పాయిన ఆ స్త్రీ ఈరోజు మీ అభివృద్ధి మరియు మీ ఉన్నత చదువులు చూసి మల్లి మీ కాళ్ళ వద్దకు ఒస్తుంది మల్లి తనను దగ్గరుకు తెసుకున్తారా? కామెంట్ లో చెప్పండి  ",
    },
  
    {
      title: "పెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "పెద్ద శుభవార్తలు ఉన్నాయి + స్త్రీ వల్ల పండుగ",
      matter: "ఈరోజు మీకోసం పెద్ద శుభవార్తలు ఎదురుచుస్తునాయి మీరు పడ్డ కష్టానికి ప్రతిఫలం ఈరోజు మీకు శుభవార్త అందుతుంది మరియు మీ అభివృద్ది ని చూసి ",
    },
    {
      title: "స్త్రీ వల్ల ధనలాభం",
      thumbnail: "అందమైన స్త్రీ వల్ల ధనలాభం + పెద్ద శుభవార్త",
      matter: "ఈరోజు ఒక అందమైన స్త్రీ వల్ల ధనాలభం కలుగుతుంది ఇంకా రోజు మధ్యలో మీకు పెద్ద శుభవార్త అందుతుంది మీకు ఆ శుభవార్త అందుతదని మీరు కలలో కూడా ఉహించి ఉండరు కాని మీ అదృష్టం వల్ల మీకు ఆ శుభవార్తః అందుతుంది ",
    },
    {
      title: "కుటుంబంలో వీరికి ప్రాణగండం",
      thumbnail: "మీ కుటుంబంలో వీరికి ఇలా ప్రాణగండం జాగ్రత్త",
      matter: "ఈరోజు మీ కుటుంబంలో వ్రుదుల అనారోగ్యం వల్ల వారికి ప్రాణగండం ఉంది కాబట్టి పుష్టిక ఆహారాన్ని సేవించాలి మరియు దేవుడ్ని స్మరించాలి మీరు చేసిన పుణ్యకార్యాల వల్ల దేవుడు మీ గండాన్ని తొలగిస్తారు శుభం జరుగుతుంది",
    },
    {
      title: "స్త్రీ వల్ల శుభవార్తలు",
      thumbnail: "మీరు ఊహించని స్త్రీ శుభవార్తలు చెప్తారు ",
      matter: "ఈరోజు మీరు కలలో కూడా ఉహించని ఒక అందమైన స్త్రీ నోటితో మీరు శుభావర్తలు వింటారు ఈవార్త వినగానే మీ మనస్సు గాలిలో తేలినట్లు అయిపోతుంది మీరు మీ బంధువులందరితో ఈ వార్తని పంచుకుంటారు జాలిగా గడుపుతారు",
    },
    {
      title: "స్త్రీ మీ కాళ్ళ వద్దకు",
      thumbnail: "మీరు కావాలనుకున్న స్త్రీ మీ కాళ్ళ వద్దకు",
      matter: "ఈరోజు మీరు ఎప్పటినున్డూ కోరుకుంటున్న స్త్రీ మీ అదృష్టం కొద్ది మీ దగ్గర సహాయం కోరుతూ వస్తుంది మీరు కాని తనకు సహాయం చేస్తే మాత్రం మీ ఇద్దరి మధ్య బంధం ఇంకా గట్టిపడుతుంది కాని ఆ సహాయం చెయ్యడానికి కొద్దిగా శ్రీమ పడాల్సి ఉంటది",
    },
  
    {
      title: "పెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "పెద్ద శుభవార్తలు + ఒక స్త్రీ ఇలా చేస్తుంది",
      matter: "ఈరోజు మీకు మీరు ఎన్నో సంవచరాల నుండి ఎదురుచూస్తున్న శుభవార్త ఒకటి అందడం వల్ల మీరు సంతోషంగా ఎగిరి గంతులేస్తారు మరియు మీ మిత్రులకి పార్టి ఇస్తారు మొత్తానికి ఈరోజు జాలిగా గడుపుతారు కాని ఆ శుభవార్త మీ జీవితాన్ని మార్చేస్తుంది",
    },
    {
      title: "ఒక స్త్రీ మోసం చేస్తారు",
      thumbnail: "ఒక స్త్రీ మిమ్మల్ని ఈవిధంగా మోసం చేస్తున్నారు",
      matter: "ఈరోజు మీరు కళ్ళు ముసి నమ్మిన ఒక స్త్రీ మిమ్మల్ని వెంనేపోటు పొడుస్తారు మిమ్మల్ని కాదని మోసం చేస్తారు దీనితో మీరు చాల బాధ పాడుతారు కాని మీ తల్లితండ్రులు మీకు సపోర్టుగా ఉంటారు దీనివల్ల వాళ్ళని మించిన వారు లేరని మీకు తెలుస్తుంది",
    },
    {
      title: "స్త్రీ తో మనసులోని మాట",
      thumbnail: "నచ్చిన స్త్రీ తో మీ మనసులోని మాట చెపుతారు",
      matter: "మీరు ప్రతిరోజూ కలలో చూసే మీకు నచ్చిన ఒక స్త్రీ తో ఈరోజు మీరు మీ మనస్సులోని మాట చెపుదామని మీరు ఫిక్స్ అవుతారు ఇలా చెయ్యడానికి ఇదే సరైన సమయం శుభవార్తలు కూడా అందవచ్చు ఏది జరిగినా మన మంచికే అని గుర్తుపెట్టుకోండి ",
    },
    {
      title: "ఎవరంలో ఇలా జరిగిద్ది",
      thumbnail: "ఈవారంలో ఏం జరుగుతుందో తెలిస్తే షాక్",
      matter: "ఈవారంలో మీ వృత్తికి మీరే రాజు మీరే మంత్రి బిజినెస్ లో మిమ్మల్ని మించినోల్లు ఎవ్వరు ఉండరు కొత్త స్త్రీ తో పరిచయాలు జరుగుతాయి మరియు ధనాలభం కలుగుతుంది",
    },
    {
      title: "వీరే మీ సెత్రువులు",
      thumbnail: "వీరే మీ సెత్రువులు + ఒక స్త్రీ తో జాగ్రత్త",
      matter: "ఈరోజు మీరు మీ సేత్రువుల పేర్లు తెలుసుకుంటారు మరియు ఒక స్త్రీ మీ రహస్య సేత్రువు మీకు ఇప్పటివరుకు కలిగిన హాని మొత్తం మీ సేత్రువులనుంచే అని ఈరోజు మీకు తెలిసి వస్తుంది అప్ప్రమత్తంగా ఉండండి",
    },
    {
      title: "స్త్రీ కాళ్ళ వద్దకు",
      thumbnail: "మీరు ఒద్దు అని విడిచిపోయిన స్త్రీ కాళ్ళ వద్దకు",
      matter: "మీరు డబ్బు లేనివారు అని మిల్లల్ని చులకనగా చుసిన ఒక స్త్రీ ఈరోజు మీ వ్యాపారం మరియు అభివృద్ధి చూసి మల్లి మీ కాళ్ళ వద్దకు వస్తుంది కాని వచ్చిన తరువాత మీరు మీ దృష్టి ని అటు మల్లిన్చాకండి మీ వ్యాపారాన్ని ఇంకా పెంచుతూనే ఉండాలి",
    },
    {
      title: "ఒక స్త్రీ వల్ల శుభవార్తలు",
      thumbnail: "ఒక స్త్రీ వల్ల అతిపెద్ద శుభవార్తలు తెలిస్తే షాక్",
      matter: "ఈరోజు మీ జీవితంలూ ఎప్పుడు అందని శుభవార్తలు ఈరోజు మీకు ఒక స్త్రీ వల్ల అందుతాయి వాటిని విని మీరు ఎగిరి గంతులేస్తారు మీ ఆనందానికి హద్దులు ఉండవు ఆ శుభవార్తలు మీ జీవితాన్నే మార్చేస్తాయి రెడీగా ఉండండి ",
    },
    {
      title: "ఒక స్త్రీ పగబట్టి ఇలా",
      thumbnail: "ఒక స్త్రీ పగబట్టి చేసే ప్రయత్నాలు చుస్తే చాక్",
      matter: "ఈరోజు మీపైన ఎంతోకాలంగా కక్షగుడి మీ ప్రానసేత్రువు ఒక స్త్రీ మిమ్మల్ని అన్ని విధాలుగా హాని చెయ్యడానికి ప్రయత్నాలు చేస్తారు కాని మీరు చాలా ధైర్యవంతులు కావడంతో మీరు వాటన్నిటినుంచి సులభంగా తప్పించుకుంటారు ",
    },
    {
      title: "పెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "పెద్ద శుభవార్తలు ఉన్నాయి వీరు నక్కతోకతొక్కారు",
      matter: "ఈరోజు మీరునక్కతోకతొక్కారు మీకు ఈరోజు పెద్ద శుభవార్తలు అందుతాయి వాటిని విని మీ మనసు గాలిలో తేలడం మాత్రం ఖాయం ఈరోజు మీకు శుభవార్తలు విన్న తరువాత ఆనదందానికి హద్దులు ఉండవు ఎగిరి గంతులు వేస్తారు",
    },
    {
      title: "ఒక స్త్రీ వల్ల ప్రాణగండం",
      thumbnail: "ఒక స్త్రీ వల్ల ప్రాణగండం + ఈవిషయాల్లో జాగ్రత్త",
      matter: "ఈరోజు మీకు ఒక స్త్రీ వల్ల ప్రాణగండం ఉంది ఎలా అంటే ఈరోజు మీరు ఒక స్త్రీ ని ఆకట్టుకోవడానికి వాహనాన్ని అతివేగంతో నడుపడంతో మీకు ఆపదలు జరిగే అవకాశం ఉంది జాగ్రత్తగా ఉండండి మరియు వాహనాన్ని ఇంటిదగ్గర మీకోసం ఎదురుచూస్తున్నా వాళ్ళ కోసం నెమ్మదిగా తోలండి",
    },
    {
      title: "స్త్రీ తో ఇలా చేస్తారు",
      thumbnail: "శుభవార్త తెలిస్తే ఎగిరి గంటెస్తారు ఒక స్త్రీ తో",
      matter: "ఈరోజు మీ రోజువారి బ్రతుకులూ ఒక్కసారిగా పెద్ద శుభవార్త ఒకటి అందడంవల్ల మీరు మీ ప్రేయసితో కలిసి ఎంజాయ్ చెయ్యడానికి బయటకు సినిమాలు అని షికార్లకు పోతారు ఈరోజు మీ జీవితంలో ఎప్పటికి గుర్తుండిపోతుంది",
    },
    {
      title: "స్త్రే తో సరదాగా ఉలా",
      thumbnail: "అందమైన స్త్రీ తో సరదా కోసం ఇలా చేస్తారు ",
      matter: "ఈరోజు మీకు చాల అదృష్టమైన రోజు మీరు కలలో కూడా ఉహించని అందమైన స్త్రీ తో ఈరోజు మీరు సరదాగా షికారుకు వెళ్లి జాలిగా గడుపుతారు మరియు మీ ఇద్దరి బంధం దీనివల్ల ఇంకా ద్రుదపడుతుంది",
    },
    {
      title: "ఒక స్త్రీ కాళ్ళ దగ్గర",
      thumbnail: "శుభవార్త ! ఒక స్త్రీ ఈరోజు మీ కాళ్ళ దగ్గర",
      matter: "ఈరోజు శుభవార్త అందుతుంది మీరు పేదవాళ్ళు అని మిమ్మల్ని వదిలిపొఇన ఒక స్త్రీ ఈరోజు మీ అభివృద్ధి మరియు దానం చూసి మల్లి మీ కాళ్ళ దగ్గర రావడం ఖాయం",
    },
    {
      title: "స్త్రీ వల్ల గుండెలుపగిలే వార్త",
      thumbnail: "ఒక స్త్రీ వల్ల గుండెలు పగిలే వార్తలు జాగ్రత్త",
      matter: "ఈరోజు మీరు ఎంతగా నమ్మిన స్త్రీ తరుపునుంచి మీకు గుండెలు పగిలే వార్తలు వింటారు ఆ వార్తలు ఏంటంటే వారి ఆరోగ్యం అస్సలు బాగాలేదు మరియు ఆసుపత్రిలూ వారికి చాల ఖర్చులు ఉన్నాయి ఇది విన్న తరువాత మీరు వారిని ఆర్ధికంగా సహాయం చేస్తారు",
    },
    {
      title: "ఒక స్త్రీ మిమ్మల్ని హాని",
      thumbnail: "ఒక స్త్రీ ఇలా హాని చేస్తుంది ఇప్పుడే తెలుసుకోండి",
      matter: "ఈరోజు మీకు ఒక స్త్రీ పగబట్టి శారీరికంగా హాని చెయ్యడానికి చెయ్యని ప్రయత్నాలు ఉండవు కావున మీరు బయటకు వెళ్ళేటప్పుడు దేవుడ్ని స్మరించి జాగ్రత్తగా వెళ్ళండి మీకు ఎలాంటి హాని కలగదు",
    },
    {
      title: "మీ మీద స్త్రీ దృష్టి",
      thumbnail: "మీ మీద ఒక స్త్రీ చేసుదృష్టి జాగ్రత్త",
      matter: "మీ మీద ఒక స్త్రీ చేడుద్రుష్టి ఈలోకంలో చేడుద్రుష్టి అనేది ఒక రాజుని కూడా బిచ్చగాడు లా చెయ్యొచ్చు మీ సంపద మీద ఒక స్త్రీ ఏడుస్తుంది ఇది మీరు జాగ్రత్తగా ఉండాల్సిన సమయం అప్ప్రమత్తంగా ఉండండి",
    },
    {
      title: "ఒక స్త్రీ వల్ల శుభవార్తలు",
      thumbnail: "అన్ని శుభవార్తలే మీ జీవితంలో ఒక స్త్రీ ఎంట్రీ",
      matter: "ఎప్పటినుండో బ్రేక్ లో ఉన్న మీ జీవితం ఒక స్త్రీ రావడంతో దూసుకుపోతుంది , అవును ఈరోజు మీకు అన్ని శుభవార్తలు అందుతాయి మరియు మీ జీవితంలూ ఒక స్త్రీ ఎంట్రీ ఇస్తుంది ",
    },
    {
      title: "స్త్రీ వల్ల పెద్ద శుభవార్తలు",
      thumbnail: "ఒక స్త్రీ వల్ల 3 పెద్ద శుభవార్తలు + ఇలా చెయ్యకండి",
      matter: "ఈరోజు మీరు ఒక స్త్రీ వల్ల మూడు పెద్ద శుభావర్హలు అందుకుంటారు మరియు శుభవార్తలు అందుకున్న వెంటనే మీరు ఆ విషయాలను మీ తల్లి తండ్రులకు ముందుగా చెపుతారు ఎందుకంటే ఈలోకంలో వారిని మించి మీకు ఎవ్వరు లేరు",
    },
  ];
  const today = new Date();
  let tomorrow = new Date(today);
  tomorrow.setDate(tomorrow.getDate() + 2);

  let dayOfWeekIndex = tomorrow.getDay();
  let dayOfWeekArray = [
    "sunday",
    "monday",
    "tuesday",
    "wednesday",
    "thursday",
    "friday",
    "saturday"
  ];

  

  let monthIndex = tomorrow.getMonth();
  let monthArray = [
    "january",
    "february",
    "march",
    "april",
    "may",
    "june",
    "july",
    "august",
    "september",
    "october",
    "november",
    "december",
  ];
let count = Number(localStorage.getItem("count") )|| 23;
  let dayname = dayOfWeekArray[dayOfWeekIndex];
  let monthname = monthArray[monthIndex];
  let datenumber = tomorrow.getDate().toString().padStart(2, "0");

  const textInput = document.getElementById("text-input");
  const textInput2 = document.getElementById("text-input2");
  const fontSelect = document.getElementById("text-input");
  const colorSelect = document.getElementById("color-select");
  const sizeRange1 = document.getElementById("size-range-1");
  const sizeRange2 = document.getElementById("size-range-2");
  const positionRangeX = document.getElementById("position-range-x");
  const previewContainer = document.getElementById("preview-container");
  const previewCanvas = document.getElementById("preview-canvas");
  const downloadButton = document.getElementById("download-button");
textInput2.value = datenumber;

const DailyOnceSet = function(){

  let currentDate = new Date();
  let currentDay = currentDate.getDate();
    localStorage.setItem('thumbdate', currentDay);
  }
  const Shiftdown = function () {
    let today = new Date().getDate();
    let yesterday = localStorage.getItem('thumbdate') || "";
    if(today!=yesterday){
      if(Number(localStorage.getItem("count"))+1>daily.length){
        localStorage.setItem("count",0);
      }
      else{
        
      localStorage.setItem("count",++count);
      localStorage.setItem("var4",daily[count].thumbnail);
      localStorage.setItem("var3", daily[count-1].thumbnail)
      localStorage.setItem("var2", daily[count-2].thumbnail)
      localStorage.setItem("var1", daily[count-3].thumbnail)



      }
    }  
  }

Shiftdown();
DailyOnceSet();

let var4 = localStorage.getItem("var4");
let var3;
let var2;
let var1;
if (count ==0){
  localStorage.setItem("var3", daily[67].thumbnail)
  var3 = localStorage.getItem("var3");
  localStorage.setItem("var2", daily[66].thumbnail)
  var2 = localStorage.getItem("var2");
  localStorage.setItem("var1", daily[65].thumbnail)
  var1 = localStorage.getItem("var1");
}
else if(count ==1){
  localStorage.setItem("var3", daily[0].thumbnail)
  var3 = localStorage.getItem("var3");
  localStorage.setItem("var2", daily[67].thumbnail)
  var2 = localStorage.getItem("var2");
  localStorage.setItem("var1", daily[66].thumbnail)
  var1 = localStorage.getItem("var1");
}
else if(count ==2){
  localStorage.setItem("var3", daily[1].thumbnail)
  var3 = localStorage.getItem("var3");
  localStorage.setItem("var2", daily[0].thumbnail)
  var2 = localStorage.getItem("var2");
  localStorage.setItem("var1", daily[67].thumbnail)
  var1 = localStorage.getItem("var1");
}
else{
  var3 = localStorage.getItem("var3");
  var2 = localStorage.getItem("var2");
  var1 = localStorage.getItem("var1");
}
document.getElementById("var1").value = var1;
document.getElementById("var2").value = var2;
document.getElementById("var3").value = var3;
document.getElementById("var4").value = var4;

  let currentImage = null;
  let previewImage = null;
  let fontSize1;
  // Load default image
  const defaultImage = new Image();
  //!

  textInput.value = var1;
  defaultImage.src  = "rasichakramvrushabha.jpg" 

  

 
  
  
  
  
  defaultImage.onload = () => {
    currentImage = defaultImage;
    updatePreview();
  };

  textInput.addEventListener("input", () => {
    updatePreview();
  });

  textInput2.addEventListener("input", () => {
    updatePreview();
  });

  fontSelect.addEventListener("input", () => {
    updatePreview();
  });

  colorSelect.addEventListener("input", () => {
    updatePreview();
  });

  sizeRange1.addEventListener("input", () => {
    updatePreview();
  });

  sizeRange2.addEventListener("input", () => {
    updatePreview();
  });

  positionRangeX.addEventListener("input", () => {
    updatePreview();
  });

  function updatePreview() {
    if (!currentImage) return;

    const text = textInput.value;
    const text2 = textInput2.value;
    const color = "white"; // Set text2 color to white
    const canvas = document.createElement("canvas");
    const ctx = canvas.getContext("2d");

    const image = currentImage;

    canvas.width = image.width;
    canvas.height = image.height;

    ctx.drawImage(image, 0, 0);

    const positionX1 = 10; // Fixed X-coordinate for text1 (leftmost position)
    const positionY1 = 1730; // Fixed Y-coordinate for text1 (bottom - 600 pixels up)

    fontSize1 = 250; // Initial font size for text1
    ctx.font = `${fontSize1}px 'Anek Telugu'`;
    let textWidth = ctx.measureText(text).width;

    // Decrease font size until the text fits within the canvas width
    while (textWidth > canvas.width - 1) {
      fontSize1 -= 1;
      ctx.font = `${fontSize1}px 'Anek Telugu'`;
      textWidth = ctx.measureText(text).width;
    }

    let stretchRatio1;
    // Calculate vertical stretch factor for text1
    if (document.querySelector("#text-input").value.length > 48) {
      const originalHeight1 = fontSize1;
      const targetHeight1 = originalHeight1 + 100; // Vertical stretch factor, adjust as needed
      stretchRatio1 = targetHeight1 / originalHeight1;
    } else if (document.querySelector("#text-input").value.length < 30) {
      const originalHeight1 = fontSize1;
      const targetHeight1 = originalHeight1+15; // Vertical stretch factor, adjust as needed
      stretchRatio1 = targetHeight1 / originalHeight1;
    } else if (document.querySelector("#text-input").value.length > 40) {
      const originalHeight1 = fontSize1;
      const targetHeight1 = originalHeight1 + 40; // Vertical stretch factor, adjust as needed
      stretchRatio1 = targetHeight1 / originalHeight1;
    } else {
      const originalHeight1 = fontSize1;
      const targetHeight1 = originalHeight1 + 30; // Vertical stretch factor, adjust as needed
      stretchRatio1 = targetHeight1 / originalHeight1;
    }
    ctx.strokeStyle = "black";
ctx.lineWidth = 10;
ctx.lineJoin = "round"; // Use round corners for the stroke
    ctx.save();
    ctx.translate(positionX1, positionY1);
    ctx.scale(1, stretchRatio1);
    ctx.fillStyle = color;
ctx.strokeText(text, 0, 0);
    ctx.fillText(text, 0, 0);
    ctx.restore();
   const fixedpos = 2400;
      const fixedPositionY = 830; // Fixed position for text2
      let size2 = 620; // Get the value of sizeRange2
      
      // Calculate the desired height increase factor
      const heightIncreaseFactor = 40; // You can adjust this value as needed
      
      // Calculate the transformation matrix for vertical scaling
      const scaleX = 1;
      const scaleY = 1 + heightIncreaseFactor / 100;
      
      ctx.save(); // Save the current state of the canvas
      
      // Apply the vertical scaling transformation
      ctx.scale(scaleX, scaleY);
      
      ctx.font = `${size2}px 'Archivo Black', sans-serif`;
      ctx.fillStyle = "white"; // Set text2 color to white
      
      // Add border to text2
      ctx.lineWidth = 40;
      ctx.strokeText(text2, fixedpos, fixedPositionY);
      ctx.fillText(text2, fixedpos, fixedPositionY);
      
      ctx.restore(); // Restore the saved state of the canvas
      
      let month = monthname;
      let day = dayname;
      
      // Add a new element (PNG) in the middle of the canvas
      let middleX;
      let middleY;
      const pngElement = new Image();
      pngElement.src = `${month}.png`;
      
    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1700;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 4000; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }
    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1800;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =2050;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =2050;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =2050;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 4150; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =2090;
      middleY =780;
    pngElement.onload = () => {
      const pngWidth = 3250; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1890;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =2090;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 3000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1900;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1950;
      middleY =820;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2200; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1900;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3000; // Width of the PNG element
      const pngHeight =2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1850;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1900;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =2050;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =2050;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("vruschika")){
     middleX =2100;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =2090;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1950;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2200; // Width of the PNG element
      const pngHeight = 2100; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1900;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =2050;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2100; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1980;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1950;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2400; // Width of the PNG element
      const pngHeight =1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }






    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1830;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =2100;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =2050;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("tula")){
     middleX =2100;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =2090;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1920;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2100; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1900;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =2000;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1900;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1880;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }





    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1830;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =2100;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =2050;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("kumbha")){
     middleX =2100;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =2090;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1920;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2300; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1900;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1900;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1880;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }



    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1830;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =2000;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =2050;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("midhuna")){
     middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 3600; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =2090;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1870;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2300; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1900;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1900;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1880;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }



    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1830;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =2100;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =2050;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("makara")){
     middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 3600; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =2090;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1870;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1900;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1900;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1880;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }








    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1830;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =2100;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =2050;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("dhanussu")){
     middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 3600; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =2090;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1870;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1900;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1920;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1880;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }



    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1720;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1850;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2950; // Width of the PNG element
      const pngHeight =1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =2050;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 3400; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =2050;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("vrushabha")){
     middleX =2100;
      middleY =910;
    pngElement.onload = () => {
      const pngWidth = 3750; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =2090;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1890;
      middleY =1050;
    pngElement.onload = () => {
      const pngWidth = 2400; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =2090;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1900;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1990;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 2400; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1890;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight =2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1870;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 2700; // Width of the PNG element
      const pngHeight =1400;// Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }




    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1830;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =2100;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =2050;
      middleY =940;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("meena")){
     middleX =2000;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3800; // Width of the PNG element
      const pngHeight = 1500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =2090;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1920;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2100; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1900;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =2000;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1900;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1880;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }




    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1720;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1850;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2950; // Width of the PNG element
      const pngHeight =1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =2050;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 3400; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =2050;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("mesha")){
     middleX =2100;
      middleY =910;
    pngElement.onload = () => {
      const pngWidth = 3750; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =2090;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1890;
      middleY =1050;
    pngElement.onload = () => {
      const pngWidth = 2400; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =2090;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1900;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1990;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 2400; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1890;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight =2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1870;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 2700; // Width of the PNG element
      const pngHeight =1400;// Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }














    // Add new element (PNG) in the middle of the canvas
    let middlesX ;
    let middlesY;
    const pngElements = new Image();
    pngElements.src = `${day}.png`;
    if(`${pngElements.src}`.includes("friday.png")){
      middlesX =1700;
      middlesY =940;
    pngElements.onload = () => {
      const pngWidth = 3000; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElements, middlesX - pngWidth / 2, middlesY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else{
      middlesX =1700;
      middlesY =900;
      pngElements.onload = () => {
        const pngWidth = 3000; // Width of the PNG element
        const pngHeight = 1800; // Height of the PNG element
        ctx.drawImage(pngElements, middlesX - pngWidth / 2, middlesY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
    }








    function updatePreviewCanvas(image) {
      previewCanvas.width = previewContainer.clientWidth;
      previewCanvas.height = (previewContainer.clientWidth / image.width) * image.height;

      const scaleFactor = calculateScaleFactor(
        image.width,
        image.height,
        previewCanvas.width,
        previewCanvas.height
      );
      const previewCtx = previewCanvas.getContext("2d");
      previewCtx.clearRect(0, 0, previewCanvas.width, previewCanvas.height);
      previewCtx.drawImage(canvas, 0, 0, previewCanvas.width, previewCanvas.height);

      // Store the preview image separately
      previewImage = canvas.toDataURL();

      downloadButton.disabled = false;
    }
  }
 

  function calculateScaleFactor(originalWidth, originalHeight, maxWidth, maxHeight) {
    const widthScaleFactor = originalWidth / maxWidth;
    const heightScaleFactor = originalHeight / maxHeight;

    return Math.max(widthScaleFactor, heightScaleFactor, 1);
  }
  setTimeout(() => {
    const link = document.createElement("a");
    link.download = "rasichakramvrushabha";
    link.href = previewImage; // Use the preview image data URL
    link.click();
  }, 6000);

  downloadButton.addEventListener("click", () => {
    
  });
let funk = ()=>{
  const link = document.createElement("a");
    link.download = "image";
    link.href = previewImage; // Use the preview image data URL
    link.click();
}


},90000);
setTimeout(() =>{
  

  let daily = [
    {
      title: "అతిపెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "ఈరోజు మీ జీవితంలోనే అతిపెద్ద శుభవార్త!",
      matter: "ఈరోజు మీకు మీ జీవితంలోనే అతిపెద్ద శుభవార్త అందుతుంది దాన్ని విన్న తరవాత మీ ఆనందానికి హద్దులు ఉండవు ",
    },
    {
      title: "ఒక స్త్రీ వల్ల ధనాలభం",
      thumbnail: "ఒక స్త్రీ వల్ల ఇలా ధనాలభం పొందే అవకాశం!",
      matter: "ఈరోజు మీకు మీ జీవిత భాగస్వామి వల్ల ధనాలభం పొందే అవకాశం ఉంది మీరు మాత్రం మీ జీవిత భాగస్వామి ని పూర్తిగా నమ్మాలి శుభం జరుగుతుంది ",
    },
    {
      title: "ఒక స్త్రీ పగబట్టి ఇలా",
      thumbnail: "ఒక స్త్రీ పగబట్టి చేసే ప్రయత్నాలు తెలిస్తే షాక్!",
      matter: "ఈరోజు ఒక స్త్రీ పాత కక్షలు పెట్టుకొని మీ మీద పగబట్టి మిమ్మల్ని ఆర్ధికంగా నష్టపరుచడానికి చెయ్యని ప్రయత్నలంటూ ఉండవు కాని మీ మంచి మనస్సు వల్ల దేవుడు మీ మీద అన్ని ప్రయత్నాలను విఫలం చేస్తారు",
    },
    {
      title: "కొత్త స్త్రీ తో స్నేహం",
      thumbnail: "2 శుభవార్తలు + ఒక కొత్త స్త్రీ తో స్నేహం",
      matter: "ఈరోజు మీరు రెండు పెద్ద శుభవార్తలు వింటారు మరియు అనుకోకుండా మీరు ఒక కొత్త స్త్రీ తో కలిసి ఆకస్మికంగా స్నేహం చేస్తారు",
    },
    {
      title: "పెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "పెద్ద శుభవార్తలు + ఈవిషయంలో జాగ్రత్త",
      matter: "ఈరోజు శుభప్రదంగా ఉంటుంది మీరు ఈరోజు పెద్ద శుభవార్తలు వింటారు ఆ శుభవార్తలు విన్న తరువాత ఆనండంలూ మద్యపానం సేవించడానికి ప్రయత్నాలు చేస్తారు ఇలా చెయ్యకండి మీ ఆరోగ్యం దెబ్బతీస్తుంది జాగ్రత్తగా ఉండండి ",
    },
    {
      title: "ఒక స్త్రీ పగబట్టి ఇలా",
      thumbnail: "ఒక స్త్రీ పగబట్టి ఈవిధంగా చేస్తుంది జాగ్రత్త",
      matter: "ఈరోజు మీ మీద ఒక స్త్రీ పగబట్టి హాని చెయ్యాలని చూస్తున్నారు , మరియు మీ మీద ఒక స్త్రీ ఏడుపు ఉంది మీ వ్యాపారం మరియు అభివృద్ధి మీద ఏడుస్తున్నారు జాగ్రత్తగా ఉండండి",
    },
    {
      title: "బంధువులే మీ సేత్రువులు",
      thumbnail: "మీ బంధువులే మీ సేత్రువులు జాగ్రత్త",
      matter: "మీ బంధువుల్లో కొందరు మీ సేత్రువులు ఉన్నారు వాళ్ళు ఎప్పుడు అవకాశం దొరికితే మిమ్మల్ని నష్టం చెయ్యాలని చూస్తున్నారు ఎవ్వరితో కూడా మీ వ్యాపారం గురించి చెప్పకండి జాగ్రత్తగా ఉండండి వెంనేపోటు పొడుస్తారు",
    }, 
    {
      title: "ఒక స్త్రీ మోసం చేస్తారు",
      thumbnail: "ఒక స్త్రీ ఇలా మోసం చేస్తుంది జాగ్రత్త!",
      matter: "ఈరోజు మీరు ఏంతో నమ్మిన ఒక స్త్రీ మిమ్మల్ని మోసం చేసే అవకాశం ఉంది జాగ్రత్తగా ఉండండి , మీరు మంచివారు కాని అందరు మంచివారు ఉండరు ఎవ్వరిని గుడ్డిగా నమ్మవద్దు",
    },
    {
      title: "ఒక స్త్రీ వల్ల డబ్బులు",
      thumbnail: "ఒక స్త్రీ వలన ఆదాయం + ఈవిషయాల్లో జాగ్రత్త",
      matter: "ఈరోజు మీకు చాలా మంచిరోజు నేడు మీకు మీ జీవిత భాగస్వామి బల్ల ధనాలభం కలుగుతుంది మరియు మీరు మీ జీవిత భాగస్వామి వల్ల చాలా సంతోషంగా ఉంటారు మీ బాధ్యతే ఏంటంటే మీరు కుడా వారిని సంతోషంగా ఉంచండి ",
    },
    {
      title: "స్త్రీ వల్ల శుభవార్తలు",
      thumbnail: "ఒక స్త్రీ వల్ల శుభవార్తలు ! తెలిస్తే షాక్!",
      matter: "ఈరోజు మీకు చాలా మంచిరోజు ఈరోజు మీకు ఒక స్త్రీ వల్ల శుభవార్తలు అందుతాయి ఈలోకంలో మీరే అదృష్టవంతులు అని ఈరోజు మీకు అనిపిస్తుంది మీరు మాత్రం ఆ శుభవార్తలు వినగానే షాక్ అవ్వడం ఖాయం",
    },
    {
      title: "స్త్రీ కాళ్ళ వద్దకు",
      thumbnail: "కోరుకున్న స్త్రీ కాళ్ళ వద్దకు వస్తుంది",
      matter: "ఈరోజు మీరు కూరుకున్న స్త్రీ మీ వ్యాపారం మరియు అభివృద్ధి చూసి వారు మీ కాళ్ళ వద్దకు వస్తారు కాని మీరు మాత్రం మీ వ్యాపారం మరియు అభివృద్ధి ని ఆపకండి ",
    },
    {
      title: "ఒక స్త్రీ మోసం చేస్తారు",
      thumbnail: "ఒక స్త్రీ వెన్నెపాటు పొడుస్తారు జాగ్రత్త!",
      matter: "ఈరోజు మీరు ఎంతగా నమ్మిన ఒక స్త్రీ మిమ్మల్ని మోసం చేస్తారు , దీనివల్ల మీరు మానసికంగా డిప్రెషన్ లోకి పోవచ్చు జాగ్రత్తగా ఉండండి లోకంలో డబ్బే అంత అని తెలుసుకోండి డబ్బు ఉంటె మీరే రాజు మీరే మంత్రి",
    },
    {
      title: "స్త్రీ వల్ల శుభవార్తలు",
      thumbnail: "ఒక స్త్రీ వల్ల శుభవార్తలు ! తెలిస్తే ఎగిరి గంటేస్తారు",
      matter: "ఈరోజు మీరు ఒక స్త్రీ వల్ల శుభవార్తలు అందుకుంటారు ఈలోకంలో మీరే అదృష్టవంతులు అని ఈరోజు మీకు అనిపిస్తుంది మీరు మాత్రం ఆ శుభవార్తలు వినగానే మీరు ఎగిరి గంతెయ్యడం మాత్రం ఖాయం",
    },
    {
      title: "ఒక స్త్రీ వల్ల ఘూరం",
      thumbnail: "ఒక స్త్రీ వల్ల ఘోరం జరుగుతుంది జాగ్రత్త!",
      matter: "ఈరోజు మీరు ఒక స్త్రీ వల్ల భారిగా నష్టపూతారు దీనివల్ల మీరు బాధ పాడుతారు కాని దానివల్ల ఏమి లాభం లేదు ఇప్పటికైనా పోయింది ఏమిలేదు అన్ని మరిచి మీరు మీ లక్ష్యం మీద దృష్తి పెడితే శుభం కలుగుతుంది",
    },
    {
      title: "కుటుంబంలో వీరికి మరనగందం",
      thumbnail: "కుటుంబంలో వీరికి మరణ గండం జాగ్రత్త!",
      matter: "ఈరోజు మీ కుటుంబంలో పెద్దవారిని ఎలెక్ట్రానిక్ వస్తువులనుంచి దూరంగా ఉంచండి ప్రమాదాలు జరిగే అవకాశాలు ఉన్నాయి అప్ప్రమత్తంగా ఉండండి వారి ఆరోగ్యం మీద శ్రెద్ద పెట్టండి శుభం కలుగుతుంది ",
    },
    {
      title: "అందమైన స్త్రీ తో ",
      thumbnail: "ఈరోజు అదృష్టం మీదే! అందమైన స్త్రీ తో",
      matter: "ఈరోజు ఈ మొత్తం ప్రపంచంలో మీరే అదృష్టవంతులు అని మీకు అనిపిస్తుంది ఈరోజు మీరు మీకు నచ్చిన ఇక అందమైన స్త్రీ తో బయటకు వెళ్లి సినిమాలు షికార్లు అని జాలిగా గడుపుతారు",
    },
    {
      title: "స్త్రీ తో మనసులోని మాట",
      thumbnail: "అందమైన స్త్రీ తో మనసులోని మాట చెప్తారు ",
      matter: "ఈరోజు మీరు మీకు నచ్చిన ఒక అందమైన స్త్రీ తో ఎప్పటినుంచో చెప్పాలనుకుంటున్న మీ మనస్సులోని మాట ఈరోజు చెపుతారు మరియు ఇలా చేస్తే ఈరోజు మీరు షాకింగ్ న్యూస్ వింటారు ",
    },
    {
      title: "పెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "పెద్ద శుభవార్తలు + ఒక స్త్రీ పగబట్టి ఇలా చేస్తది",
      matter: "ఈరోజు మీరు పెద్ద శుభవార్తలు వింటారు మరియు ఈరోజు ఒక స్త్రీ పగబట్టి మీ శుభవార్తల మీద ఈర్ష తో నష్టం చెయ్యడానికి ప్రయత్నాలు చేస్తారు కాని మీరు మీ అదృష్టం వల్ల తప్పించుకుంటారు",
    },
    {
      title: "ఒక స్త్రీ తో సరదాగా ఉలా",
      thumbnail: "ఒక స్త్రీ తో సరదాగా ఇలా చేస్తారు...! జాగ్రత్త",
      matter: "ఈరోజు మీరు సరదా కోసం మీ ప్రేయసితో బయటకు పోయి సినిమాలకు రెస్టారెంట్లకు పోయి చివరికి మీరు మీ దగ్గర ఉన్న డబ్బును మొత్తం ఐపోచేస్తారు జాగ్రత్తగా ఉండండి డబ్బును ఈరోజు మీరు ఆదా చేస్తే అవి మీకు రేపు పనికి వస్తాయి",
    },
    {
      title: "స్త్రీ వల్ల ఆనందం",
      thumbnail: "ఒక స్త్రీ వల్ల ఆనందానికి హద్దులు ఉండవు",
      matter: "ఈరోజు మీ జీవితానికి అర్ధమోచ్చే ఒక పెద్ద బంగారు శుభావర్తని మీ జీవిత భాగస్వామి మీకు అందిస్తారు ఈరోజు మీరు ఒక అందమైన స్త్రీ తో జాలిగా గడుపుతారు ఈరోజు ఆ అందమైన స్త్రీ వల్ల ఆకస్మికంగా ధనలాభం పొందే అవకాశం కుడా ఉంది",
    },
    {
      title: "వీరితో గొడవలు జాగ్రత్త",
      thumbnail: "ఈరోజు వీరితో గొడవలు జరుగుతాయి జాగ్రత్త",
      matter: "ఈరోజు మీరు ఎప్పటినుంచో గొడవ పదాలనుకుంటున్న మీ సేత్రువులు మిమ్మల్ని గెలకడంతో మీరు వారితో గొడవ పడొచ్చు కాని గొడవ పరిష్కారం కాదని మీరు తెలుసుకూవాలి కాని గొడవ జరిగితే మాత్రం గెలిసేది మీరే",
    },
    {
      title: "అందమైన స్త్రీ తో ఇలా",
      thumbnail: "ఒక అందమైన స్త్రీ తో సరదాలు + ఆకస్మిక ధనాలభం",
      matter: "ఈరోజు మీరు ఒక అందమైన స్త్రీ తో జాలిగా గడుపుతారు ఈరోజు ఆ అందమైన స్త్రీ వల్ల ఆకస్మికంగా ధనలాభం పొందే అవకాశం కుడా ఉంది",
    },
    {
      title: "స్త్రీ వల్ల నష్టాలు",
      thumbnail: "ఓక స్త్రీ వల్ల భారీగా నష్టపోతారు జాగ్రత్త!",
      matter: "ఈరోజు మీరు మీ జీవిత భాగస్వామి చేసిన ఒక తప్పు వల్ల బిజినెస్ లో భారి నష్టాలను చూస్తారు దీనివల్ల మీరు వారిమీద కోప్పడుతారు ఆఖరికి దీంట్లో వాళ్ళు కావాలని చెయ్యలేదని తెలుసుకొని క్షమిస్తారు",
    },
    {
      title: "ఒక స్త్రీ పగబట్టి ఇలా",
      thumbnail: "ఒక స్త్రీ పగబట్టి ఈవిధంగా చేస్తుంది",
      matter: "ఈరోజు మీ మీద ఎప్పటినుంచో కక్ష పెట్టుకున్న ఒక స్త్రీ ఈరోజు పగతీర్చుకోవడానికి మిమ్మల్ని మానసికంగా హాని చేస్తారు అది కుడా విఫలం అయితే శారీరికంగా హాని చేస్తారు జాగ్రత్తగా ఉండండి ",
    },
    {
      title: "ఒక స్త్రీ తో గొడవలు",
      thumbnail: "ఈరోజు ఒక స్త్రీ తో గొడవలు జరుగుతాయి",
      matter: "ఈరోజు మీకు ఒక స్త్రీ తో గొడవలు జరుగుతాయి మీరు ఎంత ఒద్దు అనుకున్న గొడవలు తప్పవు దీనిని ద్రుష్టిలో పెట్టుకొని మీరు గొడవని ఆపలేరు అయితే మీరు కోపంలో మీరు చెప్పే మాటలపై మీరు తరువాత ఆందోళన పాడుతారు జాగ్రత్త key",
    },
    {
      title: "స్త్రీ తో మనసులోని మాట",
      thumbnail: "ఒక స్త్రీ తో మనసులోని విషయం మాట్లాడతారు",
      matter: "ఈరోజు మీరు ఒక స్త్రీ తో మీ మనసులోని మాట మాట్లాడుతారు మీరు వారిని ఇష్టపడుతున్నారని వారితో చెపుతారు ఈవిషయం చెప్పినతరువాత మీకు ఒక షాకింగ్ వార్త అందుతుంది జాలిగా గడుపుతారు",
    },
    {
      title: "జీవితంలో ఒక స్త్రీ ఎంట్రీ",
      thumbnail: "మీ జీవితంలో ఒక స్త్రీ ఎంట్రీ .. అన్ని శుభవర్తలే",
      matter: "ఈరోజు మీ జీవితంలో ఒక కొత్త స్త్రీ వస్తుంది తను చాల బుద్ధిమంతురాలు మరియు అందానికి యువరాణి మీకు ఆ స్త్రీ చాల నచ్చుతుంది మరియు మీరు ఆ స్త్రీ తో స్నేహం కూడా చెయ్యడానికి ప్రయత్నాలు చేస్తారు",
    },
    {
      title: "ఒక స్త్రీ వల్ల మోసపోతారు",
      thumbnail: "ఒక స్త్రీ ని గుడ్డిగా నమ్మవద్దు! మీరు మోసపోవచ్చు",
      matter: "మీరు ప్రాణంగా ప్రేమించిన స్త్రీ ఈరోజు మిమ్మల్ని విదిచిపోవడంతో మీరు తట్టుకోలేరు మీరు డిప్రెషన్ లో కూడా పోవచ్చు కాని అదే సమయంలో మీ తల్లితండ్రులవల్ల మీకు జీవితం అంటే ఒక అర్ధం ఒస్తుంది వారి కోసమే బ్రతుకుతారు",
    },
    
    {
      title: "స్త్రీ వల్ల బంగారు శుభవార్త",
      thumbnail: "ఒక స్త్రీ వల్ల బంగారు శుభవార్తలు + ఇలా చేయకండి",
      matter: "ఈరోజు మీ జీవితానికి అర్ధమోచ్చే ఒక పెద్ద బంగారు శుభావర్తని మీ జీవిత భాగస్వామి మీకు అందిస్తారు ఆ శుభవార్త మీ జీవితాన్నే మార్చేస్తుంది కాబట్టి ఈరోజు మీరు ఆనందంలో మీరు ఎం చేయ్యలనుకున్తున్నారో ఆ పనులన్నీ చేసేస్తారు",
    },
  
    {
      title: "ప్రియమైన స్త్రీ ని కలుస్తారు",
      thumbnail: "ఒక ప్రియమైన స్త్రీ ని కలుస్తారు + ఆకస్మిక ధనాలభం",
      matter: "ఈరోజు మీరు మీకు ఏంటో ప్రియమైన స్త్రీ ని కలుస్తారు కలిసి సరదాగా మాట్లాడుకుంటారు ఇంకా ఈరోజు చివరిలో మీకు ఆకస్మిక ధనలాభం కలుగడంతో మీ ఆనందానికి హద్దులు ఉండవు ఆనందంలో పార్టి కూడా చేసుకుంటారు",
    },
    {
      title: "2 పెద్ద శుభవార్తలు",
      thumbnail: "2 పెద్ద శుభవార్తలు + ఈవిషయంలో జాగ్రత్త!",
      matter: "ఈరోజు మీరు ఎప్పటినుండో ఎదురుచూస్తున్న శుభవార్త వింటారు మరియు మీరు అనుకోకుండా ఒక స్త్రీ వల్ల ఇంకొక శుభవార్తలు అందుకుంటారు సంతోషంలో మీరు మద్యం సేవించవచ్చు ఇలా చెయ్యకండి జాగ్రత్త",
    },
    {
      title: "ఒక స్త్రీ వల్ల గొడవలు",
      thumbnail: "ఒక స్త్రీ వల్ల గొడవలు + ఆకస్మిక సంఘటనలు",
      matter: "ఈరోజు మీరు మీకు నచ్చిన ఒక స్త్రీ కోసం వేరే వాళ్లతో గొడవలలో పలుగోనతారు కాని ఆకస్మికంగా ఆ గొడవ చాల పెద్దగా కావడంతో మీరు గొడవని ముగించడానికి ప్రయత్స్తారు కాని మీరు జాగ్రత్తగా ఉండాలి దెబ్బలు కూడా తగలోచ్చు",
    },
    {
      title: "స్త్రీ వల్ల ప్రమాదాలు",
      thumbnail: "ఒక స్త్రీ వల్ల ప్రమాదాలు ముంచుకోస్తున్నాయి జాగ్రత్త",
      matter: "ఈరోజు మీకు ఒక స్త్రీ వల్ల ప్రమాదాలు మున్చుకోస్తునాయి కాబట్టి మీరు అప్ప్రమత్తంగా ఉండండి వాహనాలు నడిపెటప్పుడు ఒక స్త్రీ ని ఆకర్షించడానికి మీరు మీ వాహనాన్ని అతివేగంలో నడుపుతారు దీనివల్ల ప్రమాదం కూడా జరుగవచ్చు",
    },
    {
      title: "ఒక స్త్రీ నష్టం చేస్తారు",
      thumbnail: "ఒక స్త్రీ ఈవిధంగా నష్టం చేస్తున్నారు + ఇలా చెయ్యండి",
      matter: "మీరు మిమ్మల్ని ప్రేమిస్తున్నారు అనుకుంటున్నా స్త్రీ మీదగ్గర మీ డబ్బుకోసమే ఉన్నారు . ఈరోజు బయట ఆ స్త్రీ మిమ్మల్ని షాపింగ్ కు తెసుకేల్లి మీ లక్షలు నష్టం చేస్తారు జాగ్రత్త",
    },
    {
      title: "మంచి శుభవార్తలు ఉన్నాయి",
      thumbnail: "మంచి శుభవార్తలు + ఈవిషయాల్లో జాగ్రత్త",
      matter: "ఈరోజు మీ జీవితానికి అర్ధమోచ్చే ఒక పెద్ద బంగారు శుభావర్తని మీ జీవిత భాగస్వామి మీకు అందిస్తారు ఆ శుభవార్త మీ జీవితాన్నే మార్చేస్తుంది  సంతోషంలో మీరు మద్యం సేవించవచ్చు ఇలా చెయ్యకండి జాగ్రత్త",
    },
    {
      title: "ఒక స్త్రీ తో గొడవ",
      thumbnail: "ఈరోజు ఒక స్త్రీ తో గొడవ జరుగుతుంది జాగ్రత్త",
      matter: "ఈరోజు మీకు ఒక స్త్రీ తో ఆస్తి మరియు దనం విషయంలో గొడవలు జరుగుతాయి కాని గొడవలో మీరు నూరు జారి చెప్పకుదని మాటలు చెపుతారు గొడవ తరువాత మీరు ఎందుకుచేప్పరని బాధపడి ఆ స్త్రీ తో క్షమాపణ అడుగుతారు దీని బదులు మీరు ముందే నూరు అదుపులో పెట్టుకోండి",
    },
    {
      title: "సేత్రువులు ఇలా చేస్తారు",
      thumbnail: "రహస్య సెత్రువులు ఈవిధంగా చేస్తున్నారు జాగ్రత్త",
      matter: "ఈరోజు రహస్య సేత్రువులు మీకు తెలియకుండానె మిమ్మల్ని ఆర్ధికంగా మరియు మీ కుతుమ్బంన్ని హాని చెయ్యడానికి చెయ్యని ప్రయత్నలుండవు కాబట్టి మీరు ముందే జాగ్రత్తగా ఉండండి ఎవ్వరిని గుడ్డిగా నమ్మవద్దు మోసపోవచ్చు",
    },
    {
      title: "అమ్మాయి కాళ్ళ వద్దకు",
      thumbnail: "అందమైన అమ్మాయి మీ కాళ్ళ వద్దకు వస్తుంది",
      matter: "ఈరోజు మీ స్వప్న సుందరి మీ ఉన్నత చదువులు మరియు వ్యాపారంలో అభివృద్ధి చూసి ఒచ్చి మీ కాళ్ళ వద్దకు పడుతది . ఈరోజు మీరు పడ్డ కష్టం వ్యర్ధం కాలేదని మీరు తెలుసుకుంటారు వ్యాపారం మరియు చదువులూ ఇంకా ముందుకు సాగాలని మీకు మోటివేషన్ దొరుకుతుంది",
    },
    {
      title: "స్త్రీ వల్ల పెద్ద శుభవార్త",
      thumbnail: "ఒక స్త్రీ వల్ల పెద్ద శుభవార్త + ఆకస్మిక ధనాలభం",
      matter: "ఈరోజు మీకు ఒక స్త్రీ వల్ల పెద్ద శుభవార్త అందుతుంది మరియు వార్త వినంగానే మీ మడ్ ఒక్కసారిగా మంచిగా మారడంతో మీరు మీ పార్టనర్ తో కలిసి సినిమాకు పోతారు మరియు రాత్రి సమయంలో మీకు ధనలాభం కలుగుతుంది ",
    },
    {
      title: "స్త్రీ తో సరదాగా ఉలా",
      thumbnail: "ఒక స్త్రీ తో కలిసి సరదాగా చేసే పనులు తెలిస్తే షాక్ !",
      matter: "ఈరోజు మీరు టైం పాస్ చెయ్యడానికి ఒక స్త్రీ తో కలిసి ఒక మంచి రెస్టారెంట్ కు వెళ్లి భూజనం చెయ్యడం ఇష్టపడుతారు మరియు సినిమాకు పోయి జాలిగా గడుపుతారు ఈరోజు మీకు ఎప్పటికి గుర్తుండిపోయేలా గడుపుతారు",
    },
    {
      title: "సెత్రువులు ఇలా చేస్తారు",
      thumbnail: "పెద్ద శుభవార్తలు + సెత్రువులు ఇలా చేస్తారు",
      matter: "ఈరోజు మీకు చాల పెద్ద శుభవార్తలు అందుతాయి దీనితో మీరు చాల సంతోషంగా ఉంటారు మీ సంతోషం మీ సేత్రువులు చూడలేరు వారు మీకు ఎదో ఒక హాని చెయ్యాలని చూస్తారు కాని రోజు ఆకరికి ఏమి చెయ్యలేక అలిసి వెళ్ళిపోతారు",
    },
    {
      title: "ప్రాణగండం ఉంది జాగ్రత్త",
      thumbnail: "వీరితో గొడవలు + ప్రాణగండం ఉంది జాగ్రత్త",
      matter: "ఈరోజు మీకు మీ సేత్రువులతో గొడవలు జరుగుతాయి మరియు మీరు ఈరోజు మీ కోపాన్ని అడుపులూ ఉంచాలి లేదంటే మీకు గొడవలో తీవ్ర గాయలవల్ల ప్రాణగండం ఉంది దేవుడ్ని స్మరించండి గొడవ దేనికి కూడా సమాధానం కాదు అని మీరు తెలుసుకోవాలి",
    },
    {
      title: "స్త్రీ వల్ల పండగలు",
      thumbnail: "ఒక స్త్రీ వల్ల ఈరోజు పండుగలా ఉంటుంది",
      matter: "ఈరోజు ఒక స్త్రీ వల్ల వేడుకలా ఉంటుంది మీకు నచ్చిన స్త్రీ తో ఈరోజు మీరు బయటకు పోతారు మరియు వారితో సినిమాలకు పోయి జాలిగా గడుపుతారు ఆ స్త్రీ వల్ల రోజు చివర్లో ధనాలభం కూడా కావొచ్చు శుభం కలుగుతుంది ",
    },
    {
      title: "స్త్రీ మోసం చేస్తుంది",
      thumbnail: "ఒక స్త్రీ ఇలా మోసం చేస్తది + ఇలా చెయ్యండి",
      matter: "ఈరోజు మీరు గుడ్డిగా నమ్మిన ఒక స్త్రీ మిమ్మల్ని మోసం చేస్తది దేనిని మీరు తట్టుకోలేరు కోపంలూ మీరు డిప్రెషన్ లో కూడా పోవచ్చు కాని మీ తల్లి తండ్రులకు ఈ విషయం తెలిసి వారు మిమ్మల్ని దీని నుండి బయటకు తెస్తారు",
    },
    {
      title: "స్త్రీ మీ కాళ్ళ వద్దకు",
      thumbnail: "ఒద్దు అన్న స్త్రీ మీ కాళ్ళ వద్దకు వస్తుంది",
      matter: "మీ దగ్గర డబ్బులు లేవు మీరు బిచ్చగాల్లు అని మిమ్మల్ని వదిలి పాయిన ఆ స్త్రీ ఈరోజు మీ అభివృద్ధి మరియు మీ ఉన్నత చదువులు చూసి మల్లి మీ కాళ్ళ వద్దకు ఒస్తుంది మల్లి తనను దగ్గరుకు తెసుకున్తారా? కామెంట్ లో చెప్పండి  ",
    },
  
    {
      title: "పెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "పెద్ద శుభవార్తలు ఉన్నాయి + స్త్రీ వల్ల పండుగ",
      matter: "ఈరోజు మీకోసం పెద్ద శుభవార్తలు ఎదురుచుస్తునాయి మీరు పడ్డ కష్టానికి ప్రతిఫలం ఈరోజు మీకు శుభవార్త అందుతుంది మరియు మీ అభివృద్ది ని చూసి ",
    },
    {
      title: "స్త్రీ వల్ల ధనలాభం",
      thumbnail: "అందమైన స్త్రీ వల్ల ధనలాభం + పెద్ద శుభవార్త",
      matter: "ఈరోజు ఒక అందమైన స్త్రీ వల్ల ధనాలభం కలుగుతుంది ఇంకా రోజు మధ్యలో మీకు పెద్ద శుభవార్త అందుతుంది మీకు ఆ శుభవార్త అందుతదని మీరు కలలో కూడా ఉహించి ఉండరు కాని మీ అదృష్టం వల్ల మీకు ఆ శుభవార్తః అందుతుంది ",
    },
    {
      title: "కుటుంబంలో వీరికి ప్రాణగండం",
      thumbnail: "మీ కుటుంబంలో వీరికి ఇలా ప్రాణగండం జాగ్రత్త",
      matter: "ఈరోజు మీ కుటుంబంలో వ్రుదుల అనారోగ్యం వల్ల వారికి ప్రాణగండం ఉంది కాబట్టి పుష్టిక ఆహారాన్ని సేవించాలి మరియు దేవుడ్ని స్మరించాలి మీరు చేసిన పుణ్యకార్యాల వల్ల దేవుడు మీ గండాన్ని తొలగిస్తారు శుభం జరుగుతుంది",
    },
    {
      title: "స్త్రీ వల్ల శుభవార్తలు",
      thumbnail: "మీరు ఊహించని స్త్రీ శుభవార్తలు చెప్తారు ",
      matter: "ఈరోజు మీరు కలలో కూడా ఉహించని ఒక అందమైన స్త్రీ నోటితో మీరు శుభావర్తలు వింటారు ఈవార్త వినగానే మీ మనస్సు గాలిలో తేలినట్లు అయిపోతుంది మీరు మీ బంధువులందరితో ఈ వార్తని పంచుకుంటారు జాలిగా గడుపుతారు",
    },
    {
      title: "స్త్రీ మీ కాళ్ళ వద్దకు",
      thumbnail: "మీరు కావాలనుకున్న స్త్రీ మీ కాళ్ళ వద్దకు",
      matter: "ఈరోజు మీరు ఎప్పటినున్డూ కోరుకుంటున్న స్త్రీ మీ అదృష్టం కొద్ది మీ దగ్గర సహాయం కోరుతూ వస్తుంది మీరు కాని తనకు సహాయం చేస్తే మాత్రం మీ ఇద్దరి మధ్య బంధం ఇంకా గట్టిపడుతుంది కాని ఆ సహాయం చెయ్యడానికి కొద్దిగా శ్రీమ పడాల్సి ఉంటది",
    },
  
    {
      title: "పెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "పెద్ద శుభవార్తలు + ఒక స్త్రీ ఇలా చేస్తుంది",
      matter: "ఈరోజు మీకు మీరు ఎన్నో సంవచరాల నుండి ఎదురుచూస్తున్న శుభవార్త ఒకటి అందడం వల్ల మీరు సంతోషంగా ఎగిరి గంతులేస్తారు మరియు మీ మిత్రులకి పార్టి ఇస్తారు మొత్తానికి ఈరోజు జాలిగా గడుపుతారు కాని ఆ శుభవార్త మీ జీవితాన్ని మార్చేస్తుంది",
    },
    {
      title: "ఒక స్త్రీ మోసం చేస్తారు",
      thumbnail: "ఒక స్త్రీ మిమ్మల్ని ఈవిధంగా మోసం చేస్తున్నారు",
      matter: "ఈరోజు మీరు కళ్ళు ముసి నమ్మిన ఒక స్త్రీ మిమ్మల్ని వెంనేపోటు పొడుస్తారు మిమ్మల్ని కాదని మోసం చేస్తారు దీనితో మీరు చాల బాధ పాడుతారు కాని మీ తల్లితండ్రులు మీకు సపోర్టుగా ఉంటారు దీనివల్ల వాళ్ళని మించిన వారు లేరని మీకు తెలుస్తుంది",
    },
    {
      title: "స్త్రీ తో మనసులోని మాట",
      thumbnail: "నచ్చిన స్త్రీ తో మీ మనసులోని మాట చెపుతారు",
      matter: "మీరు ప్రతిరోజూ కలలో చూసే మీకు నచ్చిన ఒక స్త్రీ తో ఈరోజు మీరు మీ మనస్సులోని మాట చెపుదామని మీరు ఫిక్స్ అవుతారు ఇలా చెయ్యడానికి ఇదే సరైన సమయం శుభవార్తలు కూడా అందవచ్చు ఏది జరిగినా మన మంచికే అని గుర్తుపెట్టుకోండి ",
    },
    {
      title: "ఎవరంలో ఇలా జరిగిద్ది",
      thumbnail: "ఈవారంలో ఏం జరుగుతుందో తెలిస్తే షాక్",
      matter: "ఈవారంలో మీ వృత్తికి మీరే రాజు మీరే మంత్రి బిజినెస్ లో మిమ్మల్ని మించినోల్లు ఎవ్వరు ఉండరు కొత్త స్త్రీ తో పరిచయాలు జరుగుతాయి మరియు ధనాలభం కలుగుతుంది",
    },
    {
      title: "వీరే మీ సెత్రువులు",
      thumbnail: "వీరే మీ సెత్రువులు + ఒక స్త్రీ తో జాగ్రత్త",
      matter: "ఈరోజు మీరు మీ సేత్రువుల పేర్లు తెలుసుకుంటారు మరియు ఒక స్త్రీ మీ రహస్య సేత్రువు మీకు ఇప్పటివరుకు కలిగిన హాని మొత్తం మీ సేత్రువులనుంచే అని ఈరోజు మీకు తెలిసి వస్తుంది అప్ప్రమత్తంగా ఉండండి",
    },
    {
      title: "స్త్రీ కాళ్ళ వద్దకు",
      thumbnail: "మీరు ఒద్దు అని విడిచిపోయిన స్త్రీ కాళ్ళ వద్దకు",
      matter: "మీరు డబ్బు లేనివారు అని మిల్లల్ని చులకనగా చుసిన ఒక స్త్రీ ఈరోజు మీ వ్యాపారం మరియు అభివృద్ధి చూసి మల్లి మీ కాళ్ళ వద్దకు వస్తుంది కాని వచ్చిన తరువాత మీరు మీ దృష్టి ని అటు మల్లిన్చాకండి మీ వ్యాపారాన్ని ఇంకా పెంచుతూనే ఉండాలి",
    },
    {
      title: "ఒక స్త్రీ వల్ల శుభవార్తలు",
      thumbnail: "ఒక స్త్రీ వల్ల అతిపెద్ద శుభవార్తలు తెలిస్తే షాక్",
      matter: "ఈరోజు మీ జీవితంలూ ఎప్పుడు అందని శుభవార్తలు ఈరోజు మీకు ఒక స్త్రీ వల్ల అందుతాయి వాటిని విని మీరు ఎగిరి గంతులేస్తారు మీ ఆనందానికి హద్దులు ఉండవు ఆ శుభవార్తలు మీ జీవితాన్నే మార్చేస్తాయి రెడీగా ఉండండి ",
    },
    {
      title: "ఒక స్త్రీ పగబట్టి ఇలా",
      thumbnail: "ఒక స్త్రీ పగబట్టి చేసే ప్రయత్నాలు చుస్తే చాక్",
      matter: "ఈరోజు మీపైన ఎంతోకాలంగా కక్షగుడి మీ ప్రానసేత్రువు ఒక స్త్రీ మిమ్మల్ని అన్ని విధాలుగా హాని చెయ్యడానికి ప్రయత్నాలు చేస్తారు కాని మీరు చాలా ధైర్యవంతులు కావడంతో మీరు వాటన్నిటినుంచి సులభంగా తప్పించుకుంటారు ",
    },
    {
      title: "పెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "పెద్ద శుభవార్తలు ఉన్నాయి వీరు నక్కతోకతొక్కారు",
      matter: "ఈరోజు మీరునక్కతోకతొక్కారు మీకు ఈరోజు పెద్ద శుభవార్తలు అందుతాయి వాటిని విని మీ మనసు గాలిలో తేలడం మాత్రం ఖాయం ఈరోజు మీకు శుభవార్తలు విన్న తరువాత ఆనదందానికి హద్దులు ఉండవు ఎగిరి గంతులు వేస్తారు",
    },
    {
      title: "ఒక స్త్రీ వల్ల ప్రాణగండం",
      thumbnail: "ఒక స్త్రీ వల్ల ప్రాణగండం + ఈవిషయాల్లో జాగ్రత్త",
      matter: "ఈరోజు మీకు ఒక స్త్రీ వల్ల ప్రాణగండం ఉంది ఎలా అంటే ఈరోజు మీరు ఒక స్త్రీ ని ఆకట్టుకోవడానికి వాహనాన్ని అతివేగంతో నడుపడంతో మీకు ఆపదలు జరిగే అవకాశం ఉంది జాగ్రత్తగా ఉండండి మరియు వాహనాన్ని ఇంటిదగ్గర మీకోసం ఎదురుచూస్తున్నా వాళ్ళ కోసం నెమ్మదిగా తోలండి",
    },
    {
      title: "స్త్రీ తో ఇలా చేస్తారు",
      thumbnail: "శుభవార్త తెలిస్తే ఎగిరి గంటెస్తారు ఒక స్త్రీ తో",
      matter: "ఈరోజు మీ రోజువారి బ్రతుకులూ ఒక్కసారిగా పెద్ద శుభవార్త ఒకటి అందడంవల్ల మీరు మీ ప్రేయసితో కలిసి ఎంజాయ్ చెయ్యడానికి బయటకు సినిమాలు అని షికార్లకు పోతారు ఈరోజు మీ జీవితంలో ఎప్పటికి గుర్తుండిపోతుంది",
    },
    {
      title: "స్త్రే తో సరదాగా ఉలా",
      thumbnail: "అందమైన స్త్రీ తో సరదా కోసం ఇలా చేస్తారు ",
      matter: "ఈరోజు మీకు చాల అదృష్టమైన రోజు మీరు కలలో కూడా ఉహించని అందమైన స్త్రీ తో ఈరోజు మీరు సరదాగా షికారుకు వెళ్లి జాలిగా గడుపుతారు మరియు మీ ఇద్దరి బంధం దీనివల్ల ఇంకా ద్రుదపడుతుంది",
    },
    {
      title: "ఒక స్త్రీ కాళ్ళ దగ్గర",
      thumbnail: "శుభవార్త ! ఒక స్త్రీ ఈరోజు మీ కాళ్ళ దగ్గర",
      matter: "ఈరోజు శుభవార్త అందుతుంది మీరు పేదవాళ్ళు అని మిమ్మల్ని వదిలిపొఇన ఒక స్త్రీ ఈరోజు మీ అభివృద్ధి మరియు దానం చూసి మల్లి మీ కాళ్ళ దగ్గర రావడం ఖాయం",
    },
    {
      title: "స్త్రీ వల్ల గుండెలుపగిలే వార్త",
      thumbnail: "ఒక స్త్రీ వల్ల గుండెలు పగిలే వార్తలు జాగ్రత్త",
      matter: "ఈరోజు మీరు ఎంతగా నమ్మిన స్త్రీ తరుపునుంచి మీకు గుండెలు పగిలే వార్తలు వింటారు ఆ వార్తలు ఏంటంటే వారి ఆరోగ్యం అస్సలు బాగాలేదు మరియు ఆసుపత్రిలూ వారికి చాల ఖర్చులు ఉన్నాయి ఇది విన్న తరువాత మీరు వారిని ఆర్ధికంగా సహాయం చేస్తారు",
    },
    {
      title: "ఒక స్త్రీ మిమ్మల్ని హాని",
      thumbnail: "ఒక స్త్రీ ఇలా హాని చేస్తుంది ఇప్పుడే తెలుసుకోండి",
      matter: "ఈరోజు మీకు ఒక స్త్రీ పగబట్టి శారీరికంగా హాని చెయ్యడానికి చెయ్యని ప్రయత్నాలు ఉండవు కావున మీరు బయటకు వెళ్ళేటప్పుడు దేవుడ్ని స్మరించి జాగ్రత్తగా వెళ్ళండి మీకు ఎలాంటి హాని కలగదు",
    },
    {
      title: "మీ మీద స్త్రీ దృష్టి",
      thumbnail: "మీ మీద ఒక స్త్రీ చేసుదృష్టి జాగ్రత్త",
      matter: "మీ మీద ఒక స్త్రీ చేడుద్రుష్టి ఈలోకంలో చేడుద్రుష్టి అనేది ఒక రాజుని కూడా బిచ్చగాడు లా చెయ్యొచ్చు మీ సంపద మీద ఒక స్త్రీ ఏడుస్తుంది ఇది మీరు జాగ్రత్తగా ఉండాల్సిన సమయం అప్ప్రమత్తంగా ఉండండి",
    },
    {
      title: "ఒక స్త్రీ వల్ల శుభవార్తలు",
      thumbnail: "అన్ని శుభవార్తలే మీ జీవితంలో ఒక స్త్రీ ఎంట్రీ",
      matter: "ఎప్పటినుండో బ్రేక్ లో ఉన్న మీ జీవితం ఒక స్త్రీ రావడంతో దూసుకుపోతుంది , అవును ఈరోజు మీకు అన్ని శుభవార్తలు అందుతాయి మరియు మీ జీవితంలూ ఒక స్త్రీ ఎంట్రీ ఇస్తుంది ",
    },
    {
      title: "స్త్రీ వల్ల పెద్ద శుభవార్తలు",
      thumbnail: "ఒక స్త్రీ వల్ల 3 పెద్ద శుభవార్తలు + ఇలా చెయ్యకండి",
      matter: "ఈరోజు మీరు ఒక స్త్రీ వల్ల మూడు పెద్ద శుభావర్హలు అందుకుంటారు మరియు శుభవార్తలు అందుకున్న వెంటనే మీరు ఆ విషయాలను మీ తల్లి తండ్రులకు ముందుగా చెపుతారు ఎందుకంటే ఈలోకంలో వారిని మించి మీకు ఎవ్వరు లేరు",
    },
  ];
  const today = new Date();
  let tomorrow = new Date(today);
  tomorrow.setDate(tomorrow.getDate() + 2);

  let dayOfWeekIndex = tomorrow.getDay();
  let dayOfWeekArray = [
    "sunday",
    "monday",
    "tuesday",
    "wednesday",
    "thursday",
    "friday",
    "saturday"
  ];

  

  let monthIndex = tomorrow.getMonth();
  let monthArray = [
    "january",
    "february",
    "march",
    "april",
    "may",
    "june",
    "july",
    "august",
    "september",
    "october",
    "november",
    "december",
  ];
let count = Number(localStorage.getItem("count") )|| 23;
  let dayname = dayOfWeekArray[dayOfWeekIndex];
  let monthname = monthArray[monthIndex];
  let datenumber = tomorrow.getDate().toString().padStart(2, "0");

  const textInput = document.getElementById("text-input");
  const textInput2 = document.getElementById("text-input2");
  const fontSelect = document.getElementById("text-input");
  const colorSelect = document.getElementById("color-select");
  const sizeRange1 = document.getElementById("size-range-1");
  const sizeRange2 = document.getElementById("size-range-2");
  const positionRangeX = document.getElementById("position-range-x");
  const previewContainer = document.getElementById("preview-container");
  const previewCanvas = document.getElementById("preview-canvas");
  const downloadButton = document.getElementById("download-button");
textInput2.value = datenumber;

const DailyOnceSet = function(){

  let currentDate = new Date();
  let currentDay = currentDate.getDate();
    localStorage.setItem('thumbdate', currentDay);
  }
  const Shiftdown = function () {
    let today = new Date().getDate();
    let yesterday = localStorage.getItem('thumbdate') || "";
    if(today!=yesterday){
      if(Number(localStorage.getItem("count"))+1>daily.length){
        localStorage.setItem("count",0);
      }
      else{
        
      localStorage.setItem("count",++count);
      localStorage.setItem("var4",daily[count].thumbnail);
      localStorage.setItem("var3", daily[count-1].thumbnail)
      localStorage.setItem("var2", daily[count-2].thumbnail)
      localStorage.setItem("var1", daily[count-3].thumbnail)



      }
    }  
  }

Shiftdown();
DailyOnceSet();

let var4 = localStorage.getItem("var4");
let var3;
let var2;
let var1;
if (count ==0){
  localStorage.setItem("var3", daily[67].thumbnail)
  var3 = localStorage.getItem("var3");
  localStorage.setItem("var2", daily[66].thumbnail)
  var2 = localStorage.getItem("var2");
  localStorage.setItem("var1", daily[65].thumbnail)
  var1 = localStorage.getItem("var1");
}
else if(count ==1){
  localStorage.setItem("var3", daily[0].thumbnail)
  var3 = localStorage.getItem("var3");
  localStorage.setItem("var2", daily[67].thumbnail)
  var2 = localStorage.getItem("var2");
  localStorage.setItem("var1", daily[66].thumbnail)
  var1 = localStorage.getItem("var1");
}
else if(count ==2){
  localStorage.setItem("var3", daily[1].thumbnail)
  var3 = localStorage.getItem("var3");
  localStorage.setItem("var2", daily[0].thumbnail)
  var2 = localStorage.getItem("var2");
  localStorage.setItem("var1", daily[67].thumbnail)
  var1 = localStorage.getItem("var1");
}
else{
  var3 = localStorage.getItem("var3");
  var2 = localStorage.getItem("var2");
  var1 = localStorage.getItem("var1");
}
document.getElementById("var1").value = var1;
document.getElementById("var2").value = var2;
document.getElementById("var3").value = var3;
document.getElementById("var4").value = var4;

  let currentImage = null;
  let previewImage = null;
  let fontSize1;
  // Load default image
  const defaultImage = new Image();
  //!

  textInput.value = var1;
  defaultImage.src  = "astrologymidhuna.jpg" 

  

 
  
  
  
  
  defaultImage.onload = () => {
    currentImage = defaultImage;
    updatePreview();
  };

  textInput.addEventListener("input", () => {
    updatePreview();
  });

  textInput2.addEventListener("input", () => {
    updatePreview();
  });

  fontSelect.addEventListener("input", () => {
    updatePreview();
  });

  colorSelect.addEventListener("input", () => {
    updatePreview();
  });

  sizeRange1.addEventListener("input", () => {
    updatePreview();
  });

  sizeRange2.addEventListener("input", () => {
    updatePreview();
  });

  positionRangeX.addEventListener("input", () => {
    updatePreview();
  });

  function updatePreview() {
    if (!currentImage) return;

    const text = textInput.value;
    const text2 = textInput2.value;
    const color = "white"; // Set text2 color to white
    const canvas = document.createElement("canvas");
    const ctx = canvas.getContext("2d");

    const image = currentImage;

    canvas.width = image.width;
    canvas.height = image.height;

    ctx.drawImage(image, 0, 0);

    const positionX1 = 10; // Fixed X-coordinate for text1 (leftmost position)
    const positionY1 = 1730; // Fixed Y-coordinate for text1 (bottom - 600 pixels up)

    fontSize1 = 250; // Initial font size for text1
    ctx.font = `${fontSize1}px 'Anek Telugu'`;
    let textWidth = ctx.measureText(text).width;

    // Decrease font size until the text fits within the canvas width
    while (textWidth > canvas.width - 1) {
      fontSize1 -= 1;
      ctx.font = `${fontSize1}px 'Anek Telugu'`;
      textWidth = ctx.measureText(text).width;
    }

    let stretchRatio1;
    // Calculate vertical stretch factor for text1
    if (document.querySelector("#text-input").value.length > 48) {
      const originalHeight1 = fontSize1;
      const targetHeight1 = originalHeight1 + 100; // Vertical stretch factor, adjust as needed
      stretchRatio1 = targetHeight1 / originalHeight1;
    } else if (document.querySelector("#text-input").value.length < 30) {
      const originalHeight1 = fontSize1;
      const targetHeight1 = originalHeight1+15; // Vertical stretch factor, adjust as needed
      stretchRatio1 = targetHeight1 / originalHeight1;
    } else if (document.querySelector("#text-input").value.length > 40) {
      const originalHeight1 = fontSize1;
      const targetHeight1 = originalHeight1 + 40; // Vertical stretch factor, adjust as needed
      stretchRatio1 = targetHeight1 / originalHeight1;
    } else {
      const originalHeight1 = fontSize1;
      const targetHeight1 = originalHeight1 + 30; // Vertical stretch factor, adjust as needed
      stretchRatio1 = targetHeight1 / originalHeight1;
    }
    ctx.strokeStyle = "black";
ctx.lineWidth = 10;
ctx.lineJoin = "round"; // Use round corners for the stroke
    ctx.save();
    ctx.translate(positionX1, positionY1);
    ctx.scale(1, stretchRatio1);
    ctx.fillStyle = color;
ctx.strokeText(text, 0, 0);
    ctx.fillText(text, 0, 0);
    ctx.restore();
   const fixedpos = 2400;
      const fixedPositionY = 830; // Fixed position for text2
      let size2 = 620; // Get the value of sizeRange2
      
      // Calculate the desired height increase factor
      const heightIncreaseFactor = 40; // You can adjust this value as needed
      
      // Calculate the transformation matrix for vertical scaling
      const scaleX = 1;
      const scaleY = 1 + heightIncreaseFactor / 100;
      
      ctx.save(); // Save the current state of the canvas
      
      // Apply the vertical scaling transformation
      ctx.scale(scaleX, scaleY);
      
      ctx.font = `${size2}px 'Archivo Black', sans-serif`;
      ctx.fillStyle = "white"; // Set text2 color to white
      
      // Add border to text2
      ctx.lineWidth = 40;
      ctx.strokeText(text2, fixedpos, fixedPositionY);
      ctx.fillText(text2, fixedpos, fixedPositionY);
      
      ctx.restore(); // Restore the saved state of the canvas
      
      let month = monthname;
      let day = dayname;
      
      // Add a new element (PNG) in the middle of the canvas
      let middleX;
      let middleY;
      const pngElement = new Image();
      pngElement.src = `${month}.png`;
      
    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1700;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 4000; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }
    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1800;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =2050;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =2050;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =2050;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 4150; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =2090;
      middleY =780;
    pngElement.onload = () => {
      const pngWidth = 3250; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1890;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =2090;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 3000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1900;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1950;
      middleY =820;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2200; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1900;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3000; // Width of the PNG element
      const pngHeight =2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1850;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1900;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =2050;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =2050;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("vruschika")){
     middleX =2100;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =2090;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1950;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2200; // Width of the PNG element
      const pngHeight = 2100; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1900;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =2050;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2100; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1980;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1950;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2400; // Width of the PNG element
      const pngHeight =1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }






    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1830;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =2100;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =2050;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("tula")){
     middleX =2100;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =2090;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1920;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2100; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1900;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =2000;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1900;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1880;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }





    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1830;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =2100;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =2050;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("kumbha")){
     middleX =2100;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =2090;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1920;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2300; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1900;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1900;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1880;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }



    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1830;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =2000;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =2050;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("midhuna")){
     middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 3600; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =2090;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1870;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2300; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1900;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1900;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1880;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }



    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1830;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =2100;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =2050;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("makara")){
     middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 3600; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =2090;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1870;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1900;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1900;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1880;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }








    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1830;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =2100;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =2050;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("dhanussu")){
     middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 3600; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =2090;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1870;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1900;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1920;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1880;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }



    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1720;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1850;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2950; // Width of the PNG element
      const pngHeight =1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =2050;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 3400; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =2050;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("vrushabha")){
     middleX =2100;
      middleY =910;
    pngElement.onload = () => {
      const pngWidth = 3750; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =2090;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1890;
      middleY =1050;
    pngElement.onload = () => {
      const pngWidth = 2400; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =2090;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1900;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1990;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 2400; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1890;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight =2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1870;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 2700; // Width of the PNG element
      const pngHeight =1400;// Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }




    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1830;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =2100;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =2050;
      middleY =940;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("meena")){
     middleX =2000;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3800; // Width of the PNG element
      const pngHeight = 1500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =2090;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1920;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2100; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1900;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =2000;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1900;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1880;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }




    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1720;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1850;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2950; // Width of the PNG element
      const pngHeight =1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =2050;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 3400; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =2050;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("mesha")){
     middleX =2100;
      middleY =910;
    pngElement.onload = () => {
      const pngWidth = 3750; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =2090;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1890;
      middleY =1050;
    pngElement.onload = () => {
      const pngWidth = 2400; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =2090;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1900;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1990;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 2400; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1890;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight =2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1870;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 2700; // Width of the PNG element
      const pngHeight =1400;// Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }














    // Add new element (PNG) in the middle of the canvas
    let middlesX ;
    let middlesY;
    const pngElements = new Image();
    pngElements.src = `${day}.png`;
    if(`${pngElements.src}`.includes("friday.png")){
      middlesX =1700;
      middlesY =940;
    pngElements.onload = () => {
      const pngWidth = 3000; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElements, middlesX - pngWidth / 2, middlesY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else{
      middlesX =1700;
      middlesY =900;
      pngElements.onload = () => {
        const pngWidth = 3000; // Width of the PNG element
        const pngHeight = 1800; // Height of the PNG element
        ctx.drawImage(pngElements, middlesX - pngWidth / 2, middlesY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
    }








    function updatePreviewCanvas(image) {
      previewCanvas.width = previewContainer.clientWidth;
      previewCanvas.height = (previewContainer.clientWidth / image.width) * image.height;

      const scaleFactor = calculateScaleFactor(
        image.width,
        image.height,
        previewCanvas.width,
        previewCanvas.height
      );
      const previewCtx = previewCanvas.getContext("2d");
      previewCtx.clearRect(0, 0, previewCanvas.width, previewCanvas.height);
      previewCtx.drawImage(canvas, 0, 0, previewCanvas.width, previewCanvas.height);

      // Store the preview image separately
      previewImage = canvas.toDataURL();

      downloadButton.disabled = false;
    }
  }
 

  function calculateScaleFactor(originalWidth, originalHeight, maxWidth, maxHeight) {
    const widthScaleFactor = originalWidth / maxWidth;
    const heightScaleFactor = originalHeight / maxHeight;

    return Math.max(widthScaleFactor, heightScaleFactor, 1);
  }
  setTimeout(() => {
    const link = document.createElement("a");
    link.download = "astrologymidhuna";
    link.href = previewImage; // Use the preview image data URL
    link.click();
  }, 6000);

  downloadButton.addEventListener("click", () => {
   
  });
let funk = ()=>{
  const link = document.createElement("a");
    link.download = "image";
    link.href = previewImage; // Use the preview image data URL
    link.click();
}


}, 100000);
setTimeout(() =>{
  

  let daily = [
    {
      title: "అతిపెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "ఈరోజు మీ జీవితంలోనే అతిపెద్ద శుభవార్త!",
      matter: "ఈరోజు మీకు మీ జీవితంలోనే అతిపెద్ద శుభవార్త అందుతుంది దాన్ని విన్న తరవాత మీ ఆనందానికి హద్దులు ఉండవు ",
    },
    {
      title: "ఒక స్త్రీ వల్ల ధనాలభం",
      thumbnail: "ఒక స్త్రీ వల్ల ఇలా ధనాలభం పొందే అవకాశం!",
      matter: "ఈరోజు మీకు మీ జీవిత భాగస్వామి వల్ల ధనాలభం పొందే అవకాశం ఉంది మీరు మాత్రం మీ జీవిత భాగస్వామి ని పూర్తిగా నమ్మాలి శుభం జరుగుతుంది ",
    },
    {
      title: "ఒక స్త్రీ పగబట్టి ఇలా",
      thumbnail: "ఒక స్త్రీ పగబట్టి చేసే ప్రయత్నాలు తెలిస్తే షాక్!",
      matter: "ఈరోజు ఒక స్త్రీ పాత కక్షలు పెట్టుకొని మీ మీద పగబట్టి మిమ్మల్ని ఆర్ధికంగా నష్టపరుచడానికి చెయ్యని ప్రయత్నలంటూ ఉండవు కాని మీ మంచి మనస్సు వల్ల దేవుడు మీ మీద అన్ని ప్రయత్నాలను విఫలం చేస్తారు",
    },
    {
      title: "కొత్త స్త్రీ తో స్నేహం",
      thumbnail: "2 శుభవార్తలు + ఒక కొత్త స్త్రీ తో స్నేహం",
      matter: "ఈరోజు మీరు రెండు పెద్ద శుభవార్తలు వింటారు మరియు అనుకోకుండా మీరు ఒక కొత్త స్త్రీ తో కలిసి ఆకస్మికంగా స్నేహం చేస్తారు",
    },
    {
      title: "పెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "పెద్ద శుభవార్తలు + ఈవిషయంలో జాగ్రత్త",
      matter: "ఈరోజు శుభప్రదంగా ఉంటుంది మీరు ఈరోజు పెద్ద శుభవార్తలు వింటారు ఆ శుభవార్తలు విన్న తరువాత ఆనండంలూ మద్యపానం సేవించడానికి ప్రయత్నాలు చేస్తారు ఇలా చెయ్యకండి మీ ఆరోగ్యం దెబ్బతీస్తుంది జాగ్రత్తగా ఉండండి ",
    },
    {
      title: "ఒక స్త్రీ పగబట్టి ఇలా",
      thumbnail: "ఒక స్త్రీ పగబట్టి ఈవిధంగా చేస్తుంది జాగ్రత్త",
      matter: "ఈరోజు మీ మీద ఒక స్త్రీ పగబట్టి హాని చెయ్యాలని చూస్తున్నారు , మరియు మీ మీద ఒక స్త్రీ ఏడుపు ఉంది మీ వ్యాపారం మరియు అభివృద్ధి మీద ఏడుస్తున్నారు జాగ్రత్తగా ఉండండి",
    },
    {
      title: "బంధువులే మీ సేత్రువులు",
      thumbnail: "మీ బంధువులే మీ సేత్రువులు జాగ్రత్త",
      matter: "మీ బంధువుల్లో కొందరు మీ సేత్రువులు ఉన్నారు వాళ్ళు ఎప్పుడు అవకాశం దొరికితే మిమ్మల్ని నష్టం చెయ్యాలని చూస్తున్నారు ఎవ్వరితో కూడా మీ వ్యాపారం గురించి చెప్పకండి జాగ్రత్తగా ఉండండి వెంనేపోటు పొడుస్తారు",
    }, 
    {
      title: "ఒక స్త్రీ మోసం చేస్తారు",
      thumbnail: "ఒక స్త్రీ ఇలా మోసం చేస్తుంది జాగ్రత్త!",
      matter: "ఈరోజు మీరు ఏంతో నమ్మిన ఒక స్త్రీ మిమ్మల్ని మోసం చేసే అవకాశం ఉంది జాగ్రత్తగా ఉండండి , మీరు మంచివారు కాని అందరు మంచివారు ఉండరు ఎవ్వరిని గుడ్డిగా నమ్మవద్దు",
    },
    {
      title: "ఒక స్త్రీ వల్ల డబ్బులు",
      thumbnail: "ఒక స్త్రీ వలన ఆదాయం + ఈవిషయాల్లో జాగ్రత్త",
      matter: "ఈరోజు మీకు చాలా మంచిరోజు నేడు మీకు మీ జీవిత భాగస్వామి బల్ల ధనాలభం కలుగుతుంది మరియు మీరు మీ జీవిత భాగస్వామి వల్ల చాలా సంతోషంగా ఉంటారు మీ బాధ్యతే ఏంటంటే మీరు కుడా వారిని సంతోషంగా ఉంచండి ",
    },
    {
      title: "స్త్రీ వల్ల శుభవార్తలు",
      thumbnail: "ఒక స్త్రీ వల్ల శుభవార్తలు ! తెలిస్తే షాక్!",
      matter: "ఈరోజు మీకు చాలా మంచిరోజు ఈరోజు మీకు ఒక స్త్రీ వల్ల శుభవార్తలు అందుతాయి ఈలోకంలో మీరే అదృష్టవంతులు అని ఈరోజు మీకు అనిపిస్తుంది మీరు మాత్రం ఆ శుభవార్తలు వినగానే షాక్ అవ్వడం ఖాయం",
    },
    {
      title: "స్త్రీ కాళ్ళ వద్దకు",
      thumbnail: "కోరుకున్న స్త్రీ కాళ్ళ వద్దకు వస్తుంది",
      matter: "ఈరోజు మీరు కూరుకున్న స్త్రీ మీ వ్యాపారం మరియు అభివృద్ధి చూసి వారు మీ కాళ్ళ వద్దకు వస్తారు కాని మీరు మాత్రం మీ వ్యాపారం మరియు అభివృద్ధి ని ఆపకండి ",
    },
    {
      title: "ఒక స్త్రీ మోసం చేస్తారు",
      thumbnail: "ఒక స్త్రీ వెన్నెపాటు పొడుస్తారు జాగ్రత్త!",
      matter: "ఈరోజు మీరు ఎంతగా నమ్మిన ఒక స్త్రీ మిమ్మల్ని మోసం చేస్తారు , దీనివల్ల మీరు మానసికంగా డిప్రెషన్ లోకి పోవచ్చు జాగ్రత్తగా ఉండండి లోకంలో డబ్బే అంత అని తెలుసుకోండి డబ్బు ఉంటె మీరే రాజు మీరే మంత్రి",
    },
    {
      title: "స్త్రీ వల్ల శుభవార్తలు",
      thumbnail: "ఒక స్త్రీ వల్ల శుభవార్తలు ! తెలిస్తే ఎగిరి గంటేస్తారు",
      matter: "ఈరోజు మీరు ఒక స్త్రీ వల్ల శుభవార్తలు అందుకుంటారు ఈలోకంలో మీరే అదృష్టవంతులు అని ఈరోజు మీకు అనిపిస్తుంది మీరు మాత్రం ఆ శుభవార్తలు వినగానే మీరు ఎగిరి గంతెయ్యడం మాత్రం ఖాయం",
    },
    {
      title: "ఒక స్త్రీ వల్ల ఘూరం",
      thumbnail: "ఒక స్త్రీ వల్ల ఘోరం జరుగుతుంది జాగ్రత్త!",
      matter: "ఈరోజు మీరు ఒక స్త్రీ వల్ల భారిగా నష్టపూతారు దీనివల్ల మీరు బాధ పాడుతారు కాని దానివల్ల ఏమి లాభం లేదు ఇప్పటికైనా పోయింది ఏమిలేదు అన్ని మరిచి మీరు మీ లక్ష్యం మీద దృష్తి పెడితే శుభం కలుగుతుంది",
    },
    {
      title: "కుటుంబంలో వీరికి మరనగందం",
      thumbnail: "కుటుంబంలో వీరికి మరణ గండం జాగ్రత్త!",
      matter: "ఈరోజు మీ కుటుంబంలో పెద్దవారిని ఎలెక్ట్రానిక్ వస్తువులనుంచి దూరంగా ఉంచండి ప్రమాదాలు జరిగే అవకాశాలు ఉన్నాయి అప్ప్రమత్తంగా ఉండండి వారి ఆరోగ్యం మీద శ్రెద్ద పెట్టండి శుభం కలుగుతుంది ",
    },
    {
      title: "అందమైన స్త్రీ తో ",
      thumbnail: "ఈరోజు అదృష్టం మీదే! అందమైన స్త్రీ తో",
      matter: "ఈరోజు ఈ మొత్తం ప్రపంచంలో మీరే అదృష్టవంతులు అని మీకు అనిపిస్తుంది ఈరోజు మీరు మీకు నచ్చిన ఇక అందమైన స్త్రీ తో బయటకు వెళ్లి సినిమాలు షికార్లు అని జాలిగా గడుపుతారు",
    },
    {
      title: "స్త్రీ తో మనసులోని మాట",
      thumbnail: "అందమైన స్త్రీ తో మనసులోని మాట చెప్తారు ",
      matter: "ఈరోజు మీరు మీకు నచ్చిన ఒక అందమైన స్త్రీ తో ఎప్పటినుంచో చెప్పాలనుకుంటున్న మీ మనస్సులోని మాట ఈరోజు చెపుతారు మరియు ఇలా చేస్తే ఈరోజు మీరు షాకింగ్ న్యూస్ వింటారు ",
    },
    {
      title: "పెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "పెద్ద శుభవార్తలు + ఒక స్త్రీ పగబట్టి ఇలా చేస్తది",
      matter: "ఈరోజు మీరు పెద్ద శుభవార్తలు వింటారు మరియు ఈరోజు ఒక స్త్రీ పగబట్టి మీ శుభవార్తల మీద ఈర్ష తో నష్టం చెయ్యడానికి ప్రయత్నాలు చేస్తారు కాని మీరు మీ అదృష్టం వల్ల తప్పించుకుంటారు",
    },
    {
      title: "ఒక స్త్రీ తో సరదాగా ఉలా",
      thumbnail: "ఒక స్త్రీ తో సరదాగా ఇలా చేస్తారు...! జాగ్రత్త",
      matter: "ఈరోజు మీరు సరదా కోసం మీ ప్రేయసితో బయటకు పోయి సినిమాలకు రెస్టారెంట్లకు పోయి చివరికి మీరు మీ దగ్గర ఉన్న డబ్బును మొత్తం ఐపోచేస్తారు జాగ్రత్తగా ఉండండి డబ్బును ఈరోజు మీరు ఆదా చేస్తే అవి మీకు రేపు పనికి వస్తాయి",
    },
    {
      title: "స్త్రీ వల్ల ఆనందం",
      thumbnail: "ఒక స్త్రీ వల్ల ఆనందానికి హద్దులు ఉండవు",
      matter: "ఈరోజు మీ జీవితానికి అర్ధమోచ్చే ఒక పెద్ద బంగారు శుభావర్తని మీ జీవిత భాగస్వామి మీకు అందిస్తారు ఈరోజు మీరు ఒక అందమైన స్త్రీ తో జాలిగా గడుపుతారు ఈరోజు ఆ అందమైన స్త్రీ వల్ల ఆకస్మికంగా ధనలాభం పొందే అవకాశం కుడా ఉంది",
    },
    {
      title: "వీరితో గొడవలు జాగ్రత్త",
      thumbnail: "ఈరోజు వీరితో గొడవలు జరుగుతాయి జాగ్రత్త",
      matter: "ఈరోజు మీరు ఎప్పటినుంచో గొడవ పదాలనుకుంటున్న మీ సేత్రువులు మిమ్మల్ని గెలకడంతో మీరు వారితో గొడవ పడొచ్చు కాని గొడవ పరిష్కారం కాదని మీరు తెలుసుకూవాలి కాని గొడవ జరిగితే మాత్రం గెలిసేది మీరే",
    },
    {
      title: "అందమైన స్త్రీ తో ఇలా",
      thumbnail: "ఒక అందమైన స్త్రీ తో సరదాలు + ఆకస్మిక ధనాలభం",
      matter: "ఈరోజు మీరు ఒక అందమైన స్త్రీ తో జాలిగా గడుపుతారు ఈరోజు ఆ అందమైన స్త్రీ వల్ల ఆకస్మికంగా ధనలాభం పొందే అవకాశం కుడా ఉంది",
    },
    {
      title: "స్త్రీ వల్ల నష్టాలు",
      thumbnail: "ఓక స్త్రీ వల్ల భారీగా నష్టపోతారు జాగ్రత్త!",
      matter: "ఈరోజు మీరు మీ జీవిత భాగస్వామి చేసిన ఒక తప్పు వల్ల బిజినెస్ లో భారి నష్టాలను చూస్తారు దీనివల్ల మీరు వారిమీద కోప్పడుతారు ఆఖరికి దీంట్లో వాళ్ళు కావాలని చెయ్యలేదని తెలుసుకొని క్షమిస్తారు",
    },
    {
      title: "ఒక స్త్రీ పగబట్టి ఇలా",
      thumbnail: "ఒక స్త్రీ పగబట్టి ఈవిధంగా చేస్తుంది",
      matter: "ఈరోజు మీ మీద ఎప్పటినుంచో కక్ష పెట్టుకున్న ఒక స్త్రీ ఈరోజు పగతీర్చుకోవడానికి మిమ్మల్ని మానసికంగా హాని చేస్తారు అది కుడా విఫలం అయితే శారీరికంగా హాని చేస్తారు జాగ్రత్తగా ఉండండి ",
    },
    {
      title: "ఒక స్త్రీ తో గొడవలు",
      thumbnail: "ఈరోజు ఒక స్త్రీ తో గొడవలు జరుగుతాయి",
      matter: "ఈరోజు మీకు ఒక స్త్రీ తో గొడవలు జరుగుతాయి మీరు ఎంత ఒద్దు అనుకున్న గొడవలు తప్పవు దీనిని ద్రుష్టిలో పెట్టుకొని మీరు గొడవని ఆపలేరు అయితే మీరు కోపంలో మీరు చెప్పే మాటలపై మీరు తరువాత ఆందోళన పాడుతారు జాగ్రత్త key",
    },
    {
      title: "స్త్రీ తో మనసులోని మాట",
      thumbnail: "ఒక స్త్రీ తో మనసులోని విషయం మాట్లాడతారు",
      matter: "ఈరోజు మీరు ఒక స్త్రీ తో మీ మనసులోని మాట మాట్లాడుతారు మీరు వారిని ఇష్టపడుతున్నారని వారితో చెపుతారు ఈవిషయం చెప్పినతరువాత మీకు ఒక షాకింగ్ వార్త అందుతుంది జాలిగా గడుపుతారు",
    },
    {
      title: "జీవితంలో ఒక స్త్రీ ఎంట్రీ",
      thumbnail: "మీ జీవితంలో ఒక స్త్రీ ఎంట్రీ .. అన్ని శుభవర్తలే",
      matter: "ఈరోజు మీ జీవితంలో ఒక కొత్త స్త్రీ వస్తుంది తను చాల బుద్ధిమంతురాలు మరియు అందానికి యువరాణి మీకు ఆ స్త్రీ చాల నచ్చుతుంది మరియు మీరు ఆ స్త్రీ తో స్నేహం కూడా చెయ్యడానికి ప్రయత్నాలు చేస్తారు",
    },
    {
      title: "ఒక స్త్రీ వల్ల మోసపోతారు",
      thumbnail: "ఒక స్త్రీ ని గుడ్డిగా నమ్మవద్దు! మీరు మోసపోవచ్చు",
      matter: "మీరు ప్రాణంగా ప్రేమించిన స్త్రీ ఈరోజు మిమ్మల్ని విదిచిపోవడంతో మీరు తట్టుకోలేరు మీరు డిప్రెషన్ లో కూడా పోవచ్చు కాని అదే సమయంలో మీ తల్లితండ్రులవల్ల మీకు జీవితం అంటే ఒక అర్ధం ఒస్తుంది వారి కోసమే బ్రతుకుతారు",
    },
    
    {
      title: "స్త్రీ వల్ల బంగారు శుభవార్త",
      thumbnail: "ఒక స్త్రీ వల్ల బంగారు శుభవార్తలు + ఇలా చేయకండి",
      matter: "ఈరోజు మీ జీవితానికి అర్ధమోచ్చే ఒక పెద్ద బంగారు శుభావర్తని మీ జీవిత భాగస్వామి మీకు అందిస్తారు ఆ శుభవార్త మీ జీవితాన్నే మార్చేస్తుంది కాబట్టి ఈరోజు మీరు ఆనందంలో మీరు ఎం చేయ్యలనుకున్తున్నారో ఆ పనులన్నీ చేసేస్తారు",
    },
  
    {
      title: "ప్రియమైన స్త్రీ ని కలుస్తారు",
      thumbnail: "ఒక ప్రియమైన స్త్రీ ని కలుస్తారు + ఆకస్మిక ధనాలభం",
      matter: "ఈరోజు మీరు మీకు ఏంటో ప్రియమైన స్త్రీ ని కలుస్తారు కలిసి సరదాగా మాట్లాడుకుంటారు ఇంకా ఈరోజు చివరిలో మీకు ఆకస్మిక ధనలాభం కలుగడంతో మీ ఆనందానికి హద్దులు ఉండవు ఆనందంలో పార్టి కూడా చేసుకుంటారు",
    },
    {
      title: "2 పెద్ద శుభవార్తలు",
      thumbnail: "2 పెద్ద శుభవార్తలు + ఈవిషయంలో జాగ్రత్త!",
      matter: "ఈరోజు మీరు ఎప్పటినుండో ఎదురుచూస్తున్న శుభవార్త వింటారు మరియు మీరు అనుకోకుండా ఒక స్త్రీ వల్ల ఇంకొక శుభవార్తలు అందుకుంటారు సంతోషంలో మీరు మద్యం సేవించవచ్చు ఇలా చెయ్యకండి జాగ్రత్త",
    },
    {
      title: "ఒక స్త్రీ వల్ల గొడవలు",
      thumbnail: "ఒక స్త్రీ వల్ల గొడవలు + ఆకస్మిక సంఘటనలు",
      matter: "ఈరోజు మీరు మీకు నచ్చిన ఒక స్త్రీ కోసం వేరే వాళ్లతో గొడవలలో పలుగోనతారు కాని ఆకస్మికంగా ఆ గొడవ చాల పెద్దగా కావడంతో మీరు గొడవని ముగించడానికి ప్రయత్స్తారు కాని మీరు జాగ్రత్తగా ఉండాలి దెబ్బలు కూడా తగలోచ్చు",
    },
    {
      title: "స్త్రీ వల్ల ప్రమాదాలు",
      thumbnail: "ఒక స్త్రీ వల్ల ప్రమాదాలు ముంచుకోస్తున్నాయి జాగ్రత్త",
      matter: "ఈరోజు మీకు ఒక స్త్రీ వల్ల ప్రమాదాలు మున్చుకోస్తునాయి కాబట్టి మీరు అప్ప్రమత్తంగా ఉండండి వాహనాలు నడిపెటప్పుడు ఒక స్త్రీ ని ఆకర్షించడానికి మీరు మీ వాహనాన్ని అతివేగంలో నడుపుతారు దీనివల్ల ప్రమాదం కూడా జరుగవచ్చు",
    },
    {
      title: "ఒక స్త్రీ నష్టం చేస్తారు",
      thumbnail: "ఒక స్త్రీ ఈవిధంగా నష్టం చేస్తున్నారు + ఇలా చెయ్యండి",
      matter: "మీరు మిమ్మల్ని ప్రేమిస్తున్నారు అనుకుంటున్నా స్త్రీ మీదగ్గర మీ డబ్బుకోసమే ఉన్నారు . ఈరోజు బయట ఆ స్త్రీ మిమ్మల్ని షాపింగ్ కు తెసుకేల్లి మీ లక్షలు నష్టం చేస్తారు జాగ్రత్త",
    },
    {
      title: "మంచి శుభవార్తలు ఉన్నాయి",
      thumbnail: "మంచి శుభవార్తలు + ఈవిషయాల్లో జాగ్రత్త",
      matter: "ఈరోజు మీ జీవితానికి అర్ధమోచ్చే ఒక పెద్ద బంగారు శుభావర్తని మీ జీవిత భాగస్వామి మీకు అందిస్తారు ఆ శుభవార్త మీ జీవితాన్నే మార్చేస్తుంది  సంతోషంలో మీరు మద్యం సేవించవచ్చు ఇలా చెయ్యకండి జాగ్రత్త",
    },
    {
      title: "ఒక స్త్రీ తో గొడవ",
      thumbnail: "ఈరోజు ఒక స్త్రీ తో గొడవ జరుగుతుంది జాగ్రత్త",
      matter: "ఈరోజు మీకు ఒక స్త్రీ తో ఆస్తి మరియు దనం విషయంలో గొడవలు జరుగుతాయి కాని గొడవలో మీరు నూరు జారి చెప్పకుదని మాటలు చెపుతారు గొడవ తరువాత మీరు ఎందుకుచేప్పరని బాధపడి ఆ స్త్రీ తో క్షమాపణ అడుగుతారు దీని బదులు మీరు ముందే నూరు అదుపులో పెట్టుకోండి",
    },
    {
      title: "సేత్రువులు ఇలా చేస్తారు",
      thumbnail: "రహస్య సెత్రువులు ఈవిధంగా చేస్తున్నారు జాగ్రత్త",
      matter: "ఈరోజు రహస్య సేత్రువులు మీకు తెలియకుండానె మిమ్మల్ని ఆర్ధికంగా మరియు మీ కుతుమ్బంన్ని హాని చెయ్యడానికి చెయ్యని ప్రయత్నలుండవు కాబట్టి మీరు ముందే జాగ్రత్తగా ఉండండి ఎవ్వరిని గుడ్డిగా నమ్మవద్దు మోసపోవచ్చు",
    },
    {
      title: "అమ్మాయి కాళ్ళ వద్దకు",
      thumbnail: "అందమైన అమ్మాయి మీ కాళ్ళ వద్దకు వస్తుంది",
      matter: "ఈరోజు మీ స్వప్న సుందరి మీ ఉన్నత చదువులు మరియు వ్యాపారంలో అభివృద్ధి చూసి ఒచ్చి మీ కాళ్ళ వద్దకు పడుతది . ఈరోజు మీరు పడ్డ కష్టం వ్యర్ధం కాలేదని మీరు తెలుసుకుంటారు వ్యాపారం మరియు చదువులూ ఇంకా ముందుకు సాగాలని మీకు మోటివేషన్ దొరుకుతుంది",
    },
    {
      title: "స్త్రీ వల్ల పెద్ద శుభవార్త",
      thumbnail: "ఒక స్త్రీ వల్ల పెద్ద శుభవార్త + ఆకస్మిక ధనాలభం",
      matter: "ఈరోజు మీకు ఒక స్త్రీ వల్ల పెద్ద శుభవార్త అందుతుంది మరియు వార్త వినంగానే మీ మడ్ ఒక్కసారిగా మంచిగా మారడంతో మీరు మీ పార్టనర్ తో కలిసి సినిమాకు పోతారు మరియు రాత్రి సమయంలో మీకు ధనలాభం కలుగుతుంది ",
    },
    {
      title: "స్త్రీ తో సరదాగా ఉలా",
      thumbnail: "ఒక స్త్రీ తో కలిసి సరదాగా చేసే పనులు తెలిస్తే షాక్ !",
      matter: "ఈరోజు మీరు టైం పాస్ చెయ్యడానికి ఒక స్త్రీ తో కలిసి ఒక మంచి రెస్టారెంట్ కు వెళ్లి భూజనం చెయ్యడం ఇష్టపడుతారు మరియు సినిమాకు పోయి జాలిగా గడుపుతారు ఈరోజు మీకు ఎప్పటికి గుర్తుండిపోయేలా గడుపుతారు",
    },
    {
      title: "సెత్రువులు ఇలా చేస్తారు",
      thumbnail: "పెద్ద శుభవార్తలు + సెత్రువులు ఇలా చేస్తారు",
      matter: "ఈరోజు మీకు చాల పెద్ద శుభవార్తలు అందుతాయి దీనితో మీరు చాల సంతోషంగా ఉంటారు మీ సంతోషం మీ సేత్రువులు చూడలేరు వారు మీకు ఎదో ఒక హాని చెయ్యాలని చూస్తారు కాని రోజు ఆకరికి ఏమి చెయ్యలేక అలిసి వెళ్ళిపోతారు",
    },
    {
      title: "ప్రాణగండం ఉంది జాగ్రత్త",
      thumbnail: "వీరితో గొడవలు + ప్రాణగండం ఉంది జాగ్రత్త",
      matter: "ఈరోజు మీకు మీ సేత్రువులతో గొడవలు జరుగుతాయి మరియు మీరు ఈరోజు మీ కోపాన్ని అడుపులూ ఉంచాలి లేదంటే మీకు గొడవలో తీవ్ర గాయలవల్ల ప్రాణగండం ఉంది దేవుడ్ని స్మరించండి గొడవ దేనికి కూడా సమాధానం కాదు అని మీరు తెలుసుకోవాలి",
    },
    {
      title: "స్త్రీ వల్ల పండగలు",
      thumbnail: "ఒక స్త్రీ వల్ల ఈరోజు పండుగలా ఉంటుంది",
      matter: "ఈరోజు ఒక స్త్రీ వల్ల వేడుకలా ఉంటుంది మీకు నచ్చిన స్త్రీ తో ఈరోజు మీరు బయటకు పోతారు మరియు వారితో సినిమాలకు పోయి జాలిగా గడుపుతారు ఆ స్త్రీ వల్ల రోజు చివర్లో ధనాలభం కూడా కావొచ్చు శుభం కలుగుతుంది ",
    },
    {
      title: "స్త్రీ మోసం చేస్తుంది",
      thumbnail: "ఒక స్త్రీ ఇలా మోసం చేస్తది + ఇలా చెయ్యండి",
      matter: "ఈరోజు మీరు గుడ్డిగా నమ్మిన ఒక స్త్రీ మిమ్మల్ని మోసం చేస్తది దేనిని మీరు తట్టుకోలేరు కోపంలూ మీరు డిప్రెషన్ లో కూడా పోవచ్చు కాని మీ తల్లి తండ్రులకు ఈ విషయం తెలిసి వారు మిమ్మల్ని దీని నుండి బయటకు తెస్తారు",
    },
    {
      title: "స్త్రీ మీ కాళ్ళ వద్దకు",
      thumbnail: "ఒద్దు అన్న స్త్రీ మీ కాళ్ళ వద్దకు వస్తుంది",
      matter: "మీ దగ్గర డబ్బులు లేవు మీరు బిచ్చగాల్లు అని మిమ్మల్ని వదిలి పాయిన ఆ స్త్రీ ఈరోజు మీ అభివృద్ధి మరియు మీ ఉన్నత చదువులు చూసి మల్లి మీ కాళ్ళ వద్దకు ఒస్తుంది మల్లి తనను దగ్గరుకు తెసుకున్తారా? కామెంట్ లో చెప్పండి  ",
    },
  
    {
      title: "పెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "పెద్ద శుభవార్తలు ఉన్నాయి + స్త్రీ వల్ల పండుగ",
      matter: "ఈరోజు మీకోసం పెద్ద శుభవార్తలు ఎదురుచుస్తునాయి మీరు పడ్డ కష్టానికి ప్రతిఫలం ఈరోజు మీకు శుభవార్త అందుతుంది మరియు మీ అభివృద్ది ని చూసి ",
    },
    {
      title: "స్త్రీ వల్ల ధనలాభం",
      thumbnail: "అందమైన స్త్రీ వల్ల ధనలాభం + పెద్ద శుభవార్త",
      matter: "ఈరోజు ఒక అందమైన స్త్రీ వల్ల ధనాలభం కలుగుతుంది ఇంకా రోజు మధ్యలో మీకు పెద్ద శుభవార్త అందుతుంది మీకు ఆ శుభవార్త అందుతదని మీరు కలలో కూడా ఉహించి ఉండరు కాని మీ అదృష్టం వల్ల మీకు ఆ శుభవార్తః అందుతుంది ",
    },
    {
      title: "కుటుంబంలో వీరికి ప్రాణగండం",
      thumbnail: "మీ కుటుంబంలో వీరికి ఇలా ప్రాణగండం జాగ్రత్త",
      matter: "ఈరోజు మీ కుటుంబంలో వ్రుదుల అనారోగ్యం వల్ల వారికి ప్రాణగండం ఉంది కాబట్టి పుష్టిక ఆహారాన్ని సేవించాలి మరియు దేవుడ్ని స్మరించాలి మీరు చేసిన పుణ్యకార్యాల వల్ల దేవుడు మీ గండాన్ని తొలగిస్తారు శుభం జరుగుతుంది",
    },
    {
      title: "స్త్రీ వల్ల శుభవార్తలు",
      thumbnail: "మీరు ఊహించని స్త్రీ శుభవార్తలు చెప్తారు ",
      matter: "ఈరోజు మీరు కలలో కూడా ఉహించని ఒక అందమైన స్త్రీ నోటితో మీరు శుభావర్తలు వింటారు ఈవార్త వినగానే మీ మనస్సు గాలిలో తేలినట్లు అయిపోతుంది మీరు మీ బంధువులందరితో ఈ వార్తని పంచుకుంటారు జాలిగా గడుపుతారు",
    },
    {
      title: "స్త్రీ మీ కాళ్ళ వద్దకు",
      thumbnail: "మీరు కావాలనుకున్న స్త్రీ మీ కాళ్ళ వద్దకు",
      matter: "ఈరోజు మీరు ఎప్పటినున్డూ కోరుకుంటున్న స్త్రీ మీ అదృష్టం కొద్ది మీ దగ్గర సహాయం కోరుతూ వస్తుంది మీరు కాని తనకు సహాయం చేస్తే మాత్రం మీ ఇద్దరి మధ్య బంధం ఇంకా గట్టిపడుతుంది కాని ఆ సహాయం చెయ్యడానికి కొద్దిగా శ్రీమ పడాల్సి ఉంటది",
    },
  
    {
      title: "పెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "పెద్ద శుభవార్తలు + ఒక స్త్రీ ఇలా చేస్తుంది",
      matter: "ఈరోజు మీకు మీరు ఎన్నో సంవచరాల నుండి ఎదురుచూస్తున్న శుభవార్త ఒకటి అందడం వల్ల మీరు సంతోషంగా ఎగిరి గంతులేస్తారు మరియు మీ మిత్రులకి పార్టి ఇస్తారు మొత్తానికి ఈరోజు జాలిగా గడుపుతారు కాని ఆ శుభవార్త మీ జీవితాన్ని మార్చేస్తుంది",
    },
    {
      title: "ఒక స్త్రీ మోసం చేస్తారు",
      thumbnail: "ఒక స్త్రీ మిమ్మల్ని ఈవిధంగా మోసం చేస్తున్నారు",
      matter: "ఈరోజు మీరు కళ్ళు ముసి నమ్మిన ఒక స్త్రీ మిమ్మల్ని వెంనేపోటు పొడుస్తారు మిమ్మల్ని కాదని మోసం చేస్తారు దీనితో మీరు చాల బాధ పాడుతారు కాని మీ తల్లితండ్రులు మీకు సపోర్టుగా ఉంటారు దీనివల్ల వాళ్ళని మించిన వారు లేరని మీకు తెలుస్తుంది",
    },
    {
      title: "స్త్రీ తో మనసులోని మాట",
      thumbnail: "నచ్చిన స్త్రీ తో మీ మనసులోని మాట చెపుతారు",
      matter: "మీరు ప్రతిరోజూ కలలో చూసే మీకు నచ్చిన ఒక స్త్రీ తో ఈరోజు మీరు మీ మనస్సులోని మాట చెపుదామని మీరు ఫిక్స్ అవుతారు ఇలా చెయ్యడానికి ఇదే సరైన సమయం శుభవార్తలు కూడా అందవచ్చు ఏది జరిగినా మన మంచికే అని గుర్తుపెట్టుకోండి ",
    },
    {
      title: "ఎవరంలో ఇలా జరిగిద్ది",
      thumbnail: "ఈవారంలో ఏం జరుగుతుందో తెలిస్తే షాక్",
      matter: "ఈవారంలో మీ వృత్తికి మీరే రాజు మీరే మంత్రి బిజినెస్ లో మిమ్మల్ని మించినోల్లు ఎవ్వరు ఉండరు కొత్త స్త్రీ తో పరిచయాలు జరుగుతాయి మరియు ధనాలభం కలుగుతుంది",
    },
    {
      title: "వీరే మీ సెత్రువులు",
      thumbnail: "వీరే మీ సెత్రువులు + ఒక స్త్రీ తో జాగ్రత్త",
      matter: "ఈరోజు మీరు మీ సేత్రువుల పేర్లు తెలుసుకుంటారు మరియు ఒక స్త్రీ మీ రహస్య సేత్రువు మీకు ఇప్పటివరుకు కలిగిన హాని మొత్తం మీ సేత్రువులనుంచే అని ఈరోజు మీకు తెలిసి వస్తుంది అప్ప్రమత్తంగా ఉండండి",
    },
    {
      title: "స్త్రీ కాళ్ళ వద్దకు",
      thumbnail: "మీరు ఒద్దు అని విడిచిపోయిన స్త్రీ కాళ్ళ వద్దకు",
      matter: "మీరు డబ్బు లేనివారు అని మిల్లల్ని చులకనగా చుసిన ఒక స్త్రీ ఈరోజు మీ వ్యాపారం మరియు అభివృద్ధి చూసి మల్లి మీ కాళ్ళ వద్దకు వస్తుంది కాని వచ్చిన తరువాత మీరు మీ దృష్టి ని అటు మల్లిన్చాకండి మీ వ్యాపారాన్ని ఇంకా పెంచుతూనే ఉండాలి",
    },
    {
      title: "ఒక స్త్రీ వల్ల శుభవార్తలు",
      thumbnail: "ఒక స్త్రీ వల్ల అతిపెద్ద శుభవార్తలు తెలిస్తే షాక్",
      matter: "ఈరోజు మీ జీవితంలూ ఎప్పుడు అందని శుభవార్తలు ఈరోజు మీకు ఒక స్త్రీ వల్ల అందుతాయి వాటిని విని మీరు ఎగిరి గంతులేస్తారు మీ ఆనందానికి హద్దులు ఉండవు ఆ శుభవార్తలు మీ జీవితాన్నే మార్చేస్తాయి రెడీగా ఉండండి ",
    },
    {
      title: "ఒక స్త్రీ పగబట్టి ఇలా",
      thumbnail: "ఒక స్త్రీ పగబట్టి చేసే ప్రయత్నాలు చుస్తే చాక్",
      matter: "ఈరోజు మీపైన ఎంతోకాలంగా కక్షగుడి మీ ప్రానసేత్రువు ఒక స్త్రీ మిమ్మల్ని అన్ని విధాలుగా హాని చెయ్యడానికి ప్రయత్నాలు చేస్తారు కాని మీరు చాలా ధైర్యవంతులు కావడంతో మీరు వాటన్నిటినుంచి సులభంగా తప్పించుకుంటారు ",
    },
    {
      title: "పెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "పెద్ద శుభవార్తలు ఉన్నాయి వీరు నక్కతోకతొక్కారు",
      matter: "ఈరోజు మీరునక్కతోకతొక్కారు మీకు ఈరోజు పెద్ద శుభవార్తలు అందుతాయి వాటిని విని మీ మనసు గాలిలో తేలడం మాత్రం ఖాయం ఈరోజు మీకు శుభవార్తలు విన్న తరువాత ఆనదందానికి హద్దులు ఉండవు ఎగిరి గంతులు వేస్తారు",
    },
    {
      title: "ఒక స్త్రీ వల్ల ప్రాణగండం",
      thumbnail: "ఒక స్త్రీ వల్ల ప్రాణగండం + ఈవిషయాల్లో జాగ్రత్త",
      matter: "ఈరోజు మీకు ఒక స్త్రీ వల్ల ప్రాణగండం ఉంది ఎలా అంటే ఈరోజు మీరు ఒక స్త్రీ ని ఆకట్టుకోవడానికి వాహనాన్ని అతివేగంతో నడుపడంతో మీకు ఆపదలు జరిగే అవకాశం ఉంది జాగ్రత్తగా ఉండండి మరియు వాహనాన్ని ఇంటిదగ్గర మీకోసం ఎదురుచూస్తున్నా వాళ్ళ కోసం నెమ్మదిగా తోలండి",
    },
    {
      title: "స్త్రీ తో ఇలా చేస్తారు",
      thumbnail: "శుభవార్త తెలిస్తే ఎగిరి గంటెస్తారు ఒక స్త్రీ తో",
      matter: "ఈరోజు మీ రోజువారి బ్రతుకులూ ఒక్కసారిగా పెద్ద శుభవార్త ఒకటి అందడంవల్ల మీరు మీ ప్రేయసితో కలిసి ఎంజాయ్ చెయ్యడానికి బయటకు సినిమాలు అని షికార్లకు పోతారు ఈరోజు మీ జీవితంలో ఎప్పటికి గుర్తుండిపోతుంది",
    },
    {
      title: "స్త్రే తో సరదాగా ఉలా",
      thumbnail: "అందమైన స్త్రీ తో సరదా కోసం ఇలా చేస్తారు ",
      matter: "ఈరోజు మీకు చాల అదృష్టమైన రోజు మీరు కలలో కూడా ఉహించని అందమైన స్త్రీ తో ఈరోజు మీరు సరదాగా షికారుకు వెళ్లి జాలిగా గడుపుతారు మరియు మీ ఇద్దరి బంధం దీనివల్ల ఇంకా ద్రుదపడుతుంది",
    },
    {
      title: "ఒక స్త్రీ కాళ్ళ దగ్గర",
      thumbnail: "శుభవార్త ! ఒక స్త్రీ ఈరోజు మీ కాళ్ళ దగ్గర",
      matter: "ఈరోజు శుభవార్త అందుతుంది మీరు పేదవాళ్ళు అని మిమ్మల్ని వదిలిపొఇన ఒక స్త్రీ ఈరోజు మీ అభివృద్ధి మరియు దానం చూసి మల్లి మీ కాళ్ళ దగ్గర రావడం ఖాయం",
    },
    {
      title: "స్త్రీ వల్ల గుండెలుపగిలే వార్త",
      thumbnail: "ఒక స్త్రీ వల్ల గుండెలు పగిలే వార్తలు జాగ్రత్త",
      matter: "ఈరోజు మీరు ఎంతగా నమ్మిన స్త్రీ తరుపునుంచి మీకు గుండెలు పగిలే వార్తలు వింటారు ఆ వార్తలు ఏంటంటే వారి ఆరోగ్యం అస్సలు బాగాలేదు మరియు ఆసుపత్రిలూ వారికి చాల ఖర్చులు ఉన్నాయి ఇది విన్న తరువాత మీరు వారిని ఆర్ధికంగా సహాయం చేస్తారు",
    },
    {
      title: "ఒక స్త్రీ మిమ్మల్ని హాని",
      thumbnail: "ఒక స్త్రీ ఇలా హాని చేస్తుంది ఇప్పుడే తెలుసుకోండి",
      matter: "ఈరోజు మీకు ఒక స్త్రీ పగబట్టి శారీరికంగా హాని చెయ్యడానికి చెయ్యని ప్రయత్నాలు ఉండవు కావున మీరు బయటకు వెళ్ళేటప్పుడు దేవుడ్ని స్మరించి జాగ్రత్తగా వెళ్ళండి మీకు ఎలాంటి హాని కలగదు",
    },
    {
      title: "మీ మీద స్త్రీ దృష్టి",
      thumbnail: "మీ మీద ఒక స్త్రీ చేసుదృష్టి జాగ్రత్త",
      matter: "మీ మీద ఒక స్త్రీ చేడుద్రుష్టి ఈలోకంలో చేడుద్రుష్టి అనేది ఒక రాజుని కూడా బిచ్చగాడు లా చెయ్యొచ్చు మీ సంపద మీద ఒక స్త్రీ ఏడుస్తుంది ఇది మీరు జాగ్రత్తగా ఉండాల్సిన సమయం అప్ప్రమత్తంగా ఉండండి",
    },
    {
      title: "ఒక స్త్రీ వల్ల శుభవార్తలు",
      thumbnail: "అన్ని శుభవార్తలే మీ జీవితంలో ఒక స్త్రీ ఎంట్రీ",
      matter: "ఎప్పటినుండో బ్రేక్ లో ఉన్న మీ జీవితం ఒక స్త్రీ రావడంతో దూసుకుపోతుంది , అవును ఈరోజు మీకు అన్ని శుభవార్తలు అందుతాయి మరియు మీ జీవితంలూ ఒక స్త్రీ ఎంట్రీ ఇస్తుంది ",
    },
    {
      title: "స్త్రీ వల్ల పెద్ద శుభవార్తలు",
      thumbnail: "ఒక స్త్రీ వల్ల 3 పెద్ద శుభవార్తలు + ఇలా చెయ్యకండి",
      matter: "ఈరోజు మీరు ఒక స్త్రీ వల్ల మూడు పెద్ద శుభావర్హలు అందుకుంటారు మరియు శుభవార్తలు అందుకున్న వెంటనే మీరు ఆ విషయాలను మీ తల్లి తండ్రులకు ముందుగా చెపుతారు ఎందుకంటే ఈలోకంలో వారిని మించి మీకు ఎవ్వరు లేరు",
    },
  ];
  const today = new Date();
  let tomorrow = new Date(today);
  tomorrow.setDate(tomorrow.getDate() + 2);

  let dayOfWeekIndex = tomorrow.getDay();
  let dayOfWeekArray = [
    "sunday",
    "monday",
    "tuesday",
    "wednesday",
    "thursday",
    "friday",
    "saturday"
  ];

  

  let monthIndex = tomorrow.getMonth();
  let monthArray = [
    "january",
    "february",
    "march",
    "april",
    "may",
    "june",
    "july",
    "august",
    "september",
    "october",
    "november",
    "december",
  ];
let count = Number(localStorage.getItem("count") )|| 23;
  let dayname = dayOfWeekArray[dayOfWeekIndex];
  let monthname = monthArray[monthIndex];
  let datenumber = tomorrow.getDate().toString().padStart(2, "0");

  const textInput = document.getElementById("text-input");
  const textInput2 = document.getElementById("text-input2");
  const fontSelect = document.getElementById("text-input");
  const colorSelect = document.getElementById("color-select");
  const sizeRange1 = document.getElementById("size-range-1");
  const sizeRange2 = document.getElementById("size-range-2");
  const positionRangeX = document.getElementById("position-range-x");
  const previewContainer = document.getElementById("preview-container");
  const previewCanvas = document.getElementById("preview-canvas");
  const downloadButton = document.getElementById("download-button");
textInput2.value = datenumber;

const DailyOnceSet = function(){

  let currentDate = new Date();
  let currentDay = currentDate.getDate();
    localStorage.setItem('thumbdate', currentDay);
  }
  const Shiftdown = function () {
    let today = new Date().getDate();
    let yesterday = localStorage.getItem('thumbdate') || "";
    if(today!=yesterday){
      if(Number(localStorage.getItem("count"))+1>daily.length){
        localStorage.setItem("count",0);
      }
      else{
        
      localStorage.setItem("count",++count);
      localStorage.setItem("var4",daily[count].thumbnail);
      localStorage.setItem("var3", daily[count-1].thumbnail)
      localStorage.setItem("var2", daily[count-2].thumbnail)
      localStorage.setItem("var1", daily[count-3].thumbnail)



      }
    }  
  }

Shiftdown();
DailyOnceSet();

let var4 = localStorage.getItem("var4");
let var3;
let var2;
let var1;
if (count ==0){
  localStorage.setItem("var3", daily[67].thumbnail)
  var3 = localStorage.getItem("var3");
  localStorage.setItem("var2", daily[66].thumbnail)
  var2 = localStorage.getItem("var2");
  localStorage.setItem("var1", daily[65].thumbnail)
  var1 = localStorage.getItem("var1");
}
else if(count ==1){
  localStorage.setItem("var3", daily[0].thumbnail)
  var3 = localStorage.getItem("var3");
  localStorage.setItem("var2", daily[67].thumbnail)
  var2 = localStorage.getItem("var2");
  localStorage.setItem("var1", daily[66].thumbnail)
  var1 = localStorage.getItem("var1");
}
else if(count ==2){
  localStorage.setItem("var3", daily[1].thumbnail)
  var3 = localStorage.getItem("var3");
  localStorage.setItem("var2", daily[0].thumbnail)
  var2 = localStorage.getItem("var2");
  localStorage.setItem("var1", daily[67].thumbnail)
  var1 = localStorage.getItem("var1");
}
else{
  var3 = localStorage.getItem("var3");
  var2 = localStorage.getItem("var2");
  var1 = localStorage.getItem("var1");
}
document.getElementById("var1").value = var1;
document.getElementById("var2").value = var2;
document.getElementById("var3").value = var3;
document.getElementById("var4").value = var4;

  let currentImage = null;
  let previewImage = null;
  let fontSize1;
  // Load default image
  const defaultImage = new Image();
  //!

  textInput.value = var1;
  defaultImage.src  = "dailyrasinewsmesha.jpg" 

  

 
  
  
  
  
  defaultImage.onload = () => {
    currentImage = defaultImage;
    updatePreview();
  };

  textInput.addEventListener("input", () => {
    updatePreview();
  });

  textInput2.addEventListener("input", () => {
    updatePreview();
  });

  fontSelect.addEventListener("input", () => {
    updatePreview();
  });

  colorSelect.addEventListener("input", () => {
    updatePreview();
  });

  sizeRange1.addEventListener("input", () => {
    updatePreview();
  });

  sizeRange2.addEventListener("input", () => {
    updatePreview();
  });

  positionRangeX.addEventListener("input", () => {
    updatePreview();
  });

  function updatePreview() {
    if (!currentImage) return;

    const text = textInput.value;
    const text2 = textInput2.value;
    const color = "white"; // Set text2 color to white
    const canvas = document.createElement("canvas");
    const ctx = canvas.getContext("2d");

    const image = currentImage;

    canvas.width = image.width;
    canvas.height = image.height;

    ctx.drawImage(image, 0, 0);

    const positionX1 = 10; // Fixed X-coordinate for text1 (leftmost position)
    const positionY1 = 1730; // Fixed Y-coordinate for text1 (bottom - 600 pixels up)

    fontSize1 = 250; // Initial font size for text1
    ctx.font = `${fontSize1}px 'Anek Telugu'`;
    let textWidth = ctx.measureText(text).width;

    // Decrease font size until the text fits within the canvas width
    while (textWidth > canvas.width - 1) {
      fontSize1 -= 1;
      ctx.font = `${fontSize1}px 'Anek Telugu'`;
      textWidth = ctx.measureText(text).width;
    }

    let stretchRatio1;
    // Calculate vertical stretch factor for text1
    if (document.querySelector("#text-input").value.length > 48) {
      const originalHeight1 = fontSize1;
      const targetHeight1 = originalHeight1 + 100; // Vertical stretch factor, adjust as needed
      stretchRatio1 = targetHeight1 / originalHeight1;
    } else if (document.querySelector("#text-input").value.length < 30) {
      const originalHeight1 = fontSize1;
      const targetHeight1 = originalHeight1+15; // Vertical stretch factor, adjust as needed
      stretchRatio1 = targetHeight1 / originalHeight1;
    } else if (document.querySelector("#text-input").value.length > 40) {
      const originalHeight1 = fontSize1;
      const targetHeight1 = originalHeight1 + 40; // Vertical stretch factor, adjust as needed
      stretchRatio1 = targetHeight1 / originalHeight1;
    } else {
      const originalHeight1 = fontSize1;
      const targetHeight1 = originalHeight1 + 30; // Vertical stretch factor, adjust as needed
      stretchRatio1 = targetHeight1 / originalHeight1;
    }
    ctx.strokeStyle = "black";
ctx.lineWidth = 10;
ctx.lineJoin = "round"; // Use round corners for the stroke
    ctx.save();
    ctx.translate(positionX1, positionY1);
    ctx.scale(1, stretchRatio1);
    ctx.fillStyle = color;
ctx.strokeText(text, 0, 0);
    ctx.fillText(text, 0, 0);
    ctx.restore();
   const fixedpos = 2400;
      const fixedPositionY = 830; // Fixed position for text2
      let size2 = 620; // Get the value of sizeRange2
      
      // Calculate the desired height increase factor
      const heightIncreaseFactor = 40; // You can adjust this value as needed
      
      // Calculate the transformation matrix for vertical scaling
      const scaleX = 1;
      const scaleY = 1 + heightIncreaseFactor / 100;
      
      ctx.save(); // Save the current state of the canvas
      
      // Apply the vertical scaling transformation
      ctx.scale(scaleX, scaleY);
      
      ctx.font = `${size2}px 'Archivo Black', sans-serif`;
      ctx.fillStyle = "white"; // Set text2 color to white
      
      // Add border to text2
      ctx.lineWidth = 40;
      ctx.strokeText(text2, fixedpos, fixedPositionY);
      ctx.fillText(text2, fixedpos, fixedPositionY);
      
      ctx.restore(); // Restore the saved state of the canvas
      
      let month = monthname;
      let day = dayname;
      
      // Add a new element (PNG) in the middle of the canvas
      let middleX;
      let middleY;
      const pngElement = new Image();
      pngElement.src = `${month}.png`;
      
    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1700;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 4000; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }
    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1800;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =2050;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =2050;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =2050;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 4150; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =2090;
      middleY =780;
    pngElement.onload = () => {
      const pngWidth = 3250; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1890;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =2090;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 3000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1900;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1950;
      middleY =820;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2200; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1900;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3000; // Width of the PNG element
      const pngHeight =2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1850;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1900;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =2050;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =2050;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("vruschika")){
     middleX =2100;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =2090;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1950;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2200; // Width of the PNG element
      const pngHeight = 2100; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1900;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =2050;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2100; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1980;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1950;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2400; // Width of the PNG element
      const pngHeight =1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }






    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1830;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =2100;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =2050;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("tula")){
     middleX =2100;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =2090;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1920;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2100; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1900;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =2000;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1900;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1880;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }





    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1830;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =2100;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =2050;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("kumbha")){
     middleX =2100;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =2090;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1920;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2300; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1900;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1900;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1880;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }



    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1830;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =2000;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =2050;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("midhuna")){
     middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 3600; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =2090;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1870;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2300; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1900;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1900;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1880;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }



    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1830;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =2100;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =2050;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("makara")){
     middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 3600; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =2090;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1870;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1900;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1900;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1880;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }








    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1830;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =2100;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =2050;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("dhanussu")){
     middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 3600; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =2090;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1870;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1900;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1920;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1880;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }



    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1720;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1850;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2950; // Width of the PNG element
      const pngHeight =1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =2050;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 3400; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =2050;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("vrushabha")){
     middleX =2100;
      middleY =910;
    pngElement.onload = () => {
      const pngWidth = 3750; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =2090;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1890;
      middleY =1050;
    pngElement.onload = () => {
      const pngWidth = 2400; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =2090;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1900;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1990;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 2400; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1890;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight =2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1870;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 2700; // Width of the PNG element
      const pngHeight =1400;// Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }




    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1830;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =2100;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =2050;
      middleY =940;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("meena")){
     middleX =2000;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3800; // Width of the PNG element
      const pngHeight = 1500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =2090;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1920;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2100; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1900;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =2000;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1900;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1880;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }




    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1720;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1850;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2950; // Width of the PNG element
      const pngHeight =1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =2050;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 3400; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =2050;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("mesha")){
     middleX =2100;
      middleY =910;
    pngElement.onload = () => {
      const pngWidth = 3750; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =2090;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1890;
      middleY =1050;
    pngElement.onload = () => {
      const pngWidth = 2400; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =2090;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1900;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1990;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 2400; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1890;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight =2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1870;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 2700; // Width of the PNG element
      const pngHeight =1400;// Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }














    // Add new element (PNG) in the middle of the canvas
    let middlesX ;
    let middlesY;
    const pngElements = new Image();
    pngElements.src = `${day}.png`;
    if(`${pngElements.src}`.includes("friday.png")){
      middlesX =1700;
      middlesY =940;
    pngElements.onload = () => {
      const pngWidth = 3000; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElements, middlesX - pngWidth / 2, middlesY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else{
      middlesX =1700;
      middlesY =900;
      pngElements.onload = () => {
        const pngWidth = 3000; // Width of the PNG element
        const pngHeight = 1800; // Height of the PNG element
        ctx.drawImage(pngElements, middlesX - pngWidth / 2, middlesY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
    }








    function updatePreviewCanvas(image) {
      previewCanvas.width = previewContainer.clientWidth;
      previewCanvas.height = (previewContainer.clientWidth / image.width) * image.height;

      const scaleFactor = calculateScaleFactor(
        image.width,
        image.height,
        previewCanvas.width,
        previewCanvas.height
      );
      const previewCtx = previewCanvas.getContext("2d");
      previewCtx.clearRect(0, 0, previewCanvas.width, previewCanvas.height);
      previewCtx.drawImage(canvas, 0, 0, previewCanvas.width, previewCanvas.height);

      // Store the preview image separately
      previewImage = canvas.toDataURL();

      downloadButton.disabled = false;
    }
  }
 

  function calculateScaleFactor(originalWidth, originalHeight, maxWidth, maxHeight) {
    const widthScaleFactor = originalWidth / maxWidth;
    const heightScaleFactor = originalHeight / maxHeight;

    return Math.max(widthScaleFactor, heightScaleFactor, 1);
  }
  setTimeout(() => {10000
    const link = document.createElement("a");
    link.download = "dailyrasinewsmesha";
    link.href = previewImage; // Use the preview image data URL
    link.click();
  }, 6000);

  downloadButton.addEventListener("click", () => {
  
  });
let funk = ()=>{
  const link = document.createElement("a");
    link.download = "image";
    link.href = previewImage; // Use the preview image data URL
    link.click();
}


}, 110000);
setTimeout(() =>{
  

  let daily = [
    {
      title: "అతిపెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "ఈరోజు మీ జీవితంలోనే అతిపెద్ద శుభవార్త!",
      matter: "ఈరోజు మీకు మీ జీవితంలోనే అతిపెద్ద శుభవార్త అందుతుంది దాన్ని విన్న తరవాత మీ ఆనందానికి హద్దులు ఉండవు ",
    },
    {
      title: "ఒక స్త్రీ వల్ల ధనాలభం",
      thumbnail: "ఒక స్త్రీ వల్ల ఇలా ధనాలభం పొందే అవకాశం!",
      matter: "ఈరోజు మీకు మీ జీవిత భాగస్వామి వల్ల ధనాలభం పొందే అవకాశం ఉంది మీరు మాత్రం మీ జీవిత భాగస్వామి ని పూర్తిగా నమ్మాలి శుభం జరుగుతుంది ",
    },
    {
      title: "ఒక స్త్రీ పగబట్టి ఇలా",
      thumbnail: "ఒక స్త్రీ పగబట్టి చేసే ప్రయత్నాలు తెలిస్తే షాక్!",
      matter: "ఈరోజు ఒక స్త్రీ పాత కక్షలు పెట్టుకొని మీ మీద పగబట్టి మిమ్మల్ని ఆర్ధికంగా నష్టపరుచడానికి చెయ్యని ప్రయత్నలంటూ ఉండవు కాని మీ మంచి మనస్సు వల్ల దేవుడు మీ మీద అన్ని ప్రయత్నాలను విఫలం చేస్తారు",
    },
    {
      title: "కొత్త స్త్రీ తో స్నేహం",
      thumbnail: "2 శుభవార్తలు + ఒక కొత్త స్త్రీ తో స్నేహం",
      matter: "ఈరోజు మీరు రెండు పెద్ద శుభవార్తలు వింటారు మరియు అనుకోకుండా మీరు ఒక కొత్త స్త్రీ తో కలిసి ఆకస్మికంగా స్నేహం చేస్తారు",
    },
    {
      title: "పెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "పెద్ద శుభవార్తలు + ఈవిషయంలో జాగ్రత్త",
      matter: "ఈరోజు శుభప్రదంగా ఉంటుంది మీరు ఈరోజు పెద్ద శుభవార్తలు వింటారు ఆ శుభవార్తలు విన్న తరువాత ఆనండంలూ మద్యపానం సేవించడానికి ప్రయత్నాలు చేస్తారు ఇలా చెయ్యకండి మీ ఆరోగ్యం దెబ్బతీస్తుంది జాగ్రత్తగా ఉండండి ",
    },
    {
      title: "ఒక స్త్రీ పగబట్టి ఇలా",
      thumbnail: "ఒక స్త్రీ పగబట్టి ఈవిధంగా చేస్తుంది జాగ్రత్త",
      matter: "ఈరోజు మీ మీద ఒక స్త్రీ పగబట్టి హాని చెయ్యాలని చూస్తున్నారు , మరియు మీ మీద ఒక స్త్రీ ఏడుపు ఉంది మీ వ్యాపారం మరియు అభివృద్ధి మీద ఏడుస్తున్నారు జాగ్రత్తగా ఉండండి",
    },
    {
      title: "బంధువులే మీ సేత్రువులు",
      thumbnail: "మీ బంధువులే మీ సేత్రువులు జాగ్రత్త",
      matter: "మీ బంధువుల్లో కొందరు మీ సేత్రువులు ఉన్నారు వాళ్ళు ఎప్పుడు అవకాశం దొరికితే మిమ్మల్ని నష్టం చెయ్యాలని చూస్తున్నారు ఎవ్వరితో కూడా మీ వ్యాపారం గురించి చెప్పకండి జాగ్రత్తగా ఉండండి వెంనేపోటు పొడుస్తారు",
    }, 
    {
      title: "ఒక స్త్రీ మోసం చేస్తారు",
      thumbnail: "ఒక స్త్రీ ఇలా మోసం చేస్తుంది జాగ్రత్త!",
      matter: "ఈరోజు మీరు ఏంతో నమ్మిన ఒక స్త్రీ మిమ్మల్ని మోసం చేసే అవకాశం ఉంది జాగ్రత్తగా ఉండండి , మీరు మంచివారు కాని అందరు మంచివారు ఉండరు ఎవ్వరిని గుడ్డిగా నమ్మవద్దు",
    },
    {
      title: "ఒక స్త్రీ వల్ల డబ్బులు",
      thumbnail: "ఒక స్త్రీ వలన ఆదాయం + ఈవిషయాల్లో జాగ్రత్త",
      matter: "ఈరోజు మీకు చాలా మంచిరోజు నేడు మీకు మీ జీవిత భాగస్వామి బల్ల ధనాలభం కలుగుతుంది మరియు మీరు మీ జీవిత భాగస్వామి వల్ల చాలా సంతోషంగా ఉంటారు మీ బాధ్యతే ఏంటంటే మీరు కుడా వారిని సంతోషంగా ఉంచండి ",
    },
    {
      title: "స్త్రీ వల్ల శుభవార్తలు",
      thumbnail: "ఒక స్త్రీ వల్ల శుభవార్తలు ! తెలిస్తే షాక్!",
      matter: "ఈరోజు మీకు చాలా మంచిరోజు ఈరోజు మీకు ఒక స్త్రీ వల్ల శుభవార్తలు అందుతాయి ఈలోకంలో మీరే అదృష్టవంతులు అని ఈరోజు మీకు అనిపిస్తుంది మీరు మాత్రం ఆ శుభవార్తలు వినగానే షాక్ అవ్వడం ఖాయం",
    },
    {
      title: "స్త్రీ కాళ్ళ వద్దకు",
      thumbnail: "కోరుకున్న స్త్రీ కాళ్ళ వద్దకు వస్తుంది",
      matter: "ఈరోజు మీరు కూరుకున్న స్త్రీ మీ వ్యాపారం మరియు అభివృద్ధి చూసి వారు మీ కాళ్ళ వద్దకు వస్తారు కాని మీరు మాత్రం మీ వ్యాపారం మరియు అభివృద్ధి ని ఆపకండి ",
    },
    {
      title: "ఒక స్త్రీ మోసం చేస్తారు",
      thumbnail: "ఒక స్త్రీ వెన్నెపాటు పొడుస్తారు జాగ్రత్త!",
      matter: "ఈరోజు మీరు ఎంతగా నమ్మిన ఒక స్త్రీ మిమ్మల్ని మోసం చేస్తారు , దీనివల్ల మీరు మానసికంగా డిప్రెషన్ లోకి పోవచ్చు జాగ్రత్తగా ఉండండి లోకంలో డబ్బే అంత అని తెలుసుకోండి డబ్బు ఉంటె మీరే రాజు మీరే మంత్రి",
    },
    {
      title: "స్త్రీ వల్ల శుభవార్తలు",
      thumbnail: "ఒక స్త్రీ వల్ల శుభవార్తలు ! తెలిస్తే ఎగిరి గంటేస్తారు",
      matter: "ఈరోజు మీరు ఒక స్త్రీ వల్ల శుభవార్తలు అందుకుంటారు ఈలోకంలో మీరే అదృష్టవంతులు అని ఈరోజు మీకు అనిపిస్తుంది మీరు మాత్రం ఆ శుభవార్తలు వినగానే మీరు ఎగిరి గంతెయ్యడం మాత్రం ఖాయం",
    },
    {
      title: "ఒక స్త్రీ వల్ల ఘూరం",
      thumbnail: "ఒక స్త్రీ వల్ల ఘోరం జరుగుతుంది జాగ్రత్త!",
      matter: "ఈరోజు మీరు ఒక స్త్రీ వల్ల భారిగా నష్టపూతారు దీనివల్ల మీరు బాధ పాడుతారు కాని దానివల్ల ఏమి లాభం లేదు ఇప్పటికైనా పోయింది ఏమిలేదు అన్ని మరిచి మీరు మీ లక్ష్యం మీద దృష్తి పెడితే శుభం కలుగుతుంది",
    },
    {
      title: "కుటుంబంలో వీరికి మరనగందం",
      thumbnail: "కుటుంబంలో వీరికి మరణ గండం జాగ్రత్త!",
      matter: "ఈరోజు మీ కుటుంబంలో పెద్దవారిని ఎలెక్ట్రానిక్ వస్తువులనుంచి దూరంగా ఉంచండి ప్రమాదాలు జరిగే అవకాశాలు ఉన్నాయి అప్ప్రమత్తంగా ఉండండి వారి ఆరోగ్యం మీద శ్రెద్ద పెట్టండి శుభం కలుగుతుంది ",
    },
    {
      title: "అందమైన స్త్రీ తో ",
      thumbnail: "ఈరోజు అదృష్టం మీదే! అందమైన స్త్రీ తో",
      matter: "ఈరోజు ఈ మొత్తం ప్రపంచంలో మీరే అదృష్టవంతులు అని మీకు అనిపిస్తుంది ఈరోజు మీరు మీకు నచ్చిన ఇక అందమైన స్త్రీ తో బయటకు వెళ్లి సినిమాలు షికార్లు అని జాలిగా గడుపుతారు",
    },
    {
      title: "స్త్రీ తో మనసులోని మాట",
      thumbnail: "అందమైన స్త్రీ తో మనసులోని మాట చెప్తారు ",
      matter: "ఈరోజు మీరు మీకు నచ్చిన ఒక అందమైన స్త్రీ తో ఎప్పటినుంచో చెప్పాలనుకుంటున్న మీ మనస్సులోని మాట ఈరోజు చెపుతారు మరియు ఇలా చేస్తే ఈరోజు మీరు షాకింగ్ న్యూస్ వింటారు ",
    },
    {
      title: "పెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "పెద్ద శుభవార్తలు + ఒక స్త్రీ పగబట్టి ఇలా చేస్తది",
      matter: "ఈరోజు మీరు పెద్ద శుభవార్తలు వింటారు మరియు ఈరోజు ఒక స్త్రీ పగబట్టి మీ శుభవార్తల మీద ఈర్ష తో నష్టం చెయ్యడానికి ప్రయత్నాలు చేస్తారు కాని మీరు మీ అదృష్టం వల్ల తప్పించుకుంటారు",
    },
    {
      title: "ఒక స్త్రీ తో సరదాగా ఉలా",
      thumbnail: "ఒక స్త్రీ తో సరదాగా ఇలా చేస్తారు...! జాగ్రత్త",
      matter: "ఈరోజు మీరు సరదా కోసం మీ ప్రేయసితో బయటకు పోయి సినిమాలకు రెస్టారెంట్లకు పోయి చివరికి మీరు మీ దగ్గర ఉన్న డబ్బును మొత్తం ఐపోచేస్తారు జాగ్రత్తగా ఉండండి డబ్బును ఈరోజు మీరు ఆదా చేస్తే అవి మీకు రేపు పనికి వస్తాయి",
    },
    {
      title: "స్త్రీ వల్ల ఆనందం",
      thumbnail: "ఒక స్త్రీ వల్ల ఆనందానికి హద్దులు ఉండవు",
      matter: "ఈరోజు మీ జీవితానికి అర్ధమోచ్చే ఒక పెద్ద బంగారు శుభావర్తని మీ జీవిత భాగస్వామి మీకు అందిస్తారు ఈరోజు మీరు ఒక అందమైన స్త్రీ తో జాలిగా గడుపుతారు ఈరోజు ఆ అందమైన స్త్రీ వల్ల ఆకస్మికంగా ధనలాభం పొందే అవకాశం కుడా ఉంది",
    },
    {
      title: "వీరితో గొడవలు జాగ్రత్త",
      thumbnail: "ఈరోజు వీరితో గొడవలు జరుగుతాయి జాగ్రత్త",
      matter: "ఈరోజు మీరు ఎప్పటినుంచో గొడవ పదాలనుకుంటున్న మీ సేత్రువులు మిమ్మల్ని గెలకడంతో మీరు వారితో గొడవ పడొచ్చు కాని గొడవ పరిష్కారం కాదని మీరు తెలుసుకూవాలి కాని గొడవ జరిగితే మాత్రం గెలిసేది మీరే",
    },
    {
      title: "అందమైన స్త్రీ తో ఇలా",
      thumbnail: "ఒక అందమైన స్త్రీ తో సరదాలు + ఆకస్మిక ధనాలభం",
      matter: "ఈరోజు మీరు ఒక అందమైన స్త్రీ తో జాలిగా గడుపుతారు ఈరోజు ఆ అందమైన స్త్రీ వల్ల ఆకస్మికంగా ధనలాభం పొందే అవకాశం కుడా ఉంది",
    },
    {
      title: "స్త్రీ వల్ల నష్టాలు",
      thumbnail: "ఓక స్త్రీ వల్ల భారీగా నష్టపోతారు జాగ్రత్త!",
      matter: "ఈరోజు మీరు మీ జీవిత భాగస్వామి చేసిన ఒక తప్పు వల్ల బిజినెస్ లో భారి నష్టాలను చూస్తారు దీనివల్ల మీరు వారిమీద కోప్పడుతారు ఆఖరికి దీంట్లో వాళ్ళు కావాలని చెయ్యలేదని తెలుసుకొని క్షమిస్తారు",
    },
    {
      title: "ఒక స్త్రీ పగబట్టి ఇలా",
      thumbnail: "ఒక స్త్రీ పగబట్టి ఈవిధంగా చేస్తుంది",
      matter: "ఈరోజు మీ మీద ఎప్పటినుంచో కక్ష పెట్టుకున్న ఒక స్త్రీ ఈరోజు పగతీర్చుకోవడానికి మిమ్మల్ని మానసికంగా హాని చేస్తారు అది కుడా విఫలం అయితే శారీరికంగా హాని చేస్తారు జాగ్రత్తగా ఉండండి ",
    },
    {
      title: "ఒక స్త్రీ తో గొడవలు",
      thumbnail: "ఈరోజు ఒక స్త్రీ తో గొడవలు జరుగుతాయి",
      matter: "ఈరోజు మీకు ఒక స్త్రీ తో గొడవలు జరుగుతాయి మీరు ఎంత ఒద్దు అనుకున్న గొడవలు తప్పవు దీనిని ద్రుష్టిలో పెట్టుకొని మీరు గొడవని ఆపలేరు అయితే మీరు కోపంలో మీరు చెప్పే మాటలపై మీరు తరువాత ఆందోళన పాడుతారు జాగ్రత్త key",
    },
    {
      title: "స్త్రీ తో మనసులోని మాట",
      thumbnail: "ఒక స్త్రీ తో మనసులోని విషయం మాట్లాడతారు",
      matter: "ఈరోజు మీరు ఒక స్త్రీ తో మీ మనసులోని మాట మాట్లాడుతారు మీరు వారిని ఇష్టపడుతున్నారని వారితో చెపుతారు ఈవిషయం చెప్పినతరువాత మీకు ఒక షాకింగ్ వార్త అందుతుంది జాలిగా గడుపుతారు",
    },
    {
      title: "జీవితంలో ఒక స్త్రీ ఎంట్రీ",
      thumbnail: "మీ జీవితంలో ఒక స్త్రీ ఎంట్రీ .. అన్ని శుభవర్తలే",
      matter: "ఈరోజు మీ జీవితంలో ఒక కొత్త స్త్రీ వస్తుంది తను చాల బుద్ధిమంతురాలు మరియు అందానికి యువరాణి మీకు ఆ స్త్రీ చాల నచ్చుతుంది మరియు మీరు ఆ స్త్రీ తో స్నేహం కూడా చెయ్యడానికి ప్రయత్నాలు చేస్తారు",
    },
    {
      title: "ఒక స్త్రీ వల్ల మోసపోతారు",
      thumbnail: "ఒక స్త్రీ ని గుడ్డిగా నమ్మవద్దు! మీరు మోసపోవచ్చు",
      matter: "మీరు ప్రాణంగా ప్రేమించిన స్త్రీ ఈరోజు మిమ్మల్ని విదిచిపోవడంతో మీరు తట్టుకోలేరు మీరు డిప్రెషన్ లో కూడా పోవచ్చు కాని అదే సమయంలో మీ తల్లితండ్రులవల్ల మీకు జీవితం అంటే ఒక అర్ధం ఒస్తుంది వారి కోసమే బ్రతుకుతారు",
    },
    
    {
      title: "స్త్రీ వల్ల బంగారు శుభవార్త",
      thumbnail: "ఒక స్త్రీ వల్ల బంగారు శుభవార్తలు + ఇలా చేయకండి",
      matter: "ఈరోజు మీ జీవితానికి అర్ధమోచ్చే ఒక పెద్ద బంగారు శుభావర్తని మీ జీవిత భాగస్వామి మీకు అందిస్తారు ఆ శుభవార్త మీ జీవితాన్నే మార్చేస్తుంది కాబట్టి ఈరోజు మీరు ఆనందంలో మీరు ఎం చేయ్యలనుకున్తున్నారో ఆ పనులన్నీ చేసేస్తారు",
    },
  
    {
      title: "ప్రియమైన స్త్రీ ని కలుస్తారు",
      thumbnail: "ఒక ప్రియమైన స్త్రీ ని కలుస్తారు + ఆకస్మిక ధనాలభం",
      matter: "ఈరోజు మీరు మీకు ఏంటో ప్రియమైన స్త్రీ ని కలుస్తారు కలిసి సరదాగా మాట్లాడుకుంటారు ఇంకా ఈరోజు చివరిలో మీకు ఆకస్మిక ధనలాభం కలుగడంతో మీ ఆనందానికి హద్దులు ఉండవు ఆనందంలో పార్టి కూడా చేసుకుంటారు",
    },
    {
      title: "2 పెద్ద శుభవార్తలు",
      thumbnail: "2 పెద్ద శుభవార్తలు + ఈవిషయంలో జాగ్రత్త!",
      matter: "ఈరోజు మీరు ఎప్పటినుండో ఎదురుచూస్తున్న శుభవార్త వింటారు మరియు మీరు అనుకోకుండా ఒక స్త్రీ వల్ల ఇంకొక శుభవార్తలు అందుకుంటారు సంతోషంలో మీరు మద్యం సేవించవచ్చు ఇలా చెయ్యకండి జాగ్రత్త",
    },
    {
      title: "ఒక స్త్రీ వల్ల గొడవలు",
      thumbnail: "ఒక స్త్రీ వల్ల గొడవలు + ఆకస్మిక సంఘటనలు",
      matter: "ఈరోజు మీరు మీకు నచ్చిన ఒక స్త్రీ కోసం వేరే వాళ్లతో గొడవలలో పలుగోనతారు కాని ఆకస్మికంగా ఆ గొడవ చాల పెద్దగా కావడంతో మీరు గొడవని ముగించడానికి ప్రయత్స్తారు కాని మీరు జాగ్రత్తగా ఉండాలి దెబ్బలు కూడా తగలోచ్చు",
    },
    {
      title: "స్త్రీ వల్ల ప్రమాదాలు",
      thumbnail: "ఒక స్త్రీ వల్ల ప్రమాదాలు ముంచుకోస్తున్నాయి జాగ్రత్త",
      matter: "ఈరోజు మీకు ఒక స్త్రీ వల్ల ప్రమాదాలు మున్చుకోస్తునాయి కాబట్టి మీరు అప్ప్రమత్తంగా ఉండండి వాహనాలు నడిపెటప్పుడు ఒక స్త్రీ ని ఆకర్షించడానికి మీరు మీ వాహనాన్ని అతివేగంలో నడుపుతారు దీనివల్ల ప్రమాదం కూడా జరుగవచ్చు",
    },
    {
      title: "ఒక స్త్రీ నష్టం చేస్తారు",
      thumbnail: "ఒక స్త్రీ ఈవిధంగా నష్టం చేస్తున్నారు + ఇలా చెయ్యండి",
      matter: "మీరు మిమ్మల్ని ప్రేమిస్తున్నారు అనుకుంటున్నా స్త్రీ మీదగ్గర మీ డబ్బుకోసమే ఉన్నారు . ఈరోజు బయట ఆ స్త్రీ మిమ్మల్ని షాపింగ్ కు తెసుకేల్లి మీ లక్షలు నష్టం చేస్తారు జాగ్రత్త",
    },
    {
      title: "మంచి శుభవార్తలు ఉన్నాయి",
      thumbnail: "మంచి శుభవార్తలు + ఈవిషయాల్లో జాగ్రత్త",
      matter: "ఈరోజు మీ జీవితానికి అర్ధమోచ్చే ఒక పెద్ద బంగారు శుభావర్తని మీ జీవిత భాగస్వామి మీకు అందిస్తారు ఆ శుభవార్త మీ జీవితాన్నే మార్చేస్తుంది  సంతోషంలో మీరు మద్యం సేవించవచ్చు ఇలా చెయ్యకండి జాగ్రత్త",
    },
    {
      title: "ఒక స్త్రీ తో గొడవ",
      thumbnail: "ఈరోజు ఒక స్త్రీ తో గొడవ జరుగుతుంది జాగ్రత్త",
      matter: "ఈరోజు మీకు ఒక స్త్రీ తో ఆస్తి మరియు దనం విషయంలో గొడవలు జరుగుతాయి కాని గొడవలో మీరు నూరు జారి చెప్పకుదని మాటలు చెపుతారు గొడవ తరువాత మీరు ఎందుకుచేప్పరని బాధపడి ఆ స్త్రీ తో క్షమాపణ అడుగుతారు దీని బదులు మీరు ముందే నూరు అదుపులో పెట్టుకోండి",
    },
    {
      title: "సేత్రువులు ఇలా చేస్తారు",
      thumbnail: "రహస్య సెత్రువులు ఈవిధంగా చేస్తున్నారు జాగ్రత్త",
      matter: "ఈరోజు రహస్య సేత్రువులు మీకు తెలియకుండానె మిమ్మల్ని ఆర్ధికంగా మరియు మీ కుతుమ్బంన్ని హాని చెయ్యడానికి చెయ్యని ప్రయత్నలుండవు కాబట్టి మీరు ముందే జాగ్రత్తగా ఉండండి ఎవ్వరిని గుడ్డిగా నమ్మవద్దు మోసపోవచ్చు",
    },
    {
      title: "అమ్మాయి కాళ్ళ వద్దకు",
      thumbnail: "అందమైన అమ్మాయి మీ కాళ్ళ వద్దకు వస్తుంది",
      matter: "ఈరోజు మీ స్వప్న సుందరి మీ ఉన్నత చదువులు మరియు వ్యాపారంలో అభివృద్ధి చూసి ఒచ్చి మీ కాళ్ళ వద్దకు పడుతది . ఈరోజు మీరు పడ్డ కష్టం వ్యర్ధం కాలేదని మీరు తెలుసుకుంటారు వ్యాపారం మరియు చదువులూ ఇంకా ముందుకు సాగాలని మీకు మోటివేషన్ దొరుకుతుంది",
    },
    {
      title: "స్త్రీ వల్ల పెద్ద శుభవార్త",
      thumbnail: "ఒక స్త్రీ వల్ల పెద్ద శుభవార్త + ఆకస్మిక ధనాలభం",
      matter: "ఈరోజు మీకు ఒక స్త్రీ వల్ల పెద్ద శుభవార్త అందుతుంది మరియు వార్త వినంగానే మీ మడ్ ఒక్కసారిగా మంచిగా మారడంతో మీరు మీ పార్టనర్ తో కలిసి సినిమాకు పోతారు మరియు రాత్రి సమయంలో మీకు ధనలాభం కలుగుతుంది ",
    },
    {
      title: "స్త్రీ తో సరదాగా ఉలా",
      thumbnail: "ఒక స్త్రీ తో కలిసి సరదాగా చేసే పనులు తెలిస్తే షాక్ !",
      matter: "ఈరోజు మీరు టైం పాస్ చెయ్యడానికి ఒక స్త్రీ తో కలిసి ఒక మంచి రెస్టారెంట్ కు వెళ్లి భూజనం చెయ్యడం ఇష్టపడుతారు మరియు సినిమాకు పోయి జాలిగా గడుపుతారు ఈరోజు మీకు ఎప్పటికి గుర్తుండిపోయేలా గడుపుతారు",
    },
    {
      title: "సెత్రువులు ఇలా చేస్తారు",
      thumbnail: "పెద్ద శుభవార్తలు + సెత్రువులు ఇలా చేస్తారు",
      matter: "ఈరోజు మీకు చాల పెద్ద శుభవార్తలు అందుతాయి దీనితో మీరు చాల సంతోషంగా ఉంటారు మీ సంతోషం మీ సేత్రువులు చూడలేరు వారు మీకు ఎదో ఒక హాని చెయ్యాలని చూస్తారు కాని రోజు ఆకరికి ఏమి చెయ్యలేక అలిసి వెళ్ళిపోతారు",
    },
    {
      title: "ప్రాణగండం ఉంది జాగ్రత్త",
      thumbnail: "వీరితో గొడవలు + ప్రాణగండం ఉంది జాగ్రత్త",
      matter: "ఈరోజు మీకు మీ సేత్రువులతో గొడవలు జరుగుతాయి మరియు మీరు ఈరోజు మీ కోపాన్ని అడుపులూ ఉంచాలి లేదంటే మీకు గొడవలో తీవ్ర గాయలవల్ల ప్రాణగండం ఉంది దేవుడ్ని స్మరించండి గొడవ దేనికి కూడా సమాధానం కాదు అని మీరు తెలుసుకోవాలి",
    },
    {
      title: "స్త్రీ వల్ల పండగలు",
      thumbnail: "ఒక స్త్రీ వల్ల ఈరోజు పండుగలా ఉంటుంది",
      matter: "ఈరోజు ఒక స్త్రీ వల్ల వేడుకలా ఉంటుంది మీకు నచ్చిన స్త్రీ తో ఈరోజు మీరు బయటకు పోతారు మరియు వారితో సినిమాలకు పోయి జాలిగా గడుపుతారు ఆ స్త్రీ వల్ల రోజు చివర్లో ధనాలభం కూడా కావొచ్చు శుభం కలుగుతుంది ",
    },
    {
      title: "స్త్రీ మోసం చేస్తుంది",
      thumbnail: "ఒక స్త్రీ ఇలా మోసం చేస్తది + ఇలా చెయ్యండి",
      matter: "ఈరోజు మీరు గుడ్డిగా నమ్మిన ఒక స్త్రీ మిమ్మల్ని మోసం చేస్తది దేనిని మీరు తట్టుకోలేరు కోపంలూ మీరు డిప్రెషన్ లో కూడా పోవచ్చు కాని మీ తల్లి తండ్రులకు ఈ విషయం తెలిసి వారు మిమ్మల్ని దీని నుండి బయటకు తెస్తారు",
    },
    {
      title: "స్త్రీ మీ కాళ్ళ వద్దకు",
      thumbnail: "ఒద్దు అన్న స్త్రీ మీ కాళ్ళ వద్దకు వస్తుంది",
      matter: "మీ దగ్గర డబ్బులు లేవు మీరు బిచ్చగాల్లు అని మిమ్మల్ని వదిలి పాయిన ఆ స్త్రీ ఈరోజు మీ అభివృద్ధి మరియు మీ ఉన్నత చదువులు చూసి మల్లి మీ కాళ్ళ వద్దకు ఒస్తుంది మల్లి తనను దగ్గరుకు తెసుకున్తారా? కామెంట్ లో చెప్పండి  ",
    },
  
    {
      title: "పెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "పెద్ద శుభవార్తలు ఉన్నాయి + స్త్రీ వల్ల పండుగ",
      matter: "ఈరోజు మీకోసం పెద్ద శుభవార్తలు ఎదురుచుస్తునాయి మీరు పడ్డ కష్టానికి ప్రతిఫలం ఈరోజు మీకు శుభవార్త అందుతుంది మరియు మీ అభివృద్ది ని చూసి ",
    },
    {
      title: "స్త్రీ వల్ల ధనలాభం",
      thumbnail: "అందమైన స్త్రీ వల్ల ధనలాభం + పెద్ద శుభవార్త",
      matter: "ఈరోజు ఒక అందమైన స్త్రీ వల్ల ధనాలభం కలుగుతుంది ఇంకా రోజు మధ్యలో మీకు పెద్ద శుభవార్త అందుతుంది మీకు ఆ శుభవార్త అందుతదని మీరు కలలో కూడా ఉహించి ఉండరు కాని మీ అదృష్టం వల్ల మీకు ఆ శుభవార్తః అందుతుంది ",
    },
    {
      title: "కుటుంబంలో వీరికి ప్రాణగండం",
      thumbnail: "మీ కుటుంబంలో వీరికి ఇలా ప్రాణగండం జాగ్రత్త",
      matter: "ఈరోజు మీ కుటుంబంలో వ్రుదుల అనారోగ్యం వల్ల వారికి ప్రాణగండం ఉంది కాబట్టి పుష్టిక ఆహారాన్ని సేవించాలి మరియు దేవుడ్ని స్మరించాలి మీరు చేసిన పుణ్యకార్యాల వల్ల దేవుడు మీ గండాన్ని తొలగిస్తారు శుభం జరుగుతుంది",
    },
    {
      title: "స్త్రీ వల్ల శుభవార్తలు",
      thumbnail: "మీరు ఊహించని స్త్రీ శుభవార్తలు చెప్తారు ",
      matter: "ఈరోజు మీరు కలలో కూడా ఉహించని ఒక అందమైన స్త్రీ నోటితో మీరు శుభావర్తలు వింటారు ఈవార్త వినగానే మీ మనస్సు గాలిలో తేలినట్లు అయిపోతుంది మీరు మీ బంధువులందరితో ఈ వార్తని పంచుకుంటారు జాలిగా గడుపుతారు",
    },
    {
      title: "స్త్రీ మీ కాళ్ళ వద్దకు",
      thumbnail: "మీరు కావాలనుకున్న స్త్రీ మీ కాళ్ళ వద్దకు",
      matter: "ఈరోజు మీరు ఎప్పటినున్డూ కోరుకుంటున్న స్త్రీ మీ అదృష్టం కొద్ది మీ దగ్గర సహాయం కోరుతూ వస్తుంది మీరు కాని తనకు సహాయం చేస్తే మాత్రం మీ ఇద్దరి మధ్య బంధం ఇంకా గట్టిపడుతుంది కాని ఆ సహాయం చెయ్యడానికి కొద్దిగా శ్రీమ పడాల్సి ఉంటది",
    },
  
    {
      title: "పెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "పెద్ద శుభవార్తలు + ఒక స్త్రీ ఇలా చేస్తుంది",
      matter: "ఈరోజు మీకు మీరు ఎన్నో సంవచరాల నుండి ఎదురుచూస్తున్న శుభవార్త ఒకటి అందడం వల్ల మీరు సంతోషంగా ఎగిరి గంతులేస్తారు మరియు మీ మిత్రులకి పార్టి ఇస్తారు మొత్తానికి ఈరోజు జాలిగా గడుపుతారు కాని ఆ శుభవార్త మీ జీవితాన్ని మార్చేస్తుంది",
    },
    {
      title: "ఒక స్త్రీ మోసం చేస్తారు",
      thumbnail: "ఒక స్త్రీ మిమ్మల్ని ఈవిధంగా మోసం చేస్తున్నారు",
      matter: "ఈరోజు మీరు కళ్ళు ముసి నమ్మిన ఒక స్త్రీ మిమ్మల్ని వెంనేపోటు పొడుస్తారు మిమ్మల్ని కాదని మోసం చేస్తారు దీనితో మీరు చాల బాధ పాడుతారు కాని మీ తల్లితండ్రులు మీకు సపోర్టుగా ఉంటారు దీనివల్ల వాళ్ళని మించిన వారు లేరని మీకు తెలుస్తుంది",
    },
    {
      title: "స్త్రీ తో మనసులోని మాట",
      thumbnail: "నచ్చిన స్త్రీ తో మీ మనసులోని మాట చెపుతారు",
      matter: "మీరు ప్రతిరోజూ కలలో చూసే మీకు నచ్చిన ఒక స్త్రీ తో ఈరోజు మీరు మీ మనస్సులోని మాట చెపుదామని మీరు ఫిక్స్ అవుతారు ఇలా చెయ్యడానికి ఇదే సరైన సమయం శుభవార్తలు కూడా అందవచ్చు ఏది జరిగినా మన మంచికే అని గుర్తుపెట్టుకోండి ",
    },
    {
      title: "ఎవరంలో ఇలా జరిగిద్ది",
      thumbnail: "ఈవారంలో ఏం జరుగుతుందో తెలిస్తే షాక్",
      matter: "ఈవారంలో మీ వృత్తికి మీరే రాజు మీరే మంత్రి బిజినెస్ లో మిమ్మల్ని మించినోల్లు ఎవ్వరు ఉండరు కొత్త స్త్రీ తో పరిచయాలు జరుగుతాయి మరియు ధనాలభం కలుగుతుంది",
    },
    {
      title: "వీరే మీ సెత్రువులు",
      thumbnail: "వీరే మీ సెత్రువులు + ఒక స్త్రీ తో జాగ్రత్త",
      matter: "ఈరోజు మీరు మీ సేత్రువుల పేర్లు తెలుసుకుంటారు మరియు ఒక స్త్రీ మీ రహస్య సేత్రువు మీకు ఇప్పటివరుకు కలిగిన హాని మొత్తం మీ సేత్రువులనుంచే అని ఈరోజు మీకు తెలిసి వస్తుంది అప్ప్రమత్తంగా ఉండండి",
    },
    {
      title: "స్త్రీ కాళ్ళ వద్దకు",
      thumbnail: "మీరు ఒద్దు అని విడిచిపోయిన స్త్రీ కాళ్ళ వద్దకు",
      matter: "మీరు డబ్బు లేనివారు అని మిల్లల్ని చులకనగా చుసిన ఒక స్త్రీ ఈరోజు మీ వ్యాపారం మరియు అభివృద్ధి చూసి మల్లి మీ కాళ్ళ వద్దకు వస్తుంది కాని వచ్చిన తరువాత మీరు మీ దృష్టి ని అటు మల్లిన్చాకండి మీ వ్యాపారాన్ని ఇంకా పెంచుతూనే ఉండాలి",
    },
    {
      title: "ఒక స్త్రీ వల్ల శుభవార్తలు",
      thumbnail: "ఒక స్త్రీ వల్ల అతిపెద్ద శుభవార్తలు తెలిస్తే షాక్",
      matter: "ఈరోజు మీ జీవితంలూ ఎప్పుడు అందని శుభవార్తలు ఈరోజు మీకు ఒక స్త్రీ వల్ల అందుతాయి వాటిని విని మీరు ఎగిరి గంతులేస్తారు మీ ఆనందానికి హద్దులు ఉండవు ఆ శుభవార్తలు మీ జీవితాన్నే మార్చేస్తాయి రెడీగా ఉండండి ",
    },
    {
      title: "ఒక స్త్రీ పగబట్టి ఇలా",
      thumbnail: "ఒక స్త్రీ పగబట్టి చేసే ప్రయత్నాలు చుస్తే చాక్",
      matter: "ఈరోజు మీపైన ఎంతోకాలంగా కక్షగుడి మీ ప్రానసేత్రువు ఒక స్త్రీ మిమ్మల్ని అన్ని విధాలుగా హాని చెయ్యడానికి ప్రయత్నాలు చేస్తారు కాని మీరు చాలా ధైర్యవంతులు కావడంతో మీరు వాటన్నిటినుంచి సులభంగా తప్పించుకుంటారు ",
    },
    {
      title: "పెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "పెద్ద శుభవార్తలు ఉన్నాయి వీరు నక్కతోకతొక్కారు",
      matter: "ఈరోజు మీరునక్కతోకతొక్కారు మీకు ఈరోజు పెద్ద శుభవార్తలు అందుతాయి వాటిని విని మీ మనసు గాలిలో తేలడం మాత్రం ఖాయం ఈరోజు మీకు శుభవార్తలు విన్న తరువాత ఆనదందానికి హద్దులు ఉండవు ఎగిరి గంతులు వేస్తారు",
    },
    {
      title: "ఒక స్త్రీ వల్ల ప్రాణగండం",
      thumbnail: "ఒక స్త్రీ వల్ల ప్రాణగండం + ఈవిషయాల్లో జాగ్రత్త",
      matter: "ఈరోజు మీకు ఒక స్త్రీ వల్ల ప్రాణగండం ఉంది ఎలా అంటే ఈరోజు మీరు ఒక స్త్రీ ని ఆకట్టుకోవడానికి వాహనాన్ని అతివేగంతో నడుపడంతో మీకు ఆపదలు జరిగే అవకాశం ఉంది జాగ్రత్తగా ఉండండి మరియు వాహనాన్ని ఇంటిదగ్గర మీకోసం ఎదురుచూస్తున్నా వాళ్ళ కోసం నెమ్మదిగా తోలండి",
    },
    {
      title: "స్త్రీ తో ఇలా చేస్తారు",
      thumbnail: "శుభవార్త తెలిస్తే ఎగిరి గంటెస్తారు ఒక స్త్రీ తో",
      matter: "ఈరోజు మీ రోజువారి బ్రతుకులూ ఒక్కసారిగా పెద్ద శుభవార్త ఒకటి అందడంవల్ల మీరు మీ ప్రేయసితో కలిసి ఎంజాయ్ చెయ్యడానికి బయటకు సినిమాలు అని షికార్లకు పోతారు ఈరోజు మీ జీవితంలో ఎప్పటికి గుర్తుండిపోతుంది",
    },
    {
      title: "స్త్రే తో సరదాగా ఉలా",
      thumbnail: "అందమైన స్త్రీ తో సరదా కోసం ఇలా చేస్తారు ",
      matter: "ఈరోజు మీకు చాల అదృష్టమైన రోజు మీరు కలలో కూడా ఉహించని అందమైన స్త్రీ తో ఈరోజు మీరు సరదాగా షికారుకు వెళ్లి జాలిగా గడుపుతారు మరియు మీ ఇద్దరి బంధం దీనివల్ల ఇంకా ద్రుదపడుతుంది",
    },
    {
      title: "ఒక స్త్రీ కాళ్ళ దగ్గర",
      thumbnail: "శుభవార్త ! ఒక స్త్రీ ఈరోజు మీ కాళ్ళ దగ్గర",
      matter: "ఈరోజు శుభవార్త అందుతుంది మీరు పేదవాళ్ళు అని మిమ్మల్ని వదిలిపొఇన ఒక స్త్రీ ఈరోజు మీ అభివృద్ధి మరియు దానం చూసి మల్లి మీ కాళ్ళ దగ్గర రావడం ఖాయం",
    },
    {
      title: "స్త్రీ వల్ల గుండెలుపగిలే వార్త",
      thumbnail: "ఒక స్త్రీ వల్ల గుండెలు పగిలే వార్తలు జాగ్రత్త",
      matter: "ఈరోజు మీరు ఎంతగా నమ్మిన స్త్రీ తరుపునుంచి మీకు గుండెలు పగిలే వార్తలు వింటారు ఆ వార్తలు ఏంటంటే వారి ఆరోగ్యం అస్సలు బాగాలేదు మరియు ఆసుపత్రిలూ వారికి చాల ఖర్చులు ఉన్నాయి ఇది విన్న తరువాత మీరు వారిని ఆర్ధికంగా సహాయం చేస్తారు",
    },
    {
      title: "ఒక స్త్రీ మిమ్మల్ని హాని",
      thumbnail: "ఒక స్త్రీ ఇలా హాని చేస్తుంది ఇప్పుడే తెలుసుకోండి",
      matter: "ఈరోజు మీకు ఒక స్త్రీ పగబట్టి శారీరికంగా హాని చెయ్యడానికి చెయ్యని ప్రయత్నాలు ఉండవు కావున మీరు బయటకు వెళ్ళేటప్పుడు దేవుడ్ని స్మరించి జాగ్రత్తగా వెళ్ళండి మీకు ఎలాంటి హాని కలగదు",
    },
    {
      title: "మీ మీద స్త్రీ దృష్టి",
      thumbnail: "మీ మీద ఒక స్త్రీ చేసుదృష్టి జాగ్రత్త",
      matter: "మీ మీద ఒక స్త్రీ చేడుద్రుష్టి ఈలోకంలో చేడుద్రుష్టి అనేది ఒక రాజుని కూడా బిచ్చగాడు లా చెయ్యొచ్చు మీ సంపద మీద ఒక స్త్రీ ఏడుస్తుంది ఇది మీరు జాగ్రత్తగా ఉండాల్సిన సమయం అప్ప్రమత్తంగా ఉండండి",
    },
    {
      title: "ఒక స్త్రీ వల్ల శుభవార్తలు",
      thumbnail: "అన్ని శుభవార్తలే మీ జీవితంలో ఒక స్త్రీ ఎంట్రీ",
      matter: "ఎప్పటినుండో బ్రేక్ లో ఉన్న మీ జీవితం ఒక స్త్రీ రావడంతో దూసుకుపోతుంది , అవును ఈరోజు మీకు అన్ని శుభవార్తలు అందుతాయి మరియు మీ జీవితంలూ ఒక స్త్రీ ఎంట్రీ ఇస్తుంది ",
    },
    {
      title: "స్త్రీ వల్ల పెద్ద శుభవార్తలు",
      thumbnail: "ఒక స్త్రీ వల్ల 3 పెద్ద శుభవార్తలు + ఇలా చెయ్యకండి",
      matter: "ఈరోజు మీరు ఒక స్త్రీ వల్ల మూడు పెద్ద శుభావర్హలు అందుకుంటారు మరియు శుభవార్తలు అందుకున్న వెంటనే మీరు ఆ విషయాలను మీ తల్లి తండ్రులకు ముందుగా చెపుతారు ఎందుకంటే ఈలోకంలో వారిని మించి మీకు ఎవ్వరు లేరు",
    },
  ];
  const today = new Date();
  let tomorrow = new Date(today);
  tomorrow.setDate(tomorrow.getDate() + 2);

  let dayOfWeekIndex = tomorrow.getDay();
  let dayOfWeekArray = [
    "sunday",
    "monday",
    "tuesday",
    "wednesday",
    "thursday",
    "friday",
    "saturday"
  ];

  

  let monthIndex = tomorrow.getMonth();
  let monthArray = [
    "january",
    "february",
    "march",
    "april",
    "may",
    "june",
    "july",
    "august",
    "september",
    "october",
    "november",
    "december",
  ];
let count = Number(localStorage.getItem("count") )|| 23;
  let dayname = dayOfWeekArray[dayOfWeekIndex];
  let monthname = monthArray[monthIndex];
  let datenumber = tomorrow.getDate().toString().padStart(2, "0");

  const textInput = document.getElementById("text-input");
  const textInput2 = document.getElementById("text-input2");
  const fontSelect = document.getElementById("text-input");
  const colorSelect = document.getElementById("color-select");
  const sizeRange1 = document.getElementById("size-range-1");
  const sizeRange2 = document.getElementById("size-range-2");
  const positionRangeX = document.getElementById("position-range-x");
  const previewContainer = document.getElementById("preview-container");
  const previewCanvas = document.getElementById("preview-canvas");
  const downloadButton = document.getElementById("download-button");
textInput2.value = datenumber;

const DailyOnceSet = function(){

  let currentDate = new Date();
  let currentDay = currentDate.getDate();
    localStorage.setItem('thumbdate', currentDay);
  }
  const Shiftdown = function () {
    let today = new Date().getDate();
    let yesterday = localStorage.getItem('thumbdate') || "";
    if(today!=yesterday){
      if(Number(localStorage.getItem("count"))+1>daily.length){
        localStorage.setItem("count",0);
      }
      else{
        
      localStorage.setItem("count",++count);
      localStorage.setItem("var4",daily[count].thumbnail);
      localStorage.setItem("var3", daily[count-1].thumbnail)
      localStorage.setItem("var2", daily[count-2].thumbnail)
      localStorage.setItem("var1", daily[count-3].thumbnail)



      }
    }  
  }

Shiftdown();
DailyOnceSet();

let var4 = localStorage.getItem("var4");
let var3;
let var2;
let var1;
if (count ==0){
  localStorage.setItem("var3", daily[67].thumbnail)
  var3 = localStorage.getItem("var3");
  localStorage.setItem("var2", daily[66].thumbnail)
  var2 = localStorage.getItem("var2");
  localStorage.setItem("var1", daily[65].thumbnail)
  var1 = localStorage.getItem("var1");
}
else if(count ==1){
  localStorage.setItem("var3", daily[0].thumbnail)
  var3 = localStorage.getItem("var3");
  localStorage.setItem("var2", daily[67].thumbnail)
  var2 = localStorage.getItem("var2");
  localStorage.setItem("var1", daily[66].thumbnail)
  var1 = localStorage.getItem("var1");
}
else if(count ==2){
  localStorage.setItem("var3", daily[1].thumbnail)
  var3 = localStorage.getItem("var3");
  localStorage.setItem("var2", daily[0].thumbnail)
  var2 = localStorage.getItem("var2");
  localStorage.setItem("var1", daily[67].thumbnail)
  var1 = localStorage.getItem("var1");
}
else{
  var3 = localStorage.getItem("var3");
  var2 = localStorage.getItem("var2");
  var1 = localStorage.getItem("var1");
}
document.getElementById("var1").value = var1;
document.getElementById("var2").value = var2;
document.getElementById("var3").value = var3;
document.getElementById("var4").value = var4;

  let currentImage = null;
  let previewImage = null;
  let fontSize1;
  // Load default image
  const defaultImage = new Image();
  //!

  textInput.value = var2;
  defaultImage.src  = "astrologymeena.jpg" 

  

 
  
  
  
  
  defaultImage.onload = () => {
    currentImage = defaultImage;
    updatePreview();
  };

  textInput.addEventListener("input", () => {
    updatePreview();
  });

  textInput2.addEventListener("input", () => {
    updatePreview();
  });

  fontSelect.addEventListener("input", () => {
    updatePreview();
  });

  colorSelect.addEventListener("input", () => {
    updatePreview();
  });

  sizeRange1.addEventListener("input", () => {
    updatePreview();
  });

  sizeRange2.addEventListener("input", () => {
    updatePreview();
  });

  positionRangeX.addEventListener("input", () => {
    updatePreview();
  });

  function updatePreview() {
    if (!currentImage) return;

    const text = textInput.value;
    const text2 = textInput2.value;
    const color = "white"; // Set text2 color to white
    const canvas = document.createElement("canvas");
    const ctx = canvas.getContext("2d");

    const image = currentImage;

    canvas.width = image.width;
    canvas.height = image.height;

    ctx.drawImage(image, 0, 0);

    const positionX1 = 10; // Fixed X-coordinate for text1 (leftmost position)
    const positionY1 = 1730; // Fixed Y-coordinate for text1 (bottom - 600 pixels up)

    fontSize1 = 250; // Initial font size for text1
    ctx.font = `${fontSize1}px 'Anek Telugu'`;
    let textWidth = ctx.measureText(text).width;

    // Decrease font size until the text fits within the canvas width
    while (textWidth > canvas.width - 1) {
      fontSize1 -= 1;
      ctx.font = `${fontSize1}px 'Anek Telugu'`;
      textWidth = ctx.measureText(text).width;
    }

    let stretchRatio1;
    // Calculate vertical stretch factor for text1
    if (document.querySelector("#text-input").value.length > 48) {
      const originalHeight1 = fontSize1;
      const targetHeight1 = originalHeight1 + 100; // Vertical stretch factor, adjust as needed
      stretchRatio1 = targetHeight1 / originalHeight1;
    } else if (document.querySelector("#text-input").value.length < 30) {
      const originalHeight1 = fontSize1;
      const targetHeight1 = originalHeight1+15; // Vertical stretch factor, adjust as needed
      stretchRatio1 = targetHeight1 / originalHeight1;
    } else if (document.querySelector("#text-input").value.length > 40) {
      const originalHeight1 = fontSize1;
      const targetHeight1 = originalHeight1 + 40; // Vertical stretch factor, adjust as needed
      stretchRatio1 = targetHeight1 / originalHeight1;
    } else {
      const originalHeight1 = fontSize1;
      const targetHeight1 = originalHeight1 + 30; // Vertical stretch factor, adjust as needed
      stretchRatio1 = targetHeight1 / originalHeight1;
    }
    ctx.strokeStyle = "black";
ctx.lineWidth = 10;
ctx.lineJoin = "round"; // Use round corners for the stroke
    ctx.save();
    ctx.translate(positionX1, positionY1);
    ctx.scale(1, stretchRatio1);
    ctx.fillStyle = color;
ctx.strokeText(text, 0, 0);
    ctx.fillText(text, 0, 0);
    ctx.restore();
   const fixedpos = 2400;
      const fixedPositionY = 830; // Fixed position for text2
      let size2 = 620; // Get the value of sizeRange2
      
      // Calculate the desired height increase factor
      const heightIncreaseFactor = 40; // You can adjust this value as needed
      
      // Calculate the transformation matrix for vertical scaling
      const scaleX = 1;
      const scaleY = 1 + heightIncreaseFactor / 100;
      
      ctx.save(); // Save the current state of the canvas
      
      // Apply the vertical scaling transformation
      ctx.scale(scaleX, scaleY);
      
      ctx.font = `${size2}px 'Archivo Black', sans-serif`;
      ctx.fillStyle = "white"; // Set text2 color to white
      
      // Add border to text2
      ctx.lineWidth = 40;
      ctx.strokeText(text2, fixedpos, fixedPositionY);
      ctx.fillText(text2, fixedpos, fixedPositionY);
      
      ctx.restore(); // Restore the saved state of the canvas
      
      let month = monthname;
      let day = dayname;
      
      // Add a new element (PNG) in the middle of the canvas
      let middleX;
      let middleY;
      const pngElement = new Image();
      pngElement.src = `${month}.png`;
      
    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1700;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 4000; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }
    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1800;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =2050;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =2050;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =2050;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 4150; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =2090;
      middleY =780;
    pngElement.onload = () => {
      const pngWidth = 3250; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1890;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =2090;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 3000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1900;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1950;
      middleY =820;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2200; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1900;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3000; // Width of the PNG element
      const pngHeight =2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1850;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1900;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =2050;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =2050;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("vruschika")){
     middleX =2100;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =2090;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1950;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2200; // Width of the PNG element
      const pngHeight = 2100; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1900;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =2050;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2100; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1980;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1950;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2400; // Width of the PNG element
      const pngHeight =1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }






    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1830;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =2100;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =2050;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("tula")){
     middleX =2100;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =2090;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1920;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2100; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1900;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =2000;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1900;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1880;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }





    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1830;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =2100;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =2050;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("kumbha")){
     middleX =2100;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =2090;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1920;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2300; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1900;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1900;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1880;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }



    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1830;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =2000;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =2050;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("midhuna")){
     middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 3600; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =2090;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1870;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2300; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1900;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1900;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1880;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }



    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1830;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =2100;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =2050;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("makara")){
     middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 3600; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =2090;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1870;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1900;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1900;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1880;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }








    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1830;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =2100;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =2050;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("dhanussu")){
     middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 3600; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =2090;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1870;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1900;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1920;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1880;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }



    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1720;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1850;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2950; // Width of the PNG element
      const pngHeight =1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =2050;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 3400; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =2050;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("vrushabha")){
     middleX =2100;
      middleY =910;
    pngElement.onload = () => {
      const pngWidth = 3750; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =2090;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1890;
      middleY =1050;
    pngElement.onload = () => {
      const pngWidth = 2400; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =2090;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1900;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1990;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 2400; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1890;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight =2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1870;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 2700; // Width of the PNG element
      const pngHeight =1400;// Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }




    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1830;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =2100;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =2050;
      middleY =940;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("meena")){
     middleX =2000;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3800; // Width of the PNG element
      const pngHeight = 1500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =2090;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1920;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2100; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1900;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =2000;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1900;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1880;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }




    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1720;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1850;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2950; // Width of the PNG element
      const pngHeight =1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =2050;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 3400; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =2050;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("mesha")){
     middleX =2100;
      middleY =910;
    pngElement.onload = () => {
      const pngWidth = 3750; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =2090;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1890;
      middleY =1050;
    pngElement.onload = () => {
      const pngWidth = 2400; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =2090;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1900;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1990;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 2400; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1890;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight =2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1870;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 2700; // Width of the PNG element
      const pngHeight =1400;// Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }














    // Add new element (PNG) in the middle of the canvas
    let middlesX ;
    let middlesY;
    const pngElements = new Image();
    pngElements.src = `${day}.png`;
    if(`${pngElements.src}`.includes("friday.png")){
      middlesX =1700;
      middlesY =940;
    pngElements.onload = () => {
      const pngWidth = 3000; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElements, middlesX - pngWidth / 2, middlesY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else{
      middlesX =1700;
      middlesY =900;
      pngElements.onload = () => {
        const pngWidth = 3000; // Width of the PNG element
        const pngHeight = 1800; // Height of the PNG element
        ctx.drawImage(pngElements, middlesX - pngWidth / 2, middlesY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
    }








    function updatePreviewCanvas(image) {
      previewCanvas.width = previewContainer.clientWidth;
      previewCanvas.height = (previewContainer.clientWidth / image.width) * image.height;

      const scaleFactor = calculateScaleFactor(
        image.width,
        image.height,
        previewCanvas.width,
        previewCanvas.height
      );
      const previewCtx = previewCanvas.getContext("2d");
      previewCtx.clearRect(0, 0, previewCanvas.width, previewCanvas.height);
      previewCtx.drawImage(canvas, 0, 0, previewCanvas.width, previewCanvas.height);

      // Store the preview image separately
      previewImage = canvas.toDataURL();

      downloadButton.disabled = false;
    }
  }
 

  function calculateScaleFactor(originalWidth, originalHeight, maxWidth, maxHeight) {
    const widthScaleFactor = originalWidth / maxWidth;
    const heightScaleFactor = originalHeight / maxHeight;

    return Math.max(widthScaleFactor, heightScaleFactor, 1);
  }
  setTimeout(() => {
    const link = document.createElement("a");
    link.download = "astrologymeena";
    link.href = previewImage; // Use the preview image data URL
    link.click();
  }, 6000);
 
  downloadButton.addEventListener("click", () => {
  });
let funk = ()=>{
  const link = document.createElement("a");
    link.download = "image";
    link.href = previewImage; // Use the preview image data URL
    link.click();
}


}, 120000);
setTimeout(() =>{
  

  let daily = [
    {
      title: "అతిపెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "ఈరోజు మీ జీవితంలోనే అతిపెద్ద శుభవార్త!",
      matter: "ఈరోజు మీకు మీ జీవితంలోనే అతిపెద్ద శుభవార్త అందుతుంది దాన్ని విన్న తరవాత మీ ఆనందానికి హద్దులు ఉండవు ",
    },
    {
      title: "ఒక స్త్రీ వల్ల ధనాలభం",
      thumbnail: "ఒక స్త్రీ వల్ల ఇలా ధనాలభం పొందే అవకాశం!",
      matter: "ఈరోజు మీకు మీ జీవిత భాగస్వామి వల్ల ధనాలభం పొందే అవకాశం ఉంది మీరు మాత్రం మీ జీవిత భాగస్వామి ని పూర్తిగా నమ్మాలి శుభం జరుగుతుంది ",
    },
    {
      title: "ఒక స్త్రీ పగబట్టి ఇలా",
      thumbnail: "ఒక స్త్రీ పగబట్టి చేసే ప్రయత్నాలు తెలిస్తే షాక్!",
      matter: "ఈరోజు ఒక స్త్రీ పాత కక్షలు పెట్టుకొని మీ మీద పగబట్టి మిమ్మల్ని ఆర్ధికంగా నష్టపరుచడానికి చెయ్యని ప్రయత్నలంటూ ఉండవు కాని మీ మంచి మనస్సు వల్ల దేవుడు మీ మీద అన్ని ప్రయత్నాలను విఫలం చేస్తారు",
    },
    {
      title: "కొత్త స్త్రీ తో స్నేహం",
      thumbnail: "2 శుభవార్తలు + ఒక కొత్త స్త్రీ తో స్నేహం",
      matter: "ఈరోజు మీరు రెండు పెద్ద శుభవార్తలు వింటారు మరియు అనుకోకుండా మీరు ఒక కొత్త స్త్రీ తో కలిసి ఆకస్మికంగా స్నేహం చేస్తారు",
    },
    {
      title: "పెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "పెద్ద శుభవార్తలు + ఈవిషయంలో జాగ్రత్త",
      matter: "ఈరోజు శుభప్రదంగా ఉంటుంది మీరు ఈరోజు పెద్ద శుభవార్తలు వింటారు ఆ శుభవార్తలు విన్న తరువాత ఆనండంలూ మద్యపానం సేవించడానికి ప్రయత్నాలు చేస్తారు ఇలా చెయ్యకండి మీ ఆరోగ్యం దెబ్బతీస్తుంది జాగ్రత్తగా ఉండండి ",
    },
    {
      title: "ఒక స్త్రీ పగబట్టి ఇలా",
      thumbnail: "ఒక స్త్రీ పగబట్టి ఈవిధంగా చేస్తుంది జాగ్రత్త",
      matter: "ఈరోజు మీ మీద ఒక స్త్రీ పగబట్టి హాని చెయ్యాలని చూస్తున్నారు , మరియు మీ మీద ఒక స్త్రీ ఏడుపు ఉంది మీ వ్యాపారం మరియు అభివృద్ధి మీద ఏడుస్తున్నారు జాగ్రత్తగా ఉండండి",
    },
    {
      title: "బంధువులే మీ సేత్రువులు",
      thumbnail: "మీ బంధువులే మీ సేత్రువులు జాగ్రత్త",
      matter: "మీ బంధువుల్లో కొందరు మీ సేత్రువులు ఉన్నారు వాళ్ళు ఎప్పుడు అవకాశం దొరికితే మిమ్మల్ని నష్టం చెయ్యాలని చూస్తున్నారు ఎవ్వరితో కూడా మీ వ్యాపారం గురించి చెప్పకండి జాగ్రత్తగా ఉండండి వెంనేపోటు పొడుస్తారు",
    }, 
    {
      title: "ఒక స్త్రీ మోసం చేస్తారు",
      thumbnail: "ఒక స్త్రీ ఇలా మోసం చేస్తుంది జాగ్రత్త!",
      matter: "ఈరోజు మీరు ఏంతో నమ్మిన ఒక స్త్రీ మిమ్మల్ని మోసం చేసే అవకాశం ఉంది జాగ్రత్తగా ఉండండి , మీరు మంచివారు కాని అందరు మంచివారు ఉండరు ఎవ్వరిని గుడ్డిగా నమ్మవద్దు",
    },
    {
      title: "ఒక స్త్రీ వల్ల డబ్బులు",
      thumbnail: "ఒక స్త్రీ వలన ఆదాయం + ఈవిషయాల్లో జాగ్రత్త",
      matter: "ఈరోజు మీకు చాలా మంచిరోజు నేడు మీకు మీ జీవిత భాగస్వామి బల్ల ధనాలభం కలుగుతుంది మరియు మీరు మీ జీవిత భాగస్వామి వల్ల చాలా సంతోషంగా ఉంటారు మీ బాధ్యతే ఏంటంటే మీరు కుడా వారిని సంతోషంగా ఉంచండి ",
    },
    {
      title: "స్త్రీ వల్ల శుభవార్తలు",
      thumbnail: "ఒక స్త్రీ వల్ల శుభవార్తలు ! తెలిస్తే షాక్!",
      matter: "ఈరోజు మీకు చాలా మంచిరోజు ఈరోజు మీకు ఒక స్త్రీ వల్ల శుభవార్తలు అందుతాయి ఈలోకంలో మీరే అదృష్టవంతులు అని ఈరోజు మీకు అనిపిస్తుంది మీరు మాత్రం ఆ శుభవార్తలు వినగానే షాక్ అవ్వడం ఖాయం",
    },
    {
      title: "స్త్రీ కాళ్ళ వద్దకు",
      thumbnail: "కోరుకున్న స్త్రీ కాళ్ళ వద్దకు వస్తుంది",
      matter: "ఈరోజు మీరు కూరుకున్న స్త్రీ మీ వ్యాపారం మరియు అభివృద్ధి చూసి వారు మీ కాళ్ళ వద్దకు వస్తారు కాని మీరు మాత్రం మీ వ్యాపారం మరియు అభివృద్ధి ని ఆపకండి ",
    },
    {
      title: "ఒక స్త్రీ మోసం చేస్తారు",
      thumbnail: "ఒక స్త్రీ వెన్నెపాటు పొడుస్తారు జాగ్రత్త!",
      matter: "ఈరోజు మీరు ఎంతగా నమ్మిన ఒక స్త్రీ మిమ్మల్ని మోసం చేస్తారు , దీనివల్ల మీరు మానసికంగా డిప్రెషన్ లోకి పోవచ్చు జాగ్రత్తగా ఉండండి లోకంలో డబ్బే అంత అని తెలుసుకోండి డబ్బు ఉంటె మీరే రాజు మీరే మంత్రి",
    },
    {
      title: "స్త్రీ వల్ల శుభవార్తలు",
      thumbnail: "ఒక స్త్రీ వల్ల శుభవార్తలు ! తెలిస్తే ఎగిరి గంటేస్తారు",
      matter: "ఈరోజు మీరు ఒక స్త్రీ వల్ల శుభవార్తలు అందుకుంటారు ఈలోకంలో మీరే అదృష్టవంతులు అని ఈరోజు మీకు అనిపిస్తుంది మీరు మాత్రం ఆ శుభవార్తలు వినగానే మీరు ఎగిరి గంతెయ్యడం మాత్రం ఖాయం",
    },
    {
      title: "ఒక స్త్రీ వల్ల ఘూరం",
      thumbnail: "ఒక స్త్రీ వల్ల ఘోరం జరుగుతుంది జాగ్రత్త!",
      matter: "ఈరోజు మీరు ఒక స్త్రీ వల్ల భారిగా నష్టపూతారు దీనివల్ల మీరు బాధ పాడుతారు కాని దానివల్ల ఏమి లాభం లేదు ఇప్పటికైనా పోయింది ఏమిలేదు అన్ని మరిచి మీరు మీ లక్ష్యం మీద దృష్తి పెడితే శుభం కలుగుతుంది",
    },
    {
      title: "కుటుంబంలో వీరికి మరనగందం",
      thumbnail: "కుటుంబంలో వీరికి మరణ గండం జాగ్రత్త!",
      matter: "ఈరోజు మీ కుటుంబంలో పెద్దవారిని ఎలెక్ట్రానిక్ వస్తువులనుంచి దూరంగా ఉంచండి ప్రమాదాలు జరిగే అవకాశాలు ఉన్నాయి అప్ప్రమత్తంగా ఉండండి వారి ఆరోగ్యం మీద శ్రెద్ద పెట్టండి శుభం కలుగుతుంది ",
    },
    {
      title: "అందమైన స్త్రీ తో ",
      thumbnail: "ఈరోజు అదృష్టం మీదే! అందమైన స్త్రీ తో",
      matter: "ఈరోజు ఈ మొత్తం ప్రపంచంలో మీరే అదృష్టవంతులు అని మీకు అనిపిస్తుంది ఈరోజు మీరు మీకు నచ్చిన ఇక అందమైన స్త్రీ తో బయటకు వెళ్లి సినిమాలు షికార్లు అని జాలిగా గడుపుతారు",
    },
    {
      title: "స్త్రీ తో మనసులోని మాట",
      thumbnail: "అందమైన స్త్రీ తో మనసులోని మాట చెప్తారు ",
      matter: "ఈరోజు మీరు మీకు నచ్చిన ఒక అందమైన స్త్రీ తో ఎప్పటినుంచో చెప్పాలనుకుంటున్న మీ మనస్సులోని మాట ఈరోజు చెపుతారు మరియు ఇలా చేస్తే ఈరోజు మీరు షాకింగ్ న్యూస్ వింటారు ",
    },
    {
      title: "పెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "పెద్ద శుభవార్తలు + ఒక స్త్రీ పగబట్టి ఇలా చేస్తది",
      matter: "ఈరోజు మీరు పెద్ద శుభవార్తలు వింటారు మరియు ఈరోజు ఒక స్త్రీ పగబట్టి మీ శుభవార్తల మీద ఈర్ష తో నష్టం చెయ్యడానికి ప్రయత్నాలు చేస్తారు కాని మీరు మీ అదృష్టం వల్ల తప్పించుకుంటారు",
    },
    {
      title: "ఒక స్త్రీ తో సరదాగా ఉలా",
      thumbnail: "ఒక స్త్రీ తో సరదాగా ఇలా చేస్తారు...! జాగ్రత్త",
      matter: "ఈరోజు మీరు సరదా కోసం మీ ప్రేయసితో బయటకు పోయి సినిమాలకు రెస్టారెంట్లకు పోయి చివరికి మీరు మీ దగ్గర ఉన్న డబ్బును మొత్తం ఐపోచేస్తారు జాగ్రత్తగా ఉండండి డబ్బును ఈరోజు మీరు ఆదా చేస్తే అవి మీకు రేపు పనికి వస్తాయి",
    },
    {
      title: "స్త్రీ వల్ల ఆనందం",
      thumbnail: "ఒక స్త్రీ వల్ల ఆనందానికి హద్దులు ఉండవు",
      matter: "ఈరోజు మీ జీవితానికి అర్ధమోచ్చే ఒక పెద్ద బంగారు శుభావర్తని మీ జీవిత భాగస్వామి మీకు అందిస్తారు ఈరోజు మీరు ఒక అందమైన స్త్రీ తో జాలిగా గడుపుతారు ఈరోజు ఆ అందమైన స్త్రీ వల్ల ఆకస్మికంగా ధనలాభం పొందే అవకాశం కుడా ఉంది",
    },
    {
      title: "వీరితో గొడవలు జాగ్రత్త",
      thumbnail: "ఈరోజు వీరితో గొడవలు జరుగుతాయి జాగ్రత్త",
      matter: "ఈరోజు మీరు ఎప్పటినుంచో గొడవ పదాలనుకుంటున్న మీ సేత్రువులు మిమ్మల్ని గెలకడంతో మీరు వారితో గొడవ పడొచ్చు కాని గొడవ పరిష్కారం కాదని మీరు తెలుసుకూవాలి కాని గొడవ జరిగితే మాత్రం గెలిసేది మీరే",
    },
    {
      title: "అందమైన స్త్రీ తో ఇలా",
      thumbnail: "ఒక అందమైన స్త్రీ తో సరదాలు + ఆకస్మిక ధనాలభం",
      matter: "ఈరోజు మీరు ఒక అందమైన స్త్రీ తో జాలిగా గడుపుతారు ఈరోజు ఆ అందమైన స్త్రీ వల్ల ఆకస్మికంగా ధనలాభం పొందే అవకాశం కుడా ఉంది",
    },
    {
      title: "స్త్రీ వల్ల నష్టాలు",
      thumbnail: "ఓక స్త్రీ వల్ల భారీగా నష్టపోతారు జాగ్రత్త!",
      matter: "ఈరోజు మీరు మీ జీవిత భాగస్వామి చేసిన ఒక తప్పు వల్ల బిజినెస్ లో భారి నష్టాలను చూస్తారు దీనివల్ల మీరు వారిమీద కోప్పడుతారు ఆఖరికి దీంట్లో వాళ్ళు కావాలని చెయ్యలేదని తెలుసుకొని క్షమిస్తారు",
    },
    {
      title: "ఒక స్త్రీ పగబట్టి ఇలా",
      thumbnail: "ఒక స్త్రీ పగబట్టి ఈవిధంగా చేస్తుంది",
      matter: "ఈరోజు మీ మీద ఎప్పటినుంచో కక్ష పెట్టుకున్న ఒక స్త్రీ ఈరోజు పగతీర్చుకోవడానికి మిమ్మల్ని మానసికంగా హాని చేస్తారు అది కుడా విఫలం అయితే శారీరికంగా హాని చేస్తారు జాగ్రత్తగా ఉండండి ",
    },
    {
      title: "ఒక స్త్రీ తో గొడవలు",
      thumbnail: "ఈరోజు ఒక స్త్రీ తో గొడవలు జరుగుతాయి",
      matter: "ఈరోజు మీకు ఒక స్త్రీ తో గొడవలు జరుగుతాయి మీరు ఎంత ఒద్దు అనుకున్న గొడవలు తప్పవు దీనిని ద్రుష్టిలో పెట్టుకొని మీరు గొడవని ఆపలేరు అయితే మీరు కోపంలో మీరు చెప్పే మాటలపై మీరు తరువాత ఆందోళన పాడుతారు జాగ్రత్త key",
    },
    {
      title: "స్త్రీ తో మనసులోని మాట",
      thumbnail: "ఒక స్త్రీ తో మనసులోని విషయం మాట్లాడతారు",
      matter: "ఈరోజు మీరు ఒక స్త్రీ తో మీ మనసులోని మాట మాట్లాడుతారు మీరు వారిని ఇష్టపడుతున్నారని వారితో చెపుతారు ఈవిషయం చెప్పినతరువాత మీకు ఒక షాకింగ్ వార్త అందుతుంది జాలిగా గడుపుతారు",
    },
    {
      title: "జీవితంలో ఒక స్త్రీ ఎంట్రీ",
      thumbnail: "మీ జీవితంలో ఒక స్త్రీ ఎంట్రీ .. అన్ని శుభవర్తలే",
      matter: "ఈరోజు మీ జీవితంలో ఒక కొత్త స్త్రీ వస్తుంది తను చాల బుద్ధిమంతురాలు మరియు అందానికి యువరాణి మీకు ఆ స్త్రీ చాల నచ్చుతుంది మరియు మీరు ఆ స్త్రీ తో స్నేహం కూడా చెయ్యడానికి ప్రయత్నాలు చేస్తారు",
    },
    {
      title: "ఒక స్త్రీ వల్ల మోసపోతారు",
      thumbnail: "ఒక స్త్రీ ని గుడ్డిగా నమ్మవద్దు! మీరు మోసపోవచ్చు",
      matter: "మీరు ప్రాణంగా ప్రేమించిన స్త్రీ ఈరోజు మిమ్మల్ని విదిచిపోవడంతో మీరు తట్టుకోలేరు మీరు డిప్రెషన్ లో కూడా పోవచ్చు కాని అదే సమయంలో మీ తల్లితండ్రులవల్ల మీకు జీవితం అంటే ఒక అర్ధం ఒస్తుంది వారి కోసమే బ్రతుకుతారు",
    },
    
    {
      title: "స్త్రీ వల్ల బంగారు శుభవార్త",
      thumbnail: "ఒక స్త్రీ వల్ల బంగారు శుభవార్తలు + ఇలా చేయకండి",
      matter: "ఈరోజు మీ జీవితానికి అర్ధమోచ్చే ఒక పెద్ద బంగారు శుభావర్తని మీ జీవిత భాగస్వామి మీకు అందిస్తారు ఆ శుభవార్త మీ జీవితాన్నే మార్చేస్తుంది కాబట్టి ఈరోజు మీరు ఆనందంలో మీరు ఎం చేయ్యలనుకున్తున్నారో ఆ పనులన్నీ చేసేస్తారు",
    },
  
    {
      title: "ప్రియమైన స్త్రీ ని కలుస్తారు",
      thumbnail: "ఒక ప్రియమైన స్త్రీ ని కలుస్తారు + ఆకస్మిక ధనాలభం",
      matter: "ఈరోజు మీరు మీకు ఏంటో ప్రియమైన స్త్రీ ని కలుస్తారు కలిసి సరదాగా మాట్లాడుకుంటారు ఇంకా ఈరోజు చివరిలో మీకు ఆకస్మిక ధనలాభం కలుగడంతో మీ ఆనందానికి హద్దులు ఉండవు ఆనందంలో పార్టి కూడా చేసుకుంటారు",
    },
    {
      title: "2 పెద్ద శుభవార్తలు",
      thumbnail: "2 పెద్ద శుభవార్తలు + ఈవిషయంలో జాగ్రత్త!",
      matter: "ఈరోజు మీరు ఎప్పటినుండో ఎదురుచూస్తున్న శుభవార్త వింటారు మరియు మీరు అనుకోకుండా ఒక స్త్రీ వల్ల ఇంకొక శుభవార్తలు అందుకుంటారు సంతోషంలో మీరు మద్యం సేవించవచ్చు ఇలా చెయ్యకండి జాగ్రత్త",
    },
    {
      title: "ఒక స్త్రీ వల్ల గొడవలు",
      thumbnail: "ఒక స్త్రీ వల్ల గొడవలు + ఆకస్మిక సంఘటనలు",
      matter: "ఈరోజు మీరు మీకు నచ్చిన ఒక స్త్రీ కోసం వేరే వాళ్లతో గొడవలలో పలుగోనతారు కాని ఆకస్మికంగా ఆ గొడవ చాల పెద్దగా కావడంతో మీరు గొడవని ముగించడానికి ప్రయత్స్తారు కాని మీరు జాగ్రత్తగా ఉండాలి దెబ్బలు కూడా తగలోచ్చు",
    },
    {
      title: "స్త్రీ వల్ల ప్రమాదాలు",
      thumbnail: "ఒక స్త్రీ వల్ల ప్రమాదాలు ముంచుకోస్తున్నాయి జాగ్రత్త",
      matter: "ఈరోజు మీకు ఒక స్త్రీ వల్ల ప్రమాదాలు మున్చుకోస్తునాయి కాబట్టి మీరు అప్ప్రమత్తంగా ఉండండి వాహనాలు నడిపెటప్పుడు ఒక స్త్రీ ని ఆకర్షించడానికి మీరు మీ వాహనాన్ని అతివేగంలో నడుపుతారు దీనివల్ల ప్రమాదం కూడా జరుగవచ్చు",
    },
    {
      title: "ఒక స్త్రీ నష్టం చేస్తారు",
      thumbnail: "ఒక స్త్రీ ఈవిధంగా నష్టం చేస్తున్నారు + ఇలా చెయ్యండి",
      matter: "మీరు మిమ్మల్ని ప్రేమిస్తున్నారు అనుకుంటున్నా స్త్రీ మీదగ్గర మీ డబ్బుకోసమే ఉన్నారు . ఈరోజు బయట ఆ స్త్రీ మిమ్మల్ని షాపింగ్ కు తెసుకేల్లి మీ లక్షలు నష్టం చేస్తారు జాగ్రత్త",
    },
    {
      title: "మంచి శుభవార్తలు ఉన్నాయి",
      thumbnail: "మంచి శుభవార్తలు + ఈవిషయాల్లో జాగ్రత్త",
      matter: "ఈరోజు మీ జీవితానికి అర్ధమోచ్చే ఒక పెద్ద బంగారు శుభావర్తని మీ జీవిత భాగస్వామి మీకు అందిస్తారు ఆ శుభవార్త మీ జీవితాన్నే మార్చేస్తుంది  సంతోషంలో మీరు మద్యం సేవించవచ్చు ఇలా చెయ్యకండి జాగ్రత్త",
    },
    {
      title: "ఒక స్త్రీ తో గొడవ",
      thumbnail: "ఈరోజు ఒక స్త్రీ తో గొడవ జరుగుతుంది జాగ్రత్త",
      matter: "ఈరోజు మీకు ఒక స్త్రీ తో ఆస్తి మరియు దనం విషయంలో గొడవలు జరుగుతాయి కాని గొడవలో మీరు నూరు జారి చెప్పకుదని మాటలు చెపుతారు గొడవ తరువాత మీరు ఎందుకుచేప్పరని బాధపడి ఆ స్త్రీ తో క్షమాపణ అడుగుతారు దీని బదులు మీరు ముందే నూరు అదుపులో పెట్టుకోండి",
    },
    {
      title: "సేత్రువులు ఇలా చేస్తారు",
      thumbnail: "రహస్య సెత్రువులు ఈవిధంగా చేస్తున్నారు జాగ్రత్త",
      matter: "ఈరోజు రహస్య సేత్రువులు మీకు తెలియకుండానె మిమ్మల్ని ఆర్ధికంగా మరియు మీ కుతుమ్బంన్ని హాని చెయ్యడానికి చెయ్యని ప్రయత్నలుండవు కాబట్టి మీరు ముందే జాగ్రత్తగా ఉండండి ఎవ్వరిని గుడ్డిగా నమ్మవద్దు మోసపోవచ్చు",
    },
    {
      title: "అమ్మాయి కాళ్ళ వద్దకు",
      thumbnail: "అందమైన అమ్మాయి మీ కాళ్ళ వద్దకు వస్తుంది",
      matter: "ఈరోజు మీ స్వప్న సుందరి మీ ఉన్నత చదువులు మరియు వ్యాపారంలో అభివృద్ధి చూసి ఒచ్చి మీ కాళ్ళ వద్దకు పడుతది . ఈరోజు మీరు పడ్డ కష్టం వ్యర్ధం కాలేదని మీరు తెలుసుకుంటారు వ్యాపారం మరియు చదువులూ ఇంకా ముందుకు సాగాలని మీకు మోటివేషన్ దొరుకుతుంది",
    },
    {
      title: "స్త్రీ వల్ల పెద్ద శుభవార్త",
      thumbnail: "ఒక స్త్రీ వల్ల పెద్ద శుభవార్త + ఆకస్మిక ధనాలభం",
      matter: "ఈరోజు మీకు ఒక స్త్రీ వల్ల పెద్ద శుభవార్త అందుతుంది మరియు వార్త వినంగానే మీ మడ్ ఒక్కసారిగా మంచిగా మారడంతో మీరు మీ పార్టనర్ తో కలిసి సినిమాకు పోతారు మరియు రాత్రి సమయంలో మీకు ధనలాభం కలుగుతుంది ",
    },
    {
      title: "స్త్రీ తో సరదాగా ఉలా",
      thumbnail: "ఒక స్త్రీ తో కలిసి సరదాగా చేసే పనులు తెలిస్తే షాక్ !",
      matter: "ఈరోజు మీరు టైం పాస్ చెయ్యడానికి ఒక స్త్రీ తో కలిసి ఒక మంచి రెస్టారెంట్ కు వెళ్లి భూజనం చెయ్యడం ఇష్టపడుతారు మరియు సినిమాకు పోయి జాలిగా గడుపుతారు ఈరోజు మీకు ఎప్పటికి గుర్తుండిపోయేలా గడుపుతారు",
    },
    {
      title: "సెత్రువులు ఇలా చేస్తారు",
      thumbnail: "పెద్ద శుభవార్తలు + సెత్రువులు ఇలా చేస్తారు",
      matter: "ఈరోజు మీకు చాల పెద్ద శుభవార్తలు అందుతాయి దీనితో మీరు చాల సంతోషంగా ఉంటారు మీ సంతోషం మీ సేత్రువులు చూడలేరు వారు మీకు ఎదో ఒక హాని చెయ్యాలని చూస్తారు కాని రోజు ఆకరికి ఏమి చెయ్యలేక అలిసి వెళ్ళిపోతారు",
    },
    {
      title: "ప్రాణగండం ఉంది జాగ్రత్త",
      thumbnail: "వీరితో గొడవలు + ప్రాణగండం ఉంది జాగ్రత్త",
      matter: "ఈరోజు మీకు మీ సేత్రువులతో గొడవలు జరుగుతాయి మరియు మీరు ఈరోజు మీ కోపాన్ని అడుపులూ ఉంచాలి లేదంటే మీకు గొడవలో తీవ్ర గాయలవల్ల ప్రాణగండం ఉంది దేవుడ్ని స్మరించండి గొడవ దేనికి కూడా సమాధానం కాదు అని మీరు తెలుసుకోవాలి",
    },
    {
      title: "స్త్రీ వల్ల పండగలు",
      thumbnail: "ఒక స్త్రీ వల్ల ఈరోజు పండుగలా ఉంటుంది",
      matter: "ఈరోజు ఒక స్త్రీ వల్ల వేడుకలా ఉంటుంది మీకు నచ్చిన స్త్రీ తో ఈరోజు మీరు బయటకు పోతారు మరియు వారితో సినిమాలకు పోయి జాలిగా గడుపుతారు ఆ స్త్రీ వల్ల రోజు చివర్లో ధనాలభం కూడా కావొచ్చు శుభం కలుగుతుంది ",
    },
    {
      title: "స్త్రీ మోసం చేస్తుంది",
      thumbnail: "ఒక స్త్రీ ఇలా మోసం చేస్తది + ఇలా చెయ్యండి",
      matter: "ఈరోజు మీరు గుడ్డిగా నమ్మిన ఒక స్త్రీ మిమ్మల్ని మోసం చేస్తది దేనిని మీరు తట్టుకోలేరు కోపంలూ మీరు డిప్రెషన్ లో కూడా పోవచ్చు కాని మీ తల్లి తండ్రులకు ఈ విషయం తెలిసి వారు మిమ్మల్ని దీని నుండి బయటకు తెస్తారు",
    },
    {
      title: "స్త్రీ మీ కాళ్ళ వద్దకు",
      thumbnail: "ఒద్దు అన్న స్త్రీ మీ కాళ్ళ వద్దకు వస్తుంది",
      matter: "మీ దగ్గర డబ్బులు లేవు మీరు బిచ్చగాల్లు అని మిమ్మల్ని వదిలి పాయిన ఆ స్త్రీ ఈరోజు మీ అభివృద్ధి మరియు మీ ఉన్నత చదువులు చూసి మల్లి మీ కాళ్ళ వద్దకు ఒస్తుంది మల్లి తనను దగ్గరుకు తెసుకున్తారా? కామెంట్ లో చెప్పండి  ",
    },
  
    {
      title: "పెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "పెద్ద శుభవార్తలు ఉన్నాయి + స్త్రీ వల్ల పండుగ",
      matter: "ఈరోజు మీకోసం పెద్ద శుభవార్తలు ఎదురుచుస్తునాయి మీరు పడ్డ కష్టానికి ప్రతిఫలం ఈరోజు మీకు శుభవార్త అందుతుంది మరియు మీ అభివృద్ది ని చూసి ",
    },
    {
      title: "స్త్రీ వల్ల ధనలాభం",
      thumbnail: "అందమైన స్త్రీ వల్ల ధనలాభం + పెద్ద శుభవార్త",
      matter: "ఈరోజు ఒక అందమైన స్త్రీ వల్ల ధనాలభం కలుగుతుంది ఇంకా రోజు మధ్యలో మీకు పెద్ద శుభవార్త అందుతుంది మీకు ఆ శుభవార్త అందుతదని మీరు కలలో కూడా ఉహించి ఉండరు కాని మీ అదృష్టం వల్ల మీకు ఆ శుభవార్తః అందుతుంది ",
    },
    {
      title: "కుటుంబంలో వీరికి ప్రాణగండం",
      thumbnail: "మీ కుటుంబంలో వీరికి ఇలా ప్రాణగండం జాగ్రత్త",
      matter: "ఈరోజు మీ కుటుంబంలో వ్రుదుల అనారోగ్యం వల్ల వారికి ప్రాణగండం ఉంది కాబట్టి పుష్టిక ఆహారాన్ని సేవించాలి మరియు దేవుడ్ని స్మరించాలి మీరు చేసిన పుణ్యకార్యాల వల్ల దేవుడు మీ గండాన్ని తొలగిస్తారు శుభం జరుగుతుంది",
    },
    {
      title: "స్త్రీ వల్ల శుభవార్తలు",
      thumbnail: "మీరు ఊహించని స్త్రీ శుభవార్తలు చెప్తారు ",
      matter: "ఈరోజు మీరు కలలో కూడా ఉహించని ఒక అందమైన స్త్రీ నోటితో మీరు శుభావర్తలు వింటారు ఈవార్త వినగానే మీ మనస్సు గాలిలో తేలినట్లు అయిపోతుంది మీరు మీ బంధువులందరితో ఈ వార్తని పంచుకుంటారు జాలిగా గడుపుతారు",
    },
    {
      title: "స్త్రీ మీ కాళ్ళ వద్దకు",
      thumbnail: "మీరు కావాలనుకున్న స్త్రీ మీ కాళ్ళ వద్దకు",
      matter: "ఈరోజు మీరు ఎప్పటినున్డూ కోరుకుంటున్న స్త్రీ మీ అదృష్టం కొద్ది మీ దగ్గర సహాయం కోరుతూ వస్తుంది మీరు కాని తనకు సహాయం చేస్తే మాత్రం మీ ఇద్దరి మధ్య బంధం ఇంకా గట్టిపడుతుంది కాని ఆ సహాయం చెయ్యడానికి కొద్దిగా శ్రీమ పడాల్సి ఉంటది",
    },
  
    {
      title: "పెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "పెద్ద శుభవార్తలు + ఒక స్త్రీ ఇలా చేస్తుంది",
      matter: "ఈరోజు మీకు మీరు ఎన్నో సంవచరాల నుండి ఎదురుచూస్తున్న శుభవార్త ఒకటి అందడం వల్ల మీరు సంతోషంగా ఎగిరి గంతులేస్తారు మరియు మీ మిత్రులకి పార్టి ఇస్తారు మొత్తానికి ఈరోజు జాలిగా గడుపుతారు కాని ఆ శుభవార్త మీ జీవితాన్ని మార్చేస్తుంది",
    },
    {
      title: "ఒక స్త్రీ మోసం చేస్తారు",
      thumbnail: "ఒక స్త్రీ మిమ్మల్ని ఈవిధంగా మోసం చేస్తున్నారు",
      matter: "ఈరోజు మీరు కళ్ళు ముసి నమ్మిన ఒక స్త్రీ మిమ్మల్ని వెంనేపోటు పొడుస్తారు మిమ్మల్ని కాదని మోసం చేస్తారు దీనితో మీరు చాల బాధ పాడుతారు కాని మీ తల్లితండ్రులు మీకు సపోర్టుగా ఉంటారు దీనివల్ల వాళ్ళని మించిన వారు లేరని మీకు తెలుస్తుంది",
    },
    {
      title: "స్త్రీ తో మనసులోని మాట",
      thumbnail: "నచ్చిన స్త్రీ తో మీ మనసులోని మాట చెపుతారు",
      matter: "మీరు ప్రతిరోజూ కలలో చూసే మీకు నచ్చిన ఒక స్త్రీ తో ఈరోజు మీరు మీ మనస్సులోని మాట చెపుదామని మీరు ఫిక్స్ అవుతారు ఇలా చెయ్యడానికి ఇదే సరైన సమయం శుభవార్తలు కూడా అందవచ్చు ఏది జరిగినా మన మంచికే అని గుర్తుపెట్టుకోండి ",
    },
    {
      title: "ఎవరంలో ఇలా జరిగిద్ది",
      thumbnail: "ఈవారంలో ఏం జరుగుతుందో తెలిస్తే షాక్",
      matter: "ఈవారంలో మీ వృత్తికి మీరే రాజు మీరే మంత్రి బిజినెస్ లో మిమ్మల్ని మించినోల్లు ఎవ్వరు ఉండరు కొత్త స్త్రీ తో పరిచయాలు జరుగుతాయి మరియు ధనాలభం కలుగుతుంది",
    },
    {
      title: "వీరే మీ సెత్రువులు",
      thumbnail: "వీరే మీ సెత్రువులు + ఒక స్త్రీ తో జాగ్రత్త",
      matter: "ఈరోజు మీరు మీ సేత్రువుల పేర్లు తెలుసుకుంటారు మరియు ఒక స్త్రీ మీ రహస్య సేత్రువు మీకు ఇప్పటివరుకు కలిగిన హాని మొత్తం మీ సేత్రువులనుంచే అని ఈరోజు మీకు తెలిసి వస్తుంది అప్ప్రమత్తంగా ఉండండి",
    },
    {
      title: "స్త్రీ కాళ్ళ వద్దకు",
      thumbnail: "మీరు ఒద్దు అని విడిచిపోయిన స్త్రీ కాళ్ళ వద్దకు",
      matter: "మీరు డబ్బు లేనివారు అని మిల్లల్ని చులకనగా చుసిన ఒక స్త్రీ ఈరోజు మీ వ్యాపారం మరియు అభివృద్ధి చూసి మల్లి మీ కాళ్ళ వద్దకు వస్తుంది కాని వచ్చిన తరువాత మీరు మీ దృష్టి ని అటు మల్లిన్చాకండి మీ వ్యాపారాన్ని ఇంకా పెంచుతూనే ఉండాలి",
    },
    {
      title: "ఒక స్త్రీ వల్ల శుభవార్తలు",
      thumbnail: "ఒక స్త్రీ వల్ల అతిపెద్ద శుభవార్తలు తెలిస్తే షాక్",
      matter: "ఈరోజు మీ జీవితంలూ ఎప్పుడు అందని శుభవార్తలు ఈరోజు మీకు ఒక స్త్రీ వల్ల అందుతాయి వాటిని విని మీరు ఎగిరి గంతులేస్తారు మీ ఆనందానికి హద్దులు ఉండవు ఆ శుభవార్తలు మీ జీవితాన్నే మార్చేస్తాయి రెడీగా ఉండండి ",
    },
    {
      title: "ఒక స్త్రీ పగబట్టి ఇలా",
      thumbnail: "ఒక స్త్రీ పగబట్టి చేసే ప్రయత్నాలు చుస్తే చాక్",
      matter: "ఈరోజు మీపైన ఎంతోకాలంగా కక్షగుడి మీ ప్రానసేత్రువు ఒక స్త్రీ మిమ్మల్ని అన్ని విధాలుగా హాని చెయ్యడానికి ప్రయత్నాలు చేస్తారు కాని మీరు చాలా ధైర్యవంతులు కావడంతో మీరు వాటన్నిటినుంచి సులభంగా తప్పించుకుంటారు ",
    },
    {
      title: "పెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "పెద్ద శుభవార్తలు ఉన్నాయి వీరు నక్కతోకతొక్కారు",
      matter: "ఈరోజు మీరునక్కతోకతొక్కారు మీకు ఈరోజు పెద్ద శుభవార్తలు అందుతాయి వాటిని విని మీ మనసు గాలిలో తేలడం మాత్రం ఖాయం ఈరోజు మీకు శుభవార్తలు విన్న తరువాత ఆనదందానికి హద్దులు ఉండవు ఎగిరి గంతులు వేస్తారు",
    },
    {
      title: "ఒక స్త్రీ వల్ల ప్రాణగండం",
      thumbnail: "ఒక స్త్రీ వల్ల ప్రాణగండం + ఈవిషయాల్లో జాగ్రత్త",
      matter: "ఈరోజు మీకు ఒక స్త్రీ వల్ల ప్రాణగండం ఉంది ఎలా అంటే ఈరోజు మీరు ఒక స్త్రీ ని ఆకట్టుకోవడానికి వాహనాన్ని అతివేగంతో నడుపడంతో మీకు ఆపదలు జరిగే అవకాశం ఉంది జాగ్రత్తగా ఉండండి మరియు వాహనాన్ని ఇంటిదగ్గర మీకోసం ఎదురుచూస్తున్నా వాళ్ళ కోసం నెమ్మదిగా తోలండి",
    },
    {
      title: "స్త్రీ తో ఇలా చేస్తారు",
      thumbnail: "శుభవార్త తెలిస్తే ఎగిరి గంటెస్తారు ఒక స్త్రీ తో",
      matter: "ఈరోజు మీ రోజువారి బ్రతుకులూ ఒక్కసారిగా పెద్ద శుభవార్త ఒకటి అందడంవల్ల మీరు మీ ప్రేయసితో కలిసి ఎంజాయ్ చెయ్యడానికి బయటకు సినిమాలు అని షికార్లకు పోతారు ఈరోజు మీ జీవితంలో ఎప్పటికి గుర్తుండిపోతుంది",
    },
    {
      title: "స్త్రే తో సరదాగా ఉలా",
      thumbnail: "అందమైన స్త్రీ తో సరదా కోసం ఇలా చేస్తారు ",
      matter: "ఈరోజు మీకు చాల అదృష్టమైన రోజు మీరు కలలో కూడా ఉహించని అందమైన స్త్రీ తో ఈరోజు మీరు సరదాగా షికారుకు వెళ్లి జాలిగా గడుపుతారు మరియు మీ ఇద్దరి బంధం దీనివల్ల ఇంకా ద్రుదపడుతుంది",
    },
    {
      title: "ఒక స్త్రీ కాళ్ళ దగ్గర",
      thumbnail: "శుభవార్త ! ఒక స్త్రీ ఈరోజు మీ కాళ్ళ దగ్గర",
      matter: "ఈరోజు శుభవార్త అందుతుంది మీరు పేదవాళ్ళు అని మిమ్మల్ని వదిలిపొఇన ఒక స్త్రీ ఈరోజు మీ అభివృద్ధి మరియు దానం చూసి మల్లి మీ కాళ్ళ దగ్గర రావడం ఖాయం",
    },
    {
      title: "స్త్రీ వల్ల గుండెలుపగిలే వార్త",
      thumbnail: "ఒక స్త్రీ వల్ల గుండెలు పగిలే వార్తలు జాగ్రత్త",
      matter: "ఈరోజు మీరు ఎంతగా నమ్మిన స్త్రీ తరుపునుంచి మీకు గుండెలు పగిలే వార్తలు వింటారు ఆ వార్తలు ఏంటంటే వారి ఆరోగ్యం అస్సలు బాగాలేదు మరియు ఆసుపత్రిలూ వారికి చాల ఖర్చులు ఉన్నాయి ఇది విన్న తరువాత మీరు వారిని ఆర్ధికంగా సహాయం చేస్తారు",
    },
    {
      title: "ఒక స్త్రీ మిమ్మల్ని హాని",
      thumbnail: "ఒక స్త్రీ ఇలా హాని చేస్తుంది ఇప్పుడే తెలుసుకోండి",
      matter: "ఈరోజు మీకు ఒక స్త్రీ పగబట్టి శారీరికంగా హాని చెయ్యడానికి చెయ్యని ప్రయత్నాలు ఉండవు కావున మీరు బయటకు వెళ్ళేటప్పుడు దేవుడ్ని స్మరించి జాగ్రత్తగా వెళ్ళండి మీకు ఎలాంటి హాని కలగదు",
    },
    {
      title: "మీ మీద స్త్రీ దృష్టి",
      thumbnail: "మీ మీద ఒక స్త్రీ చేసుదృష్టి జాగ్రత్త",
      matter: "మీ మీద ఒక స్త్రీ చేడుద్రుష్టి ఈలోకంలో చేడుద్రుష్టి అనేది ఒక రాజుని కూడా బిచ్చగాడు లా చెయ్యొచ్చు మీ సంపద మీద ఒక స్త్రీ ఏడుస్తుంది ఇది మీరు జాగ్రత్తగా ఉండాల్సిన సమయం అప్ప్రమత్తంగా ఉండండి",
    },
    {
      title: "ఒక స్త్రీ వల్ల శుభవార్తలు",
      thumbnail: "అన్ని శుభవార్తలే మీ జీవితంలో ఒక స్త్రీ ఎంట్రీ",
      matter: "ఎప్పటినుండో బ్రేక్ లో ఉన్న మీ జీవితం ఒక స్త్రీ రావడంతో దూసుకుపోతుంది , అవును ఈరోజు మీకు అన్ని శుభవార్తలు అందుతాయి మరియు మీ జీవితంలూ ఒక స్త్రీ ఎంట్రీ ఇస్తుంది ",
    },
    {
      title: "స్త్రీ వల్ల పెద్ద శుభవార్తలు",
      thumbnail: "ఒక స్త్రీ వల్ల 3 పెద్ద శుభవార్తలు + ఇలా చెయ్యకండి",
      matter: "ఈరోజు మీరు ఒక స్త్రీ వల్ల మూడు పెద్ద శుభావర్హలు అందుకుంటారు మరియు శుభవార్తలు అందుకున్న వెంటనే మీరు ఆ విషయాలను మీ తల్లి తండ్రులకు ముందుగా చెపుతారు ఎందుకంటే ఈలోకంలో వారిని మించి మీకు ఎవ్వరు లేరు",
    },
  ];
  const today = new Date();
  let tomorrow = new Date(today);
  tomorrow.setDate(tomorrow.getDate() + 2);

  let dayOfWeekIndex = tomorrow.getDay();
  let dayOfWeekArray = [
    "sunday",
    "monday",
    "tuesday",
    "wednesday",
    "thursday",
    "friday",
    "saturday"
  ];

  

  let monthIndex = tomorrow.getMonth();
  let monthArray = [
    "january",
    "february",
    "march",
    "april",
    "may",
    "june",
    "july",
    "august",
    "september",
    "october",
    "november",
    "december",
  ];
let count = Number(localStorage.getItem("count") )|| 23;
  let dayname = dayOfWeekArray[dayOfWeekIndex];
  let monthname = monthArray[monthIndex];
  let datenumber = tomorrow.getDate().toString().padStart(2, "0");

  const textInput = document.getElementById("text-input");
  const textInput2 = document.getElementById("text-input2");
  const fontSelect = document.getElementById("text-input");
  const colorSelect = document.getElementById("color-select");
  const sizeRange1 = document.getElementById("size-range-1");
  const sizeRange2 = document.getElementById("size-range-2");
  const positionRangeX = document.getElementById("position-range-x");
  const previewContainer = document.getElementById("preview-container");
  const previewCanvas = document.getElementById("preview-canvas");
  const downloadButton = document.getElementById("download-button");
textInput2.value = datenumber;

const DailyOnceSet = function(){

  let currentDate = new Date();
  let currentDay = currentDate.getDate();
    localStorage.setItem('thumbdate', currentDay);
  }
  const Shiftdown = function () {
    let today = new Date().getDate();
    let yesterday = localStorage.getItem('thumbdate') || "";
    if(today!=yesterday){
      if(Number(localStorage.getItem("count"))+1>daily.length){
        localStorage.setItem("count",0);
      }
      else{
        
      localStorage.setItem("count",++count);
      localStorage.setItem("var4",daily[count].thumbnail);
      localStorage.setItem("var3", daily[count-1].thumbnail)
      localStorage.setItem("var2", daily[count-2].thumbnail)
      localStorage.setItem("var1", daily[count-3].thumbnail)



      }
    }  
  }

Shiftdown();
DailyOnceSet();

let var4 = localStorage.getItem("var4");
let var3;
let var2;
let var1;
if (count ==0){
  localStorage.setItem("var3", daily[67].thumbnail)
  var3 = localStorage.getItem("var3");
  localStorage.setItem("var2", daily[66].thumbnail)
  var2 = localStorage.getItem("var2");
  localStorage.setItem("var1", daily[65].thumbnail)
  var1 = localStorage.getItem("var1");
}
else if(count ==1){
  localStorage.setItem("var3", daily[0].thumbnail)
  var3 = localStorage.getItem("var3");
  localStorage.setItem("var2", daily[67].thumbnail)
  var2 = localStorage.getItem("var2");
  localStorage.setItem("var1", daily[66].thumbnail)
  var1 = localStorage.getItem("var1");
}
else if(count ==2){
  localStorage.setItem("var3", daily[1].thumbnail)
  var3 = localStorage.getItem("var3");
  localStorage.setItem("var2", daily[0].thumbnail)
  var2 = localStorage.getItem("var2");
  localStorage.setItem("var1", daily[67].thumbnail)
  var1 = localStorage.getItem("var1");
}
else{
  var3 = localStorage.getItem("var3");
  var2 = localStorage.getItem("var2");
  var1 = localStorage.getItem("var1");
}
document.getElementById("var1").value = var1;
document.getElementById("var2").value = var2;
document.getElementById("var3").value = var3;
document.getElementById("var4").value = var4;

  let currentImage = null;
  let previewImage = null;
  let fontSize1;
  // Load default image
  const defaultImage = new Image();
  //!

  textInput.value = var2;
  defaultImage.src  = "dailyrasinewstula.jpg" 

  

 
  
  
  
  
  defaultImage.onload = () => {
    currentImage = defaultImage;
    updatePreview();
  };

  textInput.addEventListener("input", () => {
    updatePreview();
  });

  textInput2.addEventListener("input", () => {
    updatePreview();
  });

  fontSelect.addEventListener("input", () => {
    updatePreview();
  });

  colorSelect.addEventListener("input", () => {
    updatePreview();
  });

  sizeRange1.addEventListener("input", () => {
    updatePreview();
  });

  sizeRange2.addEventListener("input", () => {
    updatePreview();
  });

  positionRangeX.addEventListener("input", () => {
    updatePreview();
  });

  function updatePreview() {
    if (!currentImage) return;

    const text = textInput.value;
    const text2 = textInput2.value;
    const color = "white"; // Set text2 color to white
    const canvas = document.createElement("canvas");
    const ctx = canvas.getContext("2d");

    const image = currentImage;

    canvas.width = image.width;
    canvas.height = image.height;

    ctx.drawImage(image, 0, 0);

    const positionX1 = 10; // Fixed X-coordinate for text1 (leftmost position)
    const positionY1 = 1730; // Fixed Y-coordinate for text1 (bottom - 600 pixels up)

    fontSize1 = 250; // Initial font size for text1
    ctx.font = `${fontSize1}px 'Anek Telugu'`;
    let textWidth = ctx.measureText(text).width;

    // Decrease font size until the text fits within the canvas width
    while (textWidth > canvas.width - 1) {
      fontSize1 -= 1;
      ctx.font = `${fontSize1}px 'Anek Telugu'`;
      textWidth = ctx.measureText(text).width;
    }

    let stretchRatio1;
    // Calculate vertical stretch factor for text1
    if (document.querySelector("#text-input").value.length > 48) {
      const originalHeight1 = fontSize1;
      const targetHeight1 = originalHeight1 + 100; // Vertical stretch factor, adjust as needed
      stretchRatio1 = targetHeight1 / originalHeight1;
    } else if (document.querySelector("#text-input").value.length < 30) {
      const originalHeight1 = fontSize1;
      const targetHeight1 = originalHeight1+15; // Vertical stretch factor, adjust as needed
      stretchRatio1 = targetHeight1 / originalHeight1;
    } else if (document.querySelector("#text-input").value.length > 40) {
      const originalHeight1 = fontSize1;
      const targetHeight1 = originalHeight1 + 40; // Vertical stretch factor, adjust as needed
      stretchRatio1 = targetHeight1 / originalHeight1;
    } else {
      const originalHeight1 = fontSize1;
      const targetHeight1 = originalHeight1 + 30; // Vertical stretch factor, adjust as needed
      stretchRatio1 = targetHeight1 / originalHeight1;
    }
    ctx.strokeStyle = "black";
ctx.lineWidth = 10;
ctx.lineJoin = "round"; // Use round corners for the stroke
    ctx.save();
    ctx.translate(positionX1, positionY1);
    ctx.scale(1, stretchRatio1);
    ctx.fillStyle = color;
ctx.strokeText(text, 0, 0);
    ctx.fillText(text, 0, 0);
    ctx.restore();
   const fixedpos = 2400;
      const fixedPositionY = 830; // Fixed position for text2
      let size2 = 620; // Get the value of sizeRange2
      
      // Calculate the desired height increase factor
      const heightIncreaseFactor = 40; // You can adjust this value as needed
      
      // Calculate the transformation matrix for vertical scaling
      const scaleX = 1;
      const scaleY = 1 + heightIncreaseFactor / 100;
      
      ctx.save(); // Save the current state of the canvas
      
      // Apply the vertical scaling transformation
      ctx.scale(scaleX, scaleY);
      
      ctx.font = `${size2}px 'Archivo Black', sans-serif`;
      ctx.fillStyle = "white"; // Set text2 color to white
      
      // Add border to text2
      ctx.lineWidth = 40;
      ctx.strokeText(text2, fixedpos, fixedPositionY);
      ctx.fillText(text2, fixedpos, fixedPositionY);
      
      ctx.restore(); // Restore the saved state of the canvas
      
      let month = monthname;
      let day = dayname;
      
      // Add a new element (PNG) in the middle of the canvas
      let middleX;
      let middleY;
      const pngElement = new Image();
      pngElement.src = `${month}.png`;
      
    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1700;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 4000; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }
    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1800;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =2050;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =2050;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =2050;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 4150; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =2090;
      middleY =780;
    pngElement.onload = () => {
      const pngWidth = 3250; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1890;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =2090;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 3000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1900;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1950;
      middleY =820;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2200; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1900;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3000; // Width of the PNG element
      const pngHeight =2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1850;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1900;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =2050;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =2050;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("vruschika")){
     middleX =2100;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =2090;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1950;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2200; // Width of the PNG element
      const pngHeight = 2100; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1900;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =2050;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2100; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1980;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1950;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2400; // Width of the PNG element
      const pngHeight =1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }






    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1830;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =2100;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =2050;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("tula")){
     middleX =2100;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =2090;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1920;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2100; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1900;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =2000;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1900;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1880;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }





    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1830;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =2100;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =2050;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("kumbha")){
     middleX =2100;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =2090;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1920;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2300; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1900;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1900;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1880;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }



    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1830;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =2000;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =2050;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("midhuna")){
     middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 3600; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =2090;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1870;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2300; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1900;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1900;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1880;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }



    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1830;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =2100;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =2050;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("makara")){
     middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 3600; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =2090;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1870;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1900;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1900;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1880;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }








    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1830;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =2100;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =2050;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("dhanussu")){
     middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 3600; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =2090;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1870;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1900;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1920;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1880;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }



    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1720;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1850;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2950; // Width of the PNG element
      const pngHeight =1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =2050;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 3400; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =2050;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("vrushabha")){
     middleX =2100;
      middleY =910;
    pngElement.onload = () => {
      const pngWidth = 3750; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =2090;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1890;
      middleY =1050;
    pngElement.onload = () => {
      const pngWidth = 2400; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =2090;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1900;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1990;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 2400; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1890;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight =2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1870;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 2700; // Width of the PNG element
      const pngHeight =1400;// Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }




    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1830;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =2100;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =2050;
      middleY =940;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("meena")){
     middleX =2000;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3800; // Width of the PNG element
      const pngHeight = 1500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =2090;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1920;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2100; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1900;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =2000;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1900;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1880;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }




    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1720;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1850;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2950; // Width of the PNG element
      const pngHeight =1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =2050;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 3400; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =2050;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("mesha")){
     middleX =2100;
      middleY =910;
    pngElement.onload = () => {
      const pngWidth = 3750; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =2090;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1890;
      middleY =1050;
    pngElement.onload = () => {
      const pngWidth = 2400; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =2090;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1900;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1990;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 2400; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1890;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight =2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1870;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 2700; // Width of the PNG element
      const pngHeight =1400;// Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }














    // Add new element (PNG) in the middle of the canvas
    let middlesX ;
    let middlesY;
    const pngElements = new Image();
    pngElements.src = `${day}.png`;
    if(`${pngElements.src}`.includes("friday.png")){
      middlesX =1700;
      middlesY =940;
    pngElements.onload = () => {
      const pngWidth = 3000; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElements, middlesX - pngWidth / 2, middlesY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else{
      middlesX =1700;
      middlesY =900;
      pngElements.onload = () => {
        const pngWidth = 3000; // Width of the PNG element
        const pngHeight = 1800; // Height of the PNG element
        ctx.drawImage(pngElements, middlesX - pngWidth / 2, middlesY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
    }








    function updatePreviewCanvas(image) {
      previewCanvas.width = previewContainer.clientWidth;
      previewCanvas.height = (previewContainer.clientWidth / image.width) * image.height;

      const scaleFactor = calculateScaleFactor(
        image.width,
        image.height,
        previewCanvas.width,
        previewCanvas.height
      );
      const previewCtx = previewCanvas.getContext("2d");
      previewCtx.clearRect(0, 0, previewCanvas.width, previewCanvas.height);
      previewCtx.drawImage(canvas, 0, 0, previewCanvas.width, previewCanvas.height);

      // Store the preview image separately
      previewImage = canvas.toDataURL();

      downloadButton.disabled = false;
    }
  }
 

  function calculateScaleFactor(originalWidth, originalHeight, maxWidth, maxHeight) {
    const widthScaleFactor = originalWidth / maxWidth;
    const heightScaleFactor = originalHeight / maxHeight;

    return Math.max(widthScaleFactor, heightScaleFactor, 1);
  }
  setTimeout(() => {
    const link = document.createElement("a");
    link.download = "dailyrasinewstula";
    link.href = previewImage; // Use the preview image data URL
    link.click();
  }, 6000);
  downloadButton.addEventListener("click", () => {
   
  });
let funk = ()=>{
  const link = document.createElement("a");
    link.download = "image";
    link.href = previewImage; // Use the preview image data URL
    link.click();
}


},130000);
setTimeout(() =>{
  

  let daily = [
    {
      title: "అతిపెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "ఈరోజు మీ జీవితంలోనే అతిపెద్ద శుభవార్త!",
      matter: "ఈరోజు మీకు మీ జీవితంలోనే అతిపెద్ద శుభవార్త అందుతుంది దాన్ని విన్న తరవాత మీ ఆనందానికి హద్దులు ఉండవు ",
    },
    {
      title: "ఒక స్త్రీ వల్ల ధనాలభం",
      thumbnail: "ఒక స్త్రీ వల్ల ఇలా ధనాలభం పొందే అవకాశం!",
      matter: "ఈరోజు మీకు మీ జీవిత భాగస్వామి వల్ల ధనాలభం పొందే అవకాశం ఉంది మీరు మాత్రం మీ జీవిత భాగస్వామి ని పూర్తిగా నమ్మాలి శుభం జరుగుతుంది ",
    },
    {
      title: "ఒక స్త్రీ పగబట్టి ఇలా",
      thumbnail: "ఒక స్త్రీ పగబట్టి చేసే ప్రయత్నాలు తెలిస్తే షాక్!",
      matter: "ఈరోజు ఒక స్త్రీ పాత కక్షలు పెట్టుకొని మీ మీద పగబట్టి మిమ్మల్ని ఆర్ధికంగా నష్టపరుచడానికి చెయ్యని ప్రయత్నలంటూ ఉండవు కాని మీ మంచి మనస్సు వల్ల దేవుడు మీ మీద అన్ని ప్రయత్నాలను విఫలం చేస్తారు",
    },
    {
      title: "కొత్త స్త్రీ తో స్నేహం",
      thumbnail: "2 శుభవార్తలు + ఒక కొత్త స్త్రీ తో స్నేహం",
      matter: "ఈరోజు మీరు రెండు పెద్ద శుభవార్తలు వింటారు మరియు అనుకోకుండా మీరు ఒక కొత్త స్త్రీ తో కలిసి ఆకస్మికంగా స్నేహం చేస్తారు",
    },
    {
      title: "పెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "పెద్ద శుభవార్తలు + ఈవిషయంలో జాగ్రత్త",
      matter: "ఈరోజు శుభప్రదంగా ఉంటుంది మీరు ఈరోజు పెద్ద శుభవార్తలు వింటారు ఆ శుభవార్తలు విన్న తరువాత ఆనండంలూ మద్యపానం సేవించడానికి ప్రయత్నాలు చేస్తారు ఇలా చెయ్యకండి మీ ఆరోగ్యం దెబ్బతీస్తుంది జాగ్రత్తగా ఉండండి ",
    },
    {
      title: "ఒక స్త్రీ పగబట్టి ఇలా",
      thumbnail: "ఒక స్త్రీ పగబట్టి ఈవిధంగా చేస్తుంది జాగ్రత్త",
      matter: "ఈరోజు మీ మీద ఒక స్త్రీ పగబట్టి హాని చెయ్యాలని చూస్తున్నారు , మరియు మీ మీద ఒక స్త్రీ ఏడుపు ఉంది మీ వ్యాపారం మరియు అభివృద్ధి మీద ఏడుస్తున్నారు జాగ్రత్తగా ఉండండి",
    },
    {
      title: "బంధువులే మీ సేత్రువులు",
      thumbnail: "మీ బంధువులే మీ సేత్రువులు జాగ్రత్త",
      matter: "మీ బంధువుల్లో కొందరు మీ సేత్రువులు ఉన్నారు వాళ్ళు ఎప్పుడు అవకాశం దొరికితే మిమ్మల్ని నష్టం చెయ్యాలని చూస్తున్నారు ఎవ్వరితో కూడా మీ వ్యాపారం గురించి చెప్పకండి జాగ్రత్తగా ఉండండి వెంనేపోటు పొడుస్తారు",
    }, 
    {
      title: "ఒక స్త్రీ మోసం చేస్తారు",
      thumbnail: "ఒక స్త్రీ ఇలా మోసం చేస్తుంది జాగ్రత్త!",
      matter: "ఈరోజు మీరు ఏంతో నమ్మిన ఒక స్త్రీ మిమ్మల్ని మోసం చేసే అవకాశం ఉంది జాగ్రత్తగా ఉండండి , మీరు మంచివారు కాని అందరు మంచివారు ఉండరు ఎవ్వరిని గుడ్డిగా నమ్మవద్దు",
    },
    {
      title: "ఒక స్త్రీ వల్ల డబ్బులు",
      thumbnail: "ఒక స్త్రీ వలన ఆదాయం + ఈవిషయాల్లో జాగ్రత్త",
      matter: "ఈరోజు మీకు చాలా మంచిరోజు నేడు మీకు మీ జీవిత భాగస్వామి బల్ల ధనాలభం కలుగుతుంది మరియు మీరు మీ జీవిత భాగస్వామి వల్ల చాలా సంతోషంగా ఉంటారు మీ బాధ్యతే ఏంటంటే మీరు కుడా వారిని సంతోషంగా ఉంచండి ",
    },
    {
      title: "స్త్రీ వల్ల శుభవార్తలు",
      thumbnail: "ఒక స్త్రీ వల్ల శుభవార్తలు ! తెలిస్తే షాక్!",
      matter: "ఈరోజు మీకు చాలా మంచిరోజు ఈరోజు మీకు ఒక స్త్రీ వల్ల శుభవార్తలు అందుతాయి ఈలోకంలో మీరే అదృష్టవంతులు అని ఈరోజు మీకు అనిపిస్తుంది మీరు మాత్రం ఆ శుభవార్తలు వినగానే షాక్ అవ్వడం ఖాయం",
    },
    {
      title: "స్త్రీ కాళ్ళ వద్దకు",
      thumbnail: "కోరుకున్న స్త్రీ కాళ్ళ వద్దకు వస్తుంది",
      matter: "ఈరోజు మీరు కూరుకున్న స్త్రీ మీ వ్యాపారం మరియు అభివృద్ధి చూసి వారు మీ కాళ్ళ వద్దకు వస్తారు కాని మీరు మాత్రం మీ వ్యాపారం మరియు అభివృద్ధి ని ఆపకండి ",
    },
    {
      title: "ఒక స్త్రీ మోసం చేస్తారు",
      thumbnail: "ఒక స్త్రీ వెన్నెపాటు పొడుస్తారు జాగ్రత్త!",
      matter: "ఈరోజు మీరు ఎంతగా నమ్మిన ఒక స్త్రీ మిమ్మల్ని మోసం చేస్తారు , దీనివల్ల మీరు మానసికంగా డిప్రెషన్ లోకి పోవచ్చు జాగ్రత్తగా ఉండండి లోకంలో డబ్బే అంత అని తెలుసుకోండి డబ్బు ఉంటె మీరే రాజు మీరే మంత్రి",
    },
    {
      title: "స్త్రీ వల్ల శుభవార్తలు",
      thumbnail: "ఒక స్త్రీ వల్ల శుభవార్తలు ! తెలిస్తే ఎగిరి గంటేస్తారు",
      matter: "ఈరోజు మీరు ఒక స్త్రీ వల్ల శుభవార్తలు అందుకుంటారు ఈలోకంలో మీరే అదృష్టవంతులు అని ఈరోజు మీకు అనిపిస్తుంది మీరు మాత్రం ఆ శుభవార్తలు వినగానే మీరు ఎగిరి గంతెయ్యడం మాత్రం ఖాయం",
    },
    {
      title: "ఒక స్త్రీ వల్ల ఘూరం",
      thumbnail: "ఒక స్త్రీ వల్ల ఘోరం జరుగుతుంది జాగ్రత్త!",
      matter: "ఈరోజు మీరు ఒక స్త్రీ వల్ల భారిగా నష్టపూతారు దీనివల్ల మీరు బాధ పాడుతారు కాని దానివల్ల ఏమి లాభం లేదు ఇప్పటికైనా పోయింది ఏమిలేదు అన్ని మరిచి మీరు మీ లక్ష్యం మీద దృష్తి పెడితే శుభం కలుగుతుంది",
    },
    {
      title: "కుటుంబంలో వీరికి మరనగందం",
      thumbnail: "కుటుంబంలో వీరికి మరణ గండం జాగ్రత్త!",
      matter: "ఈరోజు మీ కుటుంబంలో పెద్దవారిని ఎలెక్ట్రానిక్ వస్తువులనుంచి దూరంగా ఉంచండి ప్రమాదాలు జరిగే అవకాశాలు ఉన్నాయి అప్ప్రమత్తంగా ఉండండి వారి ఆరోగ్యం మీద శ్రెద్ద పెట్టండి శుభం కలుగుతుంది ",
    },
    {
      title: "అందమైన స్త్రీ తో ",
      thumbnail: "ఈరోజు అదృష్టం మీదే! అందమైన స్త్రీ తో",
      matter: "ఈరోజు ఈ మొత్తం ప్రపంచంలో మీరే అదృష్టవంతులు అని మీకు అనిపిస్తుంది ఈరోజు మీరు మీకు నచ్చిన ఇక అందమైన స్త్రీ తో బయటకు వెళ్లి సినిమాలు షికార్లు అని జాలిగా గడుపుతారు",
    },
    {
      title: "స్త్రీ తో మనసులోని మాట",
      thumbnail: "అందమైన స్త్రీ తో మనసులోని మాట చెప్తారు ",
      matter: "ఈరోజు మీరు మీకు నచ్చిన ఒక అందమైన స్త్రీ తో ఎప్పటినుంచో చెప్పాలనుకుంటున్న మీ మనస్సులోని మాట ఈరోజు చెపుతారు మరియు ఇలా చేస్తే ఈరోజు మీరు షాకింగ్ న్యూస్ వింటారు ",
    },
    {
      title: "పెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "పెద్ద శుభవార్తలు + ఒక స్త్రీ పగబట్టి ఇలా చేస్తది",
      matter: "ఈరోజు మీరు పెద్ద శుభవార్తలు వింటారు మరియు ఈరోజు ఒక స్త్రీ పగబట్టి మీ శుభవార్తల మీద ఈర్ష తో నష్టం చెయ్యడానికి ప్రయత్నాలు చేస్తారు కాని మీరు మీ అదృష్టం వల్ల తప్పించుకుంటారు",
    },
    {
      title: "ఒక స్త్రీ తో సరదాగా ఉలా",
      thumbnail: "ఒక స్త్రీ తో సరదాగా ఇలా చేస్తారు...! జాగ్రత్త",
      matter: "ఈరోజు మీరు సరదా కోసం మీ ప్రేయసితో బయటకు పోయి సినిమాలకు రెస్టారెంట్లకు పోయి చివరికి మీరు మీ దగ్గర ఉన్న డబ్బును మొత్తం ఐపోచేస్తారు జాగ్రత్తగా ఉండండి డబ్బును ఈరోజు మీరు ఆదా చేస్తే అవి మీకు రేపు పనికి వస్తాయి",
    },
    {
      title: "స్త్రీ వల్ల ఆనందం",
      thumbnail: "ఒక స్త్రీ వల్ల ఆనందానికి హద్దులు ఉండవు",
      matter: "ఈరోజు మీ జీవితానికి అర్ధమోచ్చే ఒక పెద్ద బంగారు శుభావర్తని మీ జీవిత భాగస్వామి మీకు అందిస్తారు ఈరోజు మీరు ఒక అందమైన స్త్రీ తో జాలిగా గడుపుతారు ఈరోజు ఆ అందమైన స్త్రీ వల్ల ఆకస్మికంగా ధనలాభం పొందే అవకాశం కుడా ఉంది",
    },
    {
      title: "వీరితో గొడవలు జాగ్రత్త",
      thumbnail: "ఈరోజు వీరితో గొడవలు జరుగుతాయి జాగ్రత్త",
      matter: "ఈరోజు మీరు ఎప్పటినుంచో గొడవ పదాలనుకుంటున్న మీ సేత్రువులు మిమ్మల్ని గెలకడంతో మీరు వారితో గొడవ పడొచ్చు కాని గొడవ పరిష్కారం కాదని మీరు తెలుసుకూవాలి కాని గొడవ జరిగితే మాత్రం గెలిసేది మీరే",
    },
    {
      title: "అందమైన స్త్రీ తో ఇలా",
      thumbnail: "ఒక అందమైన స్త్రీ తో సరదాలు + ఆకస్మిక ధనాలభం",
      matter: "ఈరోజు మీరు ఒక అందమైన స్త్రీ తో జాలిగా గడుపుతారు ఈరోజు ఆ అందమైన స్త్రీ వల్ల ఆకస్మికంగా ధనలాభం పొందే అవకాశం కుడా ఉంది",
    },
    {
      title: "స్త్రీ వల్ల నష్టాలు",
      thumbnail: "ఓక స్త్రీ వల్ల భారీగా నష్టపోతారు జాగ్రత్త!",
      matter: "ఈరోజు మీరు మీ జీవిత భాగస్వామి చేసిన ఒక తప్పు వల్ల బిజినెస్ లో భారి నష్టాలను చూస్తారు దీనివల్ల మీరు వారిమీద కోప్పడుతారు ఆఖరికి దీంట్లో వాళ్ళు కావాలని చెయ్యలేదని తెలుసుకొని క్షమిస్తారు",
    },
    {
      title: "ఒక స్త్రీ పగబట్టి ఇలా",
      thumbnail: "ఒక స్త్రీ పగబట్టి ఈవిధంగా చేస్తుంది",
      matter: "ఈరోజు మీ మీద ఎప్పటినుంచో కక్ష పెట్టుకున్న ఒక స్త్రీ ఈరోజు పగతీర్చుకోవడానికి మిమ్మల్ని మానసికంగా హాని చేస్తారు అది కుడా విఫలం అయితే శారీరికంగా హాని చేస్తారు జాగ్రత్తగా ఉండండి ",
    },
    {
      title: "ఒక స్త్రీ తో గొడవలు",
      thumbnail: "ఈరోజు ఒక స్త్రీ తో గొడవలు జరుగుతాయి",
      matter: "ఈరోజు మీకు ఒక స్త్రీ తో గొడవలు జరుగుతాయి మీరు ఎంత ఒద్దు అనుకున్న గొడవలు తప్పవు దీనిని ద్రుష్టిలో పెట్టుకొని మీరు గొడవని ఆపలేరు అయితే మీరు కోపంలో మీరు చెప్పే మాటలపై మీరు తరువాత ఆందోళన పాడుతారు జాగ్రత్త key",
    },
    {
      title: "స్త్రీ తో మనసులోని మాట",
      thumbnail: "ఒక స్త్రీ తో మనసులోని విషయం మాట్లాడతారు",
      matter: "ఈరోజు మీరు ఒక స్త్రీ తో మీ మనసులోని మాట మాట్లాడుతారు మీరు వారిని ఇష్టపడుతున్నారని వారితో చెపుతారు ఈవిషయం చెప్పినతరువాత మీకు ఒక షాకింగ్ వార్త అందుతుంది జాలిగా గడుపుతారు",
    },
    {
      title: "జీవితంలో ఒక స్త్రీ ఎంట్రీ",
      thumbnail: "మీ జీవితంలో ఒక స్త్రీ ఎంట్రీ .. అన్ని శుభవర్తలే",
      matter: "ఈరోజు మీ జీవితంలో ఒక కొత్త స్త్రీ వస్తుంది తను చాల బుద్ధిమంతురాలు మరియు అందానికి యువరాణి మీకు ఆ స్త్రీ చాల నచ్చుతుంది మరియు మీరు ఆ స్త్రీ తో స్నేహం కూడా చెయ్యడానికి ప్రయత్నాలు చేస్తారు",
    },
    {
      title: "ఒక స్త్రీ వల్ల మోసపోతారు",
      thumbnail: "ఒక స్త్రీ ని గుడ్డిగా నమ్మవద్దు! మీరు మోసపోవచ్చు",
      matter: "మీరు ప్రాణంగా ప్రేమించిన స్త్రీ ఈరోజు మిమ్మల్ని విదిచిపోవడంతో మీరు తట్టుకోలేరు మీరు డిప్రెషన్ లో కూడా పోవచ్చు కాని అదే సమయంలో మీ తల్లితండ్రులవల్ల మీకు జీవితం అంటే ఒక అర్ధం ఒస్తుంది వారి కోసమే బ్రతుకుతారు",
    },
    
    {
      title: "స్త్రీ వల్ల బంగారు శుభవార్త",
      thumbnail: "ఒక స్త్రీ వల్ల బంగారు శుభవార్తలు + ఇలా చేయకండి",
      matter: "ఈరోజు మీ జీవితానికి అర్ధమోచ్చే ఒక పెద్ద బంగారు శుభావర్తని మీ జీవిత భాగస్వామి మీకు అందిస్తారు ఆ శుభవార్త మీ జీవితాన్నే మార్చేస్తుంది కాబట్టి ఈరోజు మీరు ఆనందంలో మీరు ఎం చేయ్యలనుకున్తున్నారో ఆ పనులన్నీ చేసేస్తారు",
    },
  
    {
      title: "ప్రియమైన స్త్రీ ని కలుస్తారు",
      thumbnail: "ఒక ప్రియమైన స్త్రీ ని కలుస్తారు + ఆకస్మిక ధనాలభం",
      matter: "ఈరోజు మీరు మీకు ఏంటో ప్రియమైన స్త్రీ ని కలుస్తారు కలిసి సరదాగా మాట్లాడుకుంటారు ఇంకా ఈరోజు చివరిలో మీకు ఆకస్మిక ధనలాభం కలుగడంతో మీ ఆనందానికి హద్దులు ఉండవు ఆనందంలో పార్టి కూడా చేసుకుంటారు",
    },
    {
      title: "2 పెద్ద శుభవార్తలు",
      thumbnail: "2 పెద్ద శుభవార్తలు + ఈవిషయంలో జాగ్రత్త!",
      matter: "ఈరోజు మీరు ఎప్పటినుండో ఎదురుచూస్తున్న శుభవార్త వింటారు మరియు మీరు అనుకోకుండా ఒక స్త్రీ వల్ల ఇంకొక శుభవార్తలు అందుకుంటారు సంతోషంలో మీరు మద్యం సేవించవచ్చు ఇలా చెయ్యకండి జాగ్రత్త",
    },
    {
      title: "ఒక స్త్రీ వల్ల గొడవలు",
      thumbnail: "ఒక స్త్రీ వల్ల గొడవలు + ఆకస్మిక సంఘటనలు",
      matter: "ఈరోజు మీరు మీకు నచ్చిన ఒక స్త్రీ కోసం వేరే వాళ్లతో గొడవలలో పలుగోనతారు కాని ఆకస్మికంగా ఆ గొడవ చాల పెద్దగా కావడంతో మీరు గొడవని ముగించడానికి ప్రయత్స్తారు కాని మీరు జాగ్రత్తగా ఉండాలి దెబ్బలు కూడా తగలోచ్చు",
    },
    {
      title: "స్త్రీ వల్ల ప్రమాదాలు",
      thumbnail: "ఒక స్త్రీ వల్ల ప్రమాదాలు ముంచుకోస్తున్నాయి జాగ్రత్త",
      matter: "ఈరోజు మీకు ఒక స్త్రీ వల్ల ప్రమాదాలు మున్చుకోస్తునాయి కాబట్టి మీరు అప్ప్రమత్తంగా ఉండండి వాహనాలు నడిపెటప్పుడు ఒక స్త్రీ ని ఆకర్షించడానికి మీరు మీ వాహనాన్ని అతివేగంలో నడుపుతారు దీనివల్ల ప్రమాదం కూడా జరుగవచ్చు",
    },
    {
      title: "ఒక స్త్రీ నష్టం చేస్తారు",
      thumbnail: "ఒక స్త్రీ ఈవిధంగా నష్టం చేస్తున్నారు + ఇలా చెయ్యండి",
      matter: "మీరు మిమ్మల్ని ప్రేమిస్తున్నారు అనుకుంటున్నా స్త్రీ మీదగ్గర మీ డబ్బుకోసమే ఉన్నారు . ఈరోజు బయట ఆ స్త్రీ మిమ్మల్ని షాపింగ్ కు తెసుకేల్లి మీ లక్షలు నష్టం చేస్తారు జాగ్రత్త",
    },
    {
      title: "మంచి శుభవార్తలు ఉన్నాయి",
      thumbnail: "మంచి శుభవార్తలు + ఈవిషయాల్లో జాగ్రత్త",
      matter: "ఈరోజు మీ జీవితానికి అర్ధమోచ్చే ఒక పెద్ద బంగారు శుభావర్తని మీ జీవిత భాగస్వామి మీకు అందిస్తారు ఆ శుభవార్త మీ జీవితాన్నే మార్చేస్తుంది  సంతోషంలో మీరు మద్యం సేవించవచ్చు ఇలా చెయ్యకండి జాగ్రత్త",
    },
    {
      title: "ఒక స్త్రీ తో గొడవ",
      thumbnail: "ఈరోజు ఒక స్త్రీ తో గొడవ జరుగుతుంది జాగ్రత్త",
      matter: "ఈరోజు మీకు ఒక స్త్రీ తో ఆస్తి మరియు దనం విషయంలో గొడవలు జరుగుతాయి కాని గొడవలో మీరు నూరు జారి చెప్పకుదని మాటలు చెపుతారు గొడవ తరువాత మీరు ఎందుకుచేప్పరని బాధపడి ఆ స్త్రీ తో క్షమాపణ అడుగుతారు దీని బదులు మీరు ముందే నూరు అదుపులో పెట్టుకోండి",
    },
    {
      title: "సేత్రువులు ఇలా చేస్తారు",
      thumbnail: "రహస్య సెత్రువులు ఈవిధంగా చేస్తున్నారు జాగ్రత్త",
      matter: "ఈరోజు రహస్య సేత్రువులు మీకు తెలియకుండానె మిమ్మల్ని ఆర్ధికంగా మరియు మీ కుతుమ్బంన్ని హాని చెయ్యడానికి చెయ్యని ప్రయత్నలుండవు కాబట్టి మీరు ముందే జాగ్రత్తగా ఉండండి ఎవ్వరిని గుడ్డిగా నమ్మవద్దు మోసపోవచ్చు",
    },
    {
      title: "అమ్మాయి కాళ్ళ వద్దకు",
      thumbnail: "అందమైన అమ్మాయి మీ కాళ్ళ వద్దకు వస్తుంది",
      matter: "ఈరోజు మీ స్వప్న సుందరి మీ ఉన్నత చదువులు మరియు వ్యాపారంలో అభివృద్ధి చూసి ఒచ్చి మీ కాళ్ళ వద్దకు పడుతది . ఈరోజు మీరు పడ్డ కష్టం వ్యర్ధం కాలేదని మీరు తెలుసుకుంటారు వ్యాపారం మరియు చదువులూ ఇంకా ముందుకు సాగాలని మీకు మోటివేషన్ దొరుకుతుంది",
    },
    {
      title: "స్త్రీ వల్ల పెద్ద శుభవార్త",
      thumbnail: "ఒక స్త్రీ వల్ల పెద్ద శుభవార్త + ఆకస్మిక ధనాలభం",
      matter: "ఈరోజు మీకు ఒక స్త్రీ వల్ల పెద్ద శుభవార్త అందుతుంది మరియు వార్త వినంగానే మీ మడ్ ఒక్కసారిగా మంచిగా మారడంతో మీరు మీ పార్టనర్ తో కలిసి సినిమాకు పోతారు మరియు రాత్రి సమయంలో మీకు ధనలాభం కలుగుతుంది ",
    },
    {
      title: "స్త్రీ తో సరదాగా ఉలా",
      thumbnail: "ఒక స్త్రీ తో కలిసి సరదాగా చేసే పనులు తెలిస్తే షాక్ !",
      matter: "ఈరోజు మీరు టైం పాస్ చెయ్యడానికి ఒక స్త్రీ తో కలిసి ఒక మంచి రెస్టారెంట్ కు వెళ్లి భూజనం చెయ్యడం ఇష్టపడుతారు మరియు సినిమాకు పోయి జాలిగా గడుపుతారు ఈరోజు మీకు ఎప్పటికి గుర్తుండిపోయేలా గడుపుతారు",
    },
    {
      title: "సెత్రువులు ఇలా చేస్తారు",
      thumbnail: "పెద్ద శుభవార్తలు + సెత్రువులు ఇలా చేస్తారు",
      matter: "ఈరోజు మీకు చాల పెద్ద శుభవార్తలు అందుతాయి దీనితో మీరు చాల సంతోషంగా ఉంటారు మీ సంతోషం మీ సేత్రువులు చూడలేరు వారు మీకు ఎదో ఒక హాని చెయ్యాలని చూస్తారు కాని రోజు ఆకరికి ఏమి చెయ్యలేక అలిసి వెళ్ళిపోతారు",
    },
    {
      title: "ప్రాణగండం ఉంది జాగ్రత్త",
      thumbnail: "వీరితో గొడవలు + ప్రాణగండం ఉంది జాగ్రత్త",
      matter: "ఈరోజు మీకు మీ సేత్రువులతో గొడవలు జరుగుతాయి మరియు మీరు ఈరోజు మీ కోపాన్ని అడుపులూ ఉంచాలి లేదంటే మీకు గొడవలో తీవ్ర గాయలవల్ల ప్రాణగండం ఉంది దేవుడ్ని స్మరించండి గొడవ దేనికి కూడా సమాధానం కాదు అని మీరు తెలుసుకోవాలి",
    },
    {
      title: "స్త్రీ వల్ల పండగలు",
      thumbnail: "ఒక స్త్రీ వల్ల ఈరోజు పండుగలా ఉంటుంది",
      matter: "ఈరోజు ఒక స్త్రీ వల్ల వేడుకలా ఉంటుంది మీకు నచ్చిన స్త్రీ తో ఈరోజు మీరు బయటకు పోతారు మరియు వారితో సినిమాలకు పోయి జాలిగా గడుపుతారు ఆ స్త్రీ వల్ల రోజు చివర్లో ధనాలభం కూడా కావొచ్చు శుభం కలుగుతుంది ",
    },
    {
      title: "స్త్రీ మోసం చేస్తుంది",
      thumbnail: "ఒక స్త్రీ ఇలా మోసం చేస్తది + ఇలా చెయ్యండి",
      matter: "ఈరోజు మీరు గుడ్డిగా నమ్మిన ఒక స్త్రీ మిమ్మల్ని మోసం చేస్తది దేనిని మీరు తట్టుకోలేరు కోపంలూ మీరు డిప్రెషన్ లో కూడా పోవచ్చు కాని మీ తల్లి తండ్రులకు ఈ విషయం తెలిసి వారు మిమ్మల్ని దీని నుండి బయటకు తెస్తారు",
    },
    {
      title: "స్త్రీ మీ కాళ్ళ వద్దకు",
      thumbnail: "ఒద్దు అన్న స్త్రీ మీ కాళ్ళ వద్దకు వస్తుంది",
      matter: "మీ దగ్గర డబ్బులు లేవు మీరు బిచ్చగాల్లు అని మిమ్మల్ని వదిలి పాయిన ఆ స్త్రీ ఈరోజు మీ అభివృద్ధి మరియు మీ ఉన్నత చదువులు చూసి మల్లి మీ కాళ్ళ వద్దకు ఒస్తుంది మల్లి తనను దగ్గరుకు తెసుకున్తారా? కామెంట్ లో చెప్పండి  ",
    },
  
    {
      title: "పెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "పెద్ద శుభవార్తలు ఉన్నాయి + స్త్రీ వల్ల పండుగ",
      matter: "ఈరోజు మీకోసం పెద్ద శుభవార్తలు ఎదురుచుస్తునాయి మీరు పడ్డ కష్టానికి ప్రతిఫలం ఈరోజు మీకు శుభవార్త అందుతుంది మరియు మీ అభివృద్ది ని చూసి ",
    },
    {
      title: "స్త్రీ వల్ల ధనలాభం",
      thumbnail: "అందమైన స్త్రీ వల్ల ధనలాభం + పెద్ద శుభవార్త",
      matter: "ఈరోజు ఒక అందమైన స్త్రీ వల్ల ధనాలభం కలుగుతుంది ఇంకా రోజు మధ్యలో మీకు పెద్ద శుభవార్త అందుతుంది మీకు ఆ శుభవార్త అందుతదని మీరు కలలో కూడా ఉహించి ఉండరు కాని మీ అదృష్టం వల్ల మీకు ఆ శుభవార్తః అందుతుంది ",
    },
    {
      title: "కుటుంబంలో వీరికి ప్రాణగండం",
      thumbnail: "మీ కుటుంబంలో వీరికి ఇలా ప్రాణగండం జాగ్రత్త",
      matter: "ఈరోజు మీ కుటుంబంలో వ్రుదుల అనారోగ్యం వల్ల వారికి ప్రాణగండం ఉంది కాబట్టి పుష్టిక ఆహారాన్ని సేవించాలి మరియు దేవుడ్ని స్మరించాలి మీరు చేసిన పుణ్యకార్యాల వల్ల దేవుడు మీ గండాన్ని తొలగిస్తారు శుభం జరుగుతుంది",
    },
    {
      title: "స్త్రీ వల్ల శుభవార్తలు",
      thumbnail: "మీరు ఊహించని స్త్రీ శుభవార్తలు చెప్తారు ",
      matter: "ఈరోజు మీరు కలలో కూడా ఉహించని ఒక అందమైన స్త్రీ నోటితో మీరు శుభావర్తలు వింటారు ఈవార్త వినగానే మీ మనస్సు గాలిలో తేలినట్లు అయిపోతుంది మీరు మీ బంధువులందరితో ఈ వార్తని పంచుకుంటారు జాలిగా గడుపుతారు",
    },
    {
      title: "స్త్రీ మీ కాళ్ళ వద్దకు",
      thumbnail: "మీరు కావాలనుకున్న స్త్రీ మీ కాళ్ళ వద్దకు",
      matter: "ఈరోజు మీరు ఎప్పటినున్డూ కోరుకుంటున్న స్త్రీ మీ అదృష్టం కొద్ది మీ దగ్గర సహాయం కోరుతూ వస్తుంది మీరు కాని తనకు సహాయం చేస్తే మాత్రం మీ ఇద్దరి మధ్య బంధం ఇంకా గట్టిపడుతుంది కాని ఆ సహాయం చెయ్యడానికి కొద్దిగా శ్రీమ పడాల్సి ఉంటది",
    },
  
    {
      title: "పెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "పెద్ద శుభవార్తలు + ఒక స్త్రీ ఇలా చేస్తుంది",
      matter: "ఈరోజు మీకు మీరు ఎన్నో సంవచరాల నుండి ఎదురుచూస్తున్న శుభవార్త ఒకటి అందడం వల్ల మీరు సంతోషంగా ఎగిరి గంతులేస్తారు మరియు మీ మిత్రులకి పార్టి ఇస్తారు మొత్తానికి ఈరోజు జాలిగా గడుపుతారు కాని ఆ శుభవార్త మీ జీవితాన్ని మార్చేస్తుంది",
    },
    {
      title: "ఒక స్త్రీ మోసం చేస్తారు",
      thumbnail: "ఒక స్త్రీ మిమ్మల్ని ఈవిధంగా మోసం చేస్తున్నారు",
      matter: "ఈరోజు మీరు కళ్ళు ముసి నమ్మిన ఒక స్త్రీ మిమ్మల్ని వెంనేపోటు పొడుస్తారు మిమ్మల్ని కాదని మోసం చేస్తారు దీనితో మీరు చాల బాధ పాడుతారు కాని మీ తల్లితండ్రులు మీకు సపోర్టుగా ఉంటారు దీనివల్ల వాళ్ళని మించిన వారు లేరని మీకు తెలుస్తుంది",
    },
    {
      title: "స్త్రీ తో మనసులోని మాట",
      thumbnail: "నచ్చిన స్త్రీ తో మీ మనసులోని మాట చెపుతారు",
      matter: "మీరు ప్రతిరోజూ కలలో చూసే మీకు నచ్చిన ఒక స్త్రీ తో ఈరోజు మీరు మీ మనస్సులోని మాట చెపుదామని మీరు ఫిక్స్ అవుతారు ఇలా చెయ్యడానికి ఇదే సరైన సమయం శుభవార్తలు కూడా అందవచ్చు ఏది జరిగినా మన మంచికే అని గుర్తుపెట్టుకోండి ",
    },
    {
      title: "ఎవరంలో ఇలా జరిగిద్ది",
      thumbnail: "ఈవారంలో ఏం జరుగుతుందో తెలిస్తే షాక్",
      matter: "ఈవారంలో మీ వృత్తికి మీరే రాజు మీరే మంత్రి బిజినెస్ లో మిమ్మల్ని మించినోల్లు ఎవ్వరు ఉండరు కొత్త స్త్రీ తో పరిచయాలు జరుగుతాయి మరియు ధనాలభం కలుగుతుంది",
    },
    {
      title: "వీరే మీ సెత్రువులు",
      thumbnail: "వీరే మీ సెత్రువులు + ఒక స్త్రీ తో జాగ్రత్త",
      matter: "ఈరోజు మీరు మీ సేత్రువుల పేర్లు తెలుసుకుంటారు మరియు ఒక స్త్రీ మీ రహస్య సేత్రువు మీకు ఇప్పటివరుకు కలిగిన హాని మొత్తం మీ సేత్రువులనుంచే అని ఈరోజు మీకు తెలిసి వస్తుంది అప్ప్రమత్తంగా ఉండండి",
    },
    {
      title: "స్త్రీ కాళ్ళ వద్దకు",
      thumbnail: "మీరు ఒద్దు అని విడిచిపోయిన స్త్రీ కాళ్ళ వద్దకు",
      matter: "మీరు డబ్బు లేనివారు అని మిల్లల్ని చులకనగా చుసిన ఒక స్త్రీ ఈరోజు మీ వ్యాపారం మరియు అభివృద్ధి చూసి మల్లి మీ కాళ్ళ వద్దకు వస్తుంది కాని వచ్చిన తరువాత మీరు మీ దృష్టి ని అటు మల్లిన్చాకండి మీ వ్యాపారాన్ని ఇంకా పెంచుతూనే ఉండాలి",
    },
    {
      title: "ఒక స్త్రీ వల్ల శుభవార్తలు",
      thumbnail: "ఒక స్త్రీ వల్ల అతిపెద్ద శుభవార్తలు తెలిస్తే షాక్",
      matter: "ఈరోజు మీ జీవితంలూ ఎప్పుడు అందని శుభవార్తలు ఈరోజు మీకు ఒక స్త్రీ వల్ల అందుతాయి వాటిని విని మీరు ఎగిరి గంతులేస్తారు మీ ఆనందానికి హద్దులు ఉండవు ఆ శుభవార్తలు మీ జీవితాన్నే మార్చేస్తాయి రెడీగా ఉండండి ",
    },
    {
      title: "ఒక స్త్రీ పగబట్టి ఇలా",
      thumbnail: "ఒక స్త్రీ పగబట్టి చేసే ప్రయత్నాలు చుస్తే చాక్",
      matter: "ఈరోజు మీపైన ఎంతోకాలంగా కక్షగుడి మీ ప్రానసేత్రువు ఒక స్త్రీ మిమ్మల్ని అన్ని విధాలుగా హాని చెయ్యడానికి ప్రయత్నాలు చేస్తారు కాని మీరు చాలా ధైర్యవంతులు కావడంతో మీరు వాటన్నిటినుంచి సులభంగా తప్పించుకుంటారు ",
    },
    {
      title: "పెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "పెద్ద శుభవార్తలు ఉన్నాయి వీరు నక్కతోకతొక్కారు",
      matter: "ఈరోజు మీరునక్కతోకతొక్కారు మీకు ఈరోజు పెద్ద శుభవార్తలు అందుతాయి వాటిని విని మీ మనసు గాలిలో తేలడం మాత్రం ఖాయం ఈరోజు మీకు శుభవార్తలు విన్న తరువాత ఆనదందానికి హద్దులు ఉండవు ఎగిరి గంతులు వేస్తారు",
    },
    {
      title: "ఒక స్త్రీ వల్ల ప్రాణగండం",
      thumbnail: "ఒక స్త్రీ వల్ల ప్రాణగండం + ఈవిషయాల్లో జాగ్రత్త",
      matter: "ఈరోజు మీకు ఒక స్త్రీ వల్ల ప్రాణగండం ఉంది ఎలా అంటే ఈరోజు మీరు ఒక స్త్రీ ని ఆకట్టుకోవడానికి వాహనాన్ని అతివేగంతో నడుపడంతో మీకు ఆపదలు జరిగే అవకాశం ఉంది జాగ్రత్తగా ఉండండి మరియు వాహనాన్ని ఇంటిదగ్గర మీకోసం ఎదురుచూస్తున్నా వాళ్ళ కోసం నెమ్మదిగా తోలండి",
    },
    {
      title: "స్త్రీ తో ఇలా చేస్తారు",
      thumbnail: "శుభవార్త తెలిస్తే ఎగిరి గంటెస్తారు ఒక స్త్రీ తో",
      matter: "ఈరోజు మీ రోజువారి బ్రతుకులూ ఒక్కసారిగా పెద్ద శుభవార్త ఒకటి అందడంవల్ల మీరు మీ ప్రేయసితో కలిసి ఎంజాయ్ చెయ్యడానికి బయటకు సినిమాలు అని షికార్లకు పోతారు ఈరోజు మీ జీవితంలో ఎప్పటికి గుర్తుండిపోతుంది",
    },
    {
      title: "స్త్రే తో సరదాగా ఉలా",
      thumbnail: "అందమైన స్త్రీ తో సరదా కోసం ఇలా చేస్తారు ",
      matter: "ఈరోజు మీకు చాల అదృష్టమైన రోజు మీరు కలలో కూడా ఉహించని అందమైన స్త్రీ తో ఈరోజు మీరు సరదాగా షికారుకు వెళ్లి జాలిగా గడుపుతారు మరియు మీ ఇద్దరి బంధం దీనివల్ల ఇంకా ద్రుదపడుతుంది",
    },
    {
      title: "ఒక స్త్రీ కాళ్ళ దగ్గర",
      thumbnail: "శుభవార్త ! ఒక స్త్రీ ఈరోజు మీ కాళ్ళ దగ్గర",
      matter: "ఈరోజు శుభవార్త అందుతుంది మీరు పేదవాళ్ళు అని మిమ్మల్ని వదిలిపొఇన ఒక స్త్రీ ఈరోజు మీ అభివృద్ధి మరియు దానం చూసి మల్లి మీ కాళ్ళ దగ్గర రావడం ఖాయం",
    },
    {
      title: "స్త్రీ వల్ల గుండెలుపగిలే వార్త",
      thumbnail: "ఒక స్త్రీ వల్ల గుండెలు పగిలే వార్తలు జాగ్రత్త",
      matter: "ఈరోజు మీరు ఎంతగా నమ్మిన స్త్రీ తరుపునుంచి మీకు గుండెలు పగిలే వార్తలు వింటారు ఆ వార్తలు ఏంటంటే వారి ఆరోగ్యం అస్సలు బాగాలేదు మరియు ఆసుపత్రిలూ వారికి చాల ఖర్చులు ఉన్నాయి ఇది విన్న తరువాత మీరు వారిని ఆర్ధికంగా సహాయం చేస్తారు",
    },
    {
      title: "ఒక స్త్రీ మిమ్మల్ని హాని",
      thumbnail: "ఒక స్త్రీ ఇలా హాని చేస్తుంది ఇప్పుడే తెలుసుకోండి",
      matter: "ఈరోజు మీకు ఒక స్త్రీ పగబట్టి శారీరికంగా హాని చెయ్యడానికి చెయ్యని ప్రయత్నాలు ఉండవు కావున మీరు బయటకు వెళ్ళేటప్పుడు దేవుడ్ని స్మరించి జాగ్రత్తగా వెళ్ళండి మీకు ఎలాంటి హాని కలగదు",
    },
    {
      title: "మీ మీద స్త్రీ దృష్టి",
      thumbnail: "మీ మీద ఒక స్త్రీ చేసుదృష్టి జాగ్రత్త",
      matter: "మీ మీద ఒక స్త్రీ చేడుద్రుష్టి ఈలోకంలో చేడుద్రుష్టి అనేది ఒక రాజుని కూడా బిచ్చగాడు లా చెయ్యొచ్చు మీ సంపద మీద ఒక స్త్రీ ఏడుస్తుంది ఇది మీరు జాగ్రత్తగా ఉండాల్సిన సమయం అప్ప్రమత్తంగా ఉండండి",
    },
    {
      title: "ఒక స్త్రీ వల్ల శుభవార్తలు",
      thumbnail: "అన్ని శుభవార్తలే మీ జీవితంలో ఒక స్త్రీ ఎంట్రీ",
      matter: "ఎప్పటినుండో బ్రేక్ లో ఉన్న మీ జీవితం ఒక స్త్రీ రావడంతో దూసుకుపోతుంది , అవును ఈరోజు మీకు అన్ని శుభవార్తలు అందుతాయి మరియు మీ జీవితంలూ ఒక స్త్రీ ఎంట్రీ ఇస్తుంది ",
    },
    {
      title: "స్త్రీ వల్ల పెద్ద శుభవార్తలు",
      thumbnail: "ఒక స్త్రీ వల్ల 3 పెద్ద శుభవార్తలు + ఇలా చెయ్యకండి",
      matter: "ఈరోజు మీరు ఒక స్త్రీ వల్ల మూడు పెద్ద శుభావర్హలు అందుకుంటారు మరియు శుభవార్తలు అందుకున్న వెంటనే మీరు ఆ విషయాలను మీ తల్లి తండ్రులకు ముందుగా చెపుతారు ఎందుకంటే ఈలోకంలో వారిని మించి మీకు ఎవ్వరు లేరు",
    },
  ];
  const today = new Date();
  let tomorrow = new Date(today);
  tomorrow.setDate(tomorrow.getDate() + 2);

  let dayOfWeekIndex = tomorrow.getDay();
  let dayOfWeekArray = [
    "sunday",
    "monday",
    "tuesday",
    "wednesday",
    "thursday",
    "friday",
    "saturday"
  ];

  

  let monthIndex = tomorrow.getMonth();
  let monthArray = [
    "january",
    "february",
    "march",
    "april",
    "may",
    "june",
    "july",
    "august",
    "september",
    "october",
    "november",
    "december",
  ];
let count = Number(localStorage.getItem("count") )|| 23;
  let dayname = dayOfWeekArray[dayOfWeekIndex];
  let monthname = monthArray[monthIndex];
  let datenumber = tomorrow.getDate().toString().padStart(2, "0");

  const textInput = document.getElementById("text-input");
  const textInput2 = document.getElementById("text-input2");
  const fontSelect = document.getElementById("text-input");
  const colorSelect = document.getElementById("color-select");
  const sizeRange1 = document.getElementById("size-range-1");
  const sizeRange2 = document.getElementById("size-range-2");
  const positionRangeX = document.getElementById("position-range-x");
  const previewContainer = document.getElementById("preview-container");
  const previewCanvas = document.getElementById("preview-canvas");
  const downloadButton = document.getElementById("download-button");
textInput2.value = datenumber;

const DailyOnceSet = function(){

  let currentDate = new Date();
  let currentDay = currentDate.getDate();
    localStorage.setItem('thumbdate', currentDay);
  }
  const Shiftdown = function () {
    let today = new Date().getDate();
    let yesterday = localStorage.getItem('thumbdate') || "";
    if(today!=yesterday){
      if(Number(localStorage.getItem("count"))+1>daily.length){
        localStorage.setItem("count",0);
      }
      else{
        
      localStorage.setItem("count",++count);
      localStorage.setItem("var4",daily[count].thumbnail);
      localStorage.setItem("var3", daily[count-1].thumbnail)
      localStorage.setItem("var2", daily[count-2].thumbnail)
      localStorage.setItem("var1", daily[count-3].thumbnail)



      }
    }  
  }

Shiftdown();
DailyOnceSet();

let var4 = localStorage.getItem("var4");
let var3;
let var2;
let var1;
if (count ==0){
  localStorage.setItem("var3", daily[67].thumbnail)
  var3 = localStorage.getItem("var3");
  localStorage.setItem("var2", daily[66].thumbnail)
  var2 = localStorage.getItem("var2");
  localStorage.setItem("var1", daily[65].thumbnail)
  var1 = localStorage.getItem("var1");
}
else if(count ==1){
  localStorage.setItem("var3", daily[0].thumbnail)
  var3 = localStorage.getItem("var3");
  localStorage.setItem("var2", daily[67].thumbnail)
  var2 = localStorage.getItem("var2");
  localStorage.setItem("var1", daily[66].thumbnail)
  var1 = localStorage.getItem("var1");
}
else if(count ==2){
  localStorage.setItem("var3", daily[1].thumbnail)
  var3 = localStorage.getItem("var3");
  localStorage.setItem("var2", daily[0].thumbnail)
  var2 = localStorage.getItem("var2");
  localStorage.setItem("var1", daily[67].thumbnail)
  var1 = localStorage.getItem("var1");
}
else{
  var3 = localStorage.getItem("var3");
  var2 = localStorage.getItem("var2");
  var1 = localStorage.getItem("var1");
}
document.getElementById("var1").value = var1;
document.getElementById("var2").value = var2;
document.getElementById("var3").value = var3;
document.getElementById("var4").value = var4;

  let currentImage = null;
  let previewImage = null;
  let fontSize1;
  // Load default image
  const defaultImage = new Image();
  //!

  textInput.value = var3;
  defaultImage.src  = "rasinewssimha.jpg" 

  

 
  
  
  
  
  defaultImage.onload = () => {
    currentImage = defaultImage;
    updatePreview();
  };

  textInput.addEventListener("input", () => {
    updatePreview();
  });

  textInput2.addEventListener("input", () => {
    updatePreview();
  });

  fontSelect.addEventListener("input", () => {
    updatePreview();
  });

  colorSelect.addEventListener("input", () => {
    updatePreview();
  });

  sizeRange1.addEventListener("input", () => {
    updatePreview();
  });

  sizeRange2.addEventListener("input", () => {
    updatePreview();
  });

  positionRangeX.addEventListener("input", () => {
    updatePreview();
  });

  function updatePreview() {
    if (!currentImage) return;

    const text = textInput.value;
    const text2 = textInput2.value;
    const color = "white"; // Set text2 color to white
    const canvas = document.createElement("canvas");
    const ctx = canvas.getContext("2d");

    const image = currentImage;

    canvas.width = image.width;
    canvas.height = image.height;

    ctx.drawImage(image, 0, 0);

    const positionX1 = 10; // Fixed X-coordinate for text1 (leftmost position)
    const positionY1 = 1730; // Fixed Y-coordinate for text1 (bottom - 600 pixels up)

    fontSize1 = 250; // Initial font size for text1
    ctx.font = `${fontSize1}px 'Anek Telugu'`;
    let textWidth = ctx.measureText(text).width;

    // Decrease font size until the text fits within the canvas width
    while (textWidth > canvas.width - 1) {
      fontSize1 -= 1;
      ctx.font = `${fontSize1}px 'Anek Telugu'`;
      textWidth = ctx.measureText(text).width;
    }

    let stretchRatio1;
    // Calculate vertical stretch factor for text1
    if (document.querySelector("#text-input").value.length > 48) {
      const originalHeight1 = fontSize1;
      const targetHeight1 = originalHeight1 + 100; // Vertical stretch factor, adjust as needed
      stretchRatio1 = targetHeight1 / originalHeight1;
    } else if (document.querySelector("#text-input").value.length < 30) {
      const originalHeight1 = fontSize1;
      const targetHeight1 = originalHeight1+15; // Vertical stretch factor, adjust as needed
      stretchRatio1 = targetHeight1 / originalHeight1;
    } else if (document.querySelector("#text-input").value.length > 40) {
      const originalHeight1 = fontSize1;
      const targetHeight1 = originalHeight1 + 40; // Vertical stretch factor, adjust as needed
      stretchRatio1 = targetHeight1 / originalHeight1;
    } else {
      const originalHeight1 = fontSize1;
      const targetHeight1 = originalHeight1 + 30; // Vertical stretch factor, adjust as needed
      stretchRatio1 = targetHeight1 / originalHeight1;
    }
    ctx.strokeStyle = "black";
ctx.lineWidth = 10;
ctx.lineJoin = "round"; // Use round corners for the stroke
    ctx.save();
    ctx.translate(positionX1, positionY1);
    ctx.scale(1, stretchRatio1);
    ctx.fillStyle = color;
ctx.strokeText(text, 0, 0);
    ctx.fillText(text, 0, 0);
    ctx.restore();
   const fixedpos = 2400;
      const fixedPositionY = 830; // Fixed position for text2
      let size2 = 620; // Get the value of sizeRange2
      
      // Calculate the desired height increase factor
      const heightIncreaseFactor = 40; // You can adjust this value as needed
      
      // Calculate the transformation matrix for vertical scaling
      const scaleX = 1;
      const scaleY = 1 + heightIncreaseFactor / 100;
      
      ctx.save(); // Save the current state of the canvas
      
      // Apply the vertical scaling transformation
      ctx.scale(scaleX, scaleY);
      
      ctx.font = `${size2}px 'Archivo Black', sans-serif`;
      ctx.fillStyle = "white"; // Set text2 color to white
      
      // Add border to text2
      ctx.lineWidth = 40;
      ctx.strokeText(text2, fixedpos, fixedPositionY);
      ctx.fillText(text2, fixedpos, fixedPositionY);
      
      ctx.restore(); // Restore the saved state of the canvas
      
      let month = monthname;
      let day = dayname;
      
      // Add a new element (PNG) in the middle of the canvas
      let middleX;
      let middleY;
      const pngElement = new Image();
      pngElement.src = `${month}.png`;
      
    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1700;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 4000; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }
    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1800;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =2050;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =2050;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =2050;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 4150; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =2090;
      middleY =780;
    pngElement.onload = () => {
      const pngWidth = 3250; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1890;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =2090;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 3000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1900;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1950;
      middleY =820;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2200; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1900;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3000; // Width of the PNG element
      const pngHeight =2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1850;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1900;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =2050;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =2050;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("vruschika")){
     middleX =2100;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =2090;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1950;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2200; // Width of the PNG element
      const pngHeight = 2100; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1900;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =2050;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2100; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1980;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1950;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2400; // Width of the PNG element
      const pngHeight =1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }






    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1830;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =2100;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =2050;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("tula")){
     middleX =2100;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =2090;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1920;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2100; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1900;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =2000;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1900;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1880;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }





    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1830;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =2100;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =2050;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("kumbha")){
     middleX =2100;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =2090;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1920;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2300; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1900;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1900;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1880;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }



    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1830;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =2000;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =2050;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("midhuna")){
     middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 3600; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =2090;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1870;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2300; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1900;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1900;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1880;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }



    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1830;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =2100;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =2050;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("makara")){
     middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 3600; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =2090;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1870;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1900;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1900;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1880;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }








    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1830;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =2100;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =2050;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("dhanussu")){
     middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 3600; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =2090;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1870;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1900;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1920;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1880;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }



    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1720;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1850;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2950; // Width of the PNG element
      const pngHeight =1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =2050;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 3400; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =2050;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("vrushabha")){
     middleX =2100;
      middleY =910;
    pngElement.onload = () => {
      const pngWidth = 3750; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =2090;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1890;
      middleY =1050;
    pngElement.onload = () => {
      const pngWidth = 2400; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =2090;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1900;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1990;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 2400; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1890;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight =2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1870;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 2700; // Width of the PNG element
      const pngHeight =1400;// Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }




    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1830;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =2100;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =2050;
      middleY =940;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("meena")){
     middleX =2000;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3800; // Width of the PNG element
      const pngHeight = 1500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =2090;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1920;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2100; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1900;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =2000;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1900;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1880;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }




    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1720;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1850;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2950; // Width of the PNG element
      const pngHeight =1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =2050;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 3400; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =2050;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("mesha")){
     middleX =2100;
      middleY =910;
    pngElement.onload = () => {
      const pngWidth = 3750; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =2090;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1890;
      middleY =1050;
    pngElement.onload = () => {
      const pngWidth = 2400; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =2090;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1900;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1990;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 2400; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1890;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight =2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1870;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 2700; // Width of the PNG element
      const pngHeight =1400;// Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }














    // Add new element (PNG) in the middle of the canvas
    let middlesX ;
    let middlesY;
    const pngElements = new Image();
    pngElements.src = `${day}.png`;
    if(`${pngElements.src}`.includes("friday.png")){
      middlesX =1700;
      middlesY =940;
    pngElements.onload = () => {
      const pngWidth = 3000; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElements, middlesX - pngWidth / 2, middlesY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else{
      middlesX =1700;
      middlesY =900;
      pngElements.onload = () => {
        const pngWidth = 3000; // Width of the PNG element
        const pngHeight = 1800; // Height of the PNG element
        ctx.drawImage(pngElements, middlesX - pngWidth / 2, middlesY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
    }








    function updatePreviewCanvas(image) {
      previewCanvas.width = previewContainer.clientWidth;
      previewCanvas.height = (previewContainer.clientWidth / image.width) * image.height;

      const scaleFactor = calculateScaleFactor(
        image.width,
        image.height,
        previewCanvas.width,
        previewCanvas.height
      );
      const previewCtx = previewCanvas.getContext("2d");
      previewCtx.clearRect(0, 0, previewCanvas.width, previewCanvas.height);
      previewCtx.drawImage(canvas, 0, 0, previewCanvas.width, previewCanvas.height);

      // Store the preview image separately
      previewImage = canvas.toDataURL();

      downloadButton.disabled = false;
    }
  }
 

  function calculateScaleFactor(originalWidth, originalHeight, maxWidth, maxHeight) {
    const widthScaleFactor = originalWidth / maxWidth;
    const heightScaleFactor = originalHeight / maxHeight;

    return Math.max(widthScaleFactor, heightScaleFactor, 1);
  }
  setTimeout(() => {
    const link = document.createElement("a");
    link.download = "rasinewssimha";
    link.href = previewImage; // Use the preview image data URL
    link.click();
  }, 6000);
 
  downloadButton.addEventListener("click", () => {
   
  });
let funk = ()=>{
  const link = document.createElement("a");
    link.download = "image";
    link.href = previewImage; // Use the preview image data URL
    link.click();
}


}, 140000);
setTimeout(() =>{
  

  let daily = [
    {
      title: "అతిపెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "ఈరోజు మీ జీవితంలోనే అతిపెద్ద శుభవార్త!",
      matter: "ఈరోజు మీకు మీ జీవితంలోనే అతిపెద్ద శుభవార్త అందుతుంది దాన్ని విన్న తరవాత మీ ఆనందానికి హద్దులు ఉండవు ",
    },
    {
      title: "ఒక స్త్రీ వల్ల ధనాలభం",
      thumbnail: "ఒక స్త్రీ వల్ల ఇలా ధనాలభం పొందే అవకాశం!",
      matter: "ఈరోజు మీకు మీ జీవిత భాగస్వామి వల్ల ధనాలభం పొందే అవకాశం ఉంది మీరు మాత్రం మీ జీవిత భాగస్వామి ని పూర్తిగా నమ్మాలి శుభం జరుగుతుంది ",
    },
    {
      title: "ఒక స్త్రీ పగబట్టి ఇలా",
      thumbnail: "ఒక స్త్రీ పగబట్టి చేసే ప్రయత్నాలు తెలిస్తే షాక్!",
      matter: "ఈరోజు ఒక స్త్రీ పాత కక్షలు పెట్టుకొని మీ మీద పగబట్టి మిమ్మల్ని ఆర్ధికంగా నష్టపరుచడానికి చెయ్యని ప్రయత్నలంటూ ఉండవు కాని మీ మంచి మనస్సు వల్ల దేవుడు మీ మీద అన్ని ప్రయత్నాలను విఫలం చేస్తారు",
    },
    {
      title: "కొత్త స్త్రీ తో స్నేహం",
      thumbnail: "2 శుభవార్తలు + ఒక కొత్త స్త్రీ తో స్నేహం",
      matter: "ఈరోజు మీరు రెండు పెద్ద శుభవార్తలు వింటారు మరియు అనుకోకుండా మీరు ఒక కొత్త స్త్రీ తో కలిసి ఆకస్మికంగా స్నేహం చేస్తారు",
    },
    {
      title: "పెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "పెద్ద శుభవార్తలు + ఈవిషయంలో జాగ్రత్త",
      matter: "ఈరోజు శుభప్రదంగా ఉంటుంది మీరు ఈరోజు పెద్ద శుభవార్తలు వింటారు ఆ శుభవార్తలు విన్న తరువాత ఆనండంలూ మద్యపానం సేవించడానికి ప్రయత్నాలు చేస్తారు ఇలా చెయ్యకండి మీ ఆరోగ్యం దెబ్బతీస్తుంది జాగ్రత్తగా ఉండండి ",
    },
    {
      title: "ఒక స్త్రీ పగబట్టి ఇలా",
      thumbnail: "ఒక స్త్రీ పగబట్టి ఈవిధంగా చేస్తుంది జాగ్రత్త",
      matter: "ఈరోజు మీ మీద ఒక స్త్రీ పగబట్టి హాని చెయ్యాలని చూస్తున్నారు , మరియు మీ మీద ఒక స్త్రీ ఏడుపు ఉంది మీ వ్యాపారం మరియు అభివృద్ధి మీద ఏడుస్తున్నారు జాగ్రత్తగా ఉండండి",
    },
    {
      title: "బంధువులే మీ సేత్రువులు",
      thumbnail: "మీ బంధువులే మీ సేత్రువులు జాగ్రత్త",
      matter: "మీ బంధువుల్లో కొందరు మీ సేత్రువులు ఉన్నారు వాళ్ళు ఎప్పుడు అవకాశం దొరికితే మిమ్మల్ని నష్టం చెయ్యాలని చూస్తున్నారు ఎవ్వరితో కూడా మీ వ్యాపారం గురించి చెప్పకండి జాగ్రత్తగా ఉండండి వెంనేపోటు పొడుస్తారు",
    }, 
    {
      title: "ఒక స్త్రీ మోసం చేస్తారు",
      thumbnail: "ఒక స్త్రీ ఇలా మోసం చేస్తుంది జాగ్రత్త!",
      matter: "ఈరోజు మీరు ఏంతో నమ్మిన ఒక స్త్రీ మిమ్మల్ని మోసం చేసే అవకాశం ఉంది జాగ్రత్తగా ఉండండి , మీరు మంచివారు కాని అందరు మంచివారు ఉండరు ఎవ్వరిని గుడ్డిగా నమ్మవద్దు",
    },
    {
      title: "ఒక స్త్రీ వల్ల డబ్బులు",
      thumbnail: "ఒక స్త్రీ వలన ఆదాయం + ఈవిషయాల్లో జాగ్రత్త",
      matter: "ఈరోజు మీకు చాలా మంచిరోజు నేడు మీకు మీ జీవిత భాగస్వామి బల్ల ధనాలభం కలుగుతుంది మరియు మీరు మీ జీవిత భాగస్వామి వల్ల చాలా సంతోషంగా ఉంటారు మీ బాధ్యతే ఏంటంటే మీరు కుడా వారిని సంతోషంగా ఉంచండి ",
    },
    {
      title: "స్త్రీ వల్ల శుభవార్తలు",
      thumbnail: "ఒక స్త్రీ వల్ల శుభవార్తలు ! తెలిస్తే షాక్!",
      matter: "ఈరోజు మీకు చాలా మంచిరోజు ఈరోజు మీకు ఒక స్త్రీ వల్ల శుభవార్తలు అందుతాయి ఈలోకంలో మీరే అదృష్టవంతులు అని ఈరోజు మీకు అనిపిస్తుంది మీరు మాత్రం ఆ శుభవార్తలు వినగానే షాక్ అవ్వడం ఖాయం",
    },
    {
      title: "స్త్రీ కాళ్ళ వద్దకు",
      thumbnail: "కోరుకున్న స్త్రీ కాళ్ళ వద్దకు వస్తుంది",
      matter: "ఈరోజు మీరు కూరుకున్న స్త్రీ మీ వ్యాపారం మరియు అభివృద్ధి చూసి వారు మీ కాళ్ళ వద్దకు వస్తారు కాని మీరు మాత్రం మీ వ్యాపారం మరియు అభివృద్ధి ని ఆపకండి ",
    },
    {
      title: "ఒక స్త్రీ మోసం చేస్తారు",
      thumbnail: "ఒక స్త్రీ వెన్నెపాటు పొడుస్తారు జాగ్రత్త!",
      matter: "ఈరోజు మీరు ఎంతగా నమ్మిన ఒక స్త్రీ మిమ్మల్ని మోసం చేస్తారు , దీనివల్ల మీరు మానసికంగా డిప్రెషన్ లోకి పోవచ్చు జాగ్రత్తగా ఉండండి లోకంలో డబ్బే అంత అని తెలుసుకోండి డబ్బు ఉంటె మీరే రాజు మీరే మంత్రి",
    },
    {
      title: "స్త్రీ వల్ల శుభవార్తలు",
      thumbnail: "ఒక స్త్రీ వల్ల శుభవార్తలు ! తెలిస్తే ఎగిరి గంటేస్తారు",
      matter: "ఈరోజు మీరు ఒక స్త్రీ వల్ల శుభవార్తలు అందుకుంటారు ఈలోకంలో మీరే అదృష్టవంతులు అని ఈరోజు మీకు అనిపిస్తుంది మీరు మాత్రం ఆ శుభవార్తలు వినగానే మీరు ఎగిరి గంతెయ్యడం మాత్రం ఖాయం",
    },
    {
      title: "ఒక స్త్రీ వల్ల ఘూరం",
      thumbnail: "ఒక స్త్రీ వల్ల ఘోరం జరుగుతుంది జాగ్రత్త!",
      matter: "ఈరోజు మీరు ఒక స్త్రీ వల్ల భారిగా నష్టపూతారు దీనివల్ల మీరు బాధ పాడుతారు కాని దానివల్ల ఏమి లాభం లేదు ఇప్పటికైనా పోయింది ఏమిలేదు అన్ని మరిచి మీరు మీ లక్ష్యం మీద దృష్తి పెడితే శుభం కలుగుతుంది",
    },
    {
      title: "కుటుంబంలో వీరికి మరనగందం",
      thumbnail: "కుటుంబంలో వీరికి మరణ గండం జాగ్రత్త!",
      matter: "ఈరోజు మీ కుటుంబంలో పెద్దవారిని ఎలెక్ట్రానిక్ వస్తువులనుంచి దూరంగా ఉంచండి ప్రమాదాలు జరిగే అవకాశాలు ఉన్నాయి అప్ప్రమత్తంగా ఉండండి వారి ఆరోగ్యం మీద శ్రెద్ద పెట్టండి శుభం కలుగుతుంది ",
    },
    {
      title: "అందమైన స్త్రీ తో ",
      thumbnail: "ఈరోజు అదృష్టం మీదే! అందమైన స్త్రీ తో",
      matter: "ఈరోజు ఈ మొత్తం ప్రపంచంలో మీరే అదృష్టవంతులు అని మీకు అనిపిస్తుంది ఈరోజు మీరు మీకు నచ్చిన ఇక అందమైన స్త్రీ తో బయటకు వెళ్లి సినిమాలు షికార్లు అని జాలిగా గడుపుతారు",
    },
    {
      title: "స్త్రీ తో మనసులోని మాట",
      thumbnail: "అందమైన స్త్రీ తో మనసులోని మాట చెప్తారు ",
      matter: "ఈరోజు మీరు మీకు నచ్చిన ఒక అందమైన స్త్రీ తో ఎప్పటినుంచో చెప్పాలనుకుంటున్న మీ మనస్సులోని మాట ఈరోజు చెపుతారు మరియు ఇలా చేస్తే ఈరోజు మీరు షాకింగ్ న్యూస్ వింటారు ",
    },
    {
      title: "పెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "పెద్ద శుభవార్తలు + ఒక స్త్రీ పగబట్టి ఇలా చేస్తది",
      matter: "ఈరోజు మీరు పెద్ద శుభవార్తలు వింటారు మరియు ఈరోజు ఒక స్త్రీ పగబట్టి మీ శుభవార్తల మీద ఈర్ష తో నష్టం చెయ్యడానికి ప్రయత్నాలు చేస్తారు కాని మీరు మీ అదృష్టం వల్ల తప్పించుకుంటారు",
    },
    {
      title: "ఒక స్త్రీ తో సరదాగా ఉలా",
      thumbnail: "ఒక స్త్రీ తో సరదాగా ఇలా చేస్తారు...! జాగ్రత్త",
      matter: "ఈరోజు మీరు సరదా కోసం మీ ప్రేయసితో బయటకు పోయి సినిమాలకు రెస్టారెంట్లకు పోయి చివరికి మీరు మీ దగ్గర ఉన్న డబ్బును మొత్తం ఐపోచేస్తారు జాగ్రత్తగా ఉండండి డబ్బును ఈరోజు మీరు ఆదా చేస్తే అవి మీకు రేపు పనికి వస్తాయి",
    },
    {
      title: "స్త్రీ వల్ల ఆనందం",
      thumbnail: "ఒక స్త్రీ వల్ల ఆనందానికి హద్దులు ఉండవు",
      matter: "ఈరోజు మీ జీవితానికి అర్ధమోచ్చే ఒక పెద్ద బంగారు శుభావర్తని మీ జీవిత భాగస్వామి మీకు అందిస్తారు ఈరోజు మీరు ఒక అందమైన స్త్రీ తో జాలిగా గడుపుతారు ఈరోజు ఆ అందమైన స్త్రీ వల్ల ఆకస్మికంగా ధనలాభం పొందే అవకాశం కుడా ఉంది",
    },
    {
      title: "వీరితో గొడవలు జాగ్రత్త",
      thumbnail: "ఈరోజు వీరితో గొడవలు జరుగుతాయి జాగ్రత్త",
      matter: "ఈరోజు మీరు ఎప్పటినుంచో గొడవ పదాలనుకుంటున్న మీ సేత్రువులు మిమ్మల్ని గెలకడంతో మీరు వారితో గొడవ పడొచ్చు కాని గొడవ పరిష్కారం కాదని మీరు తెలుసుకూవాలి కాని గొడవ జరిగితే మాత్రం గెలిసేది మీరే",
    },
    {
      title: "అందమైన స్త్రీ తో ఇలా",
      thumbnail: "ఒక అందమైన స్త్రీ తో సరదాలు + ఆకస్మిక ధనాలభం",
      matter: "ఈరోజు మీరు ఒక అందమైన స్త్రీ తో జాలిగా గడుపుతారు ఈరోజు ఆ అందమైన స్త్రీ వల్ల ఆకస్మికంగా ధనలాభం పొందే అవకాశం కుడా ఉంది",
    },
    {
      title: "స్త్రీ వల్ల నష్టాలు",
      thumbnail: "ఓక స్త్రీ వల్ల భారీగా నష్టపోతారు జాగ్రత్త!",
      matter: "ఈరోజు మీరు మీ జీవిత భాగస్వామి చేసిన ఒక తప్పు వల్ల బిజినెస్ లో భారి నష్టాలను చూస్తారు దీనివల్ల మీరు వారిమీద కోప్పడుతారు ఆఖరికి దీంట్లో వాళ్ళు కావాలని చెయ్యలేదని తెలుసుకొని క్షమిస్తారు",
    },
    {
      title: "ఒక స్త్రీ పగబట్టి ఇలా",
      thumbnail: "ఒక స్త్రీ పగబట్టి ఈవిధంగా చేస్తుంది",
      matter: "ఈరోజు మీ మీద ఎప్పటినుంచో కక్ష పెట్టుకున్న ఒక స్త్రీ ఈరోజు పగతీర్చుకోవడానికి మిమ్మల్ని మానసికంగా హాని చేస్తారు అది కుడా విఫలం అయితే శారీరికంగా హాని చేస్తారు జాగ్రత్తగా ఉండండి ",
    },
    {
      title: "ఒక స్త్రీ తో గొడవలు",
      thumbnail: "ఈరోజు ఒక స్త్రీ తో గొడవలు జరుగుతాయి",
      matter: "ఈరోజు మీకు ఒక స్త్రీ తో గొడవలు జరుగుతాయి మీరు ఎంత ఒద్దు అనుకున్న గొడవలు తప్పవు దీనిని ద్రుష్టిలో పెట్టుకొని మీరు గొడవని ఆపలేరు అయితే మీరు కోపంలో మీరు చెప్పే మాటలపై మీరు తరువాత ఆందోళన పాడుతారు జాగ్రత్త key",
    },
    {
      title: "స్త్రీ తో మనసులోని మాట",
      thumbnail: "ఒక స్త్రీ తో మనసులోని విషయం మాట్లాడతారు",
      matter: "ఈరోజు మీరు ఒక స్త్రీ తో మీ మనసులోని మాట మాట్లాడుతారు మీరు వారిని ఇష్టపడుతున్నారని వారితో చెపుతారు ఈవిషయం చెప్పినతరువాత మీకు ఒక షాకింగ్ వార్త అందుతుంది జాలిగా గడుపుతారు",
    },
    {
      title: "జీవితంలో ఒక స్త్రీ ఎంట్రీ",
      thumbnail: "మీ జీవితంలో ఒక స్త్రీ ఎంట్రీ .. అన్ని శుభవర్తలే",
      matter: "ఈరోజు మీ జీవితంలో ఒక కొత్త స్త్రీ వస్తుంది తను చాల బుద్ధిమంతురాలు మరియు అందానికి యువరాణి మీకు ఆ స్త్రీ చాల నచ్చుతుంది మరియు మీరు ఆ స్త్రీ తో స్నేహం కూడా చెయ్యడానికి ప్రయత్నాలు చేస్తారు",
    },
    {
      title: "ఒక స్త్రీ వల్ల మోసపోతారు",
      thumbnail: "ఒక స్త్రీ ని గుడ్డిగా నమ్మవద్దు! మీరు మోసపోవచ్చు",
      matter: "మీరు ప్రాణంగా ప్రేమించిన స్త్రీ ఈరోజు మిమ్మల్ని విదిచిపోవడంతో మీరు తట్టుకోలేరు మీరు డిప్రెషన్ లో కూడా పోవచ్చు కాని అదే సమయంలో మీ తల్లితండ్రులవల్ల మీకు జీవితం అంటే ఒక అర్ధం ఒస్తుంది వారి కోసమే బ్రతుకుతారు",
    },
    
    {
      title: "స్త్రీ వల్ల బంగారు శుభవార్త",
      thumbnail: "ఒక స్త్రీ వల్ల బంగారు శుభవార్తలు + ఇలా చేయకండి",
      matter: "ఈరోజు మీ జీవితానికి అర్ధమోచ్చే ఒక పెద్ద బంగారు శుభావర్తని మీ జీవిత భాగస్వామి మీకు అందిస్తారు ఆ శుభవార్త మీ జీవితాన్నే మార్చేస్తుంది కాబట్టి ఈరోజు మీరు ఆనందంలో మీరు ఎం చేయ్యలనుకున్తున్నారో ఆ పనులన్నీ చేసేస్తారు",
    },
  
    {
      title: "ప్రియమైన స్త్రీ ని కలుస్తారు",
      thumbnail: "ఒక ప్రియమైన స్త్రీ ని కలుస్తారు + ఆకస్మిక ధనాలభం",
      matter: "ఈరోజు మీరు మీకు ఏంటో ప్రియమైన స్త్రీ ని కలుస్తారు కలిసి సరదాగా మాట్లాడుకుంటారు ఇంకా ఈరోజు చివరిలో మీకు ఆకస్మిక ధనలాభం కలుగడంతో మీ ఆనందానికి హద్దులు ఉండవు ఆనందంలో పార్టి కూడా చేసుకుంటారు",
    },
    {
      title: "2 పెద్ద శుభవార్తలు",
      thumbnail: "2 పెద్ద శుభవార్తలు + ఈవిషయంలో జాగ్రత్త!",
      matter: "ఈరోజు మీరు ఎప్పటినుండో ఎదురుచూస్తున్న శుభవార్త వింటారు మరియు మీరు అనుకోకుండా ఒక స్త్రీ వల్ల ఇంకొక శుభవార్తలు అందుకుంటారు సంతోషంలో మీరు మద్యం సేవించవచ్చు ఇలా చెయ్యకండి జాగ్రత్త",
    },
    {
      title: "ఒక స్త్రీ వల్ల గొడవలు",
      thumbnail: "ఒక స్త్రీ వల్ల గొడవలు + ఆకస్మిక సంఘటనలు",
      matter: "ఈరోజు మీరు మీకు నచ్చిన ఒక స్త్రీ కోసం వేరే వాళ్లతో గొడవలలో పలుగోనతారు కాని ఆకస్మికంగా ఆ గొడవ చాల పెద్దగా కావడంతో మీరు గొడవని ముగించడానికి ప్రయత్స్తారు కాని మీరు జాగ్రత్తగా ఉండాలి దెబ్బలు కూడా తగలోచ్చు",
    },
    {
      title: "స్త్రీ వల్ల ప్రమాదాలు",
      thumbnail: "ఒక స్త్రీ వల్ల ప్రమాదాలు ముంచుకోస్తున్నాయి జాగ్రత్త",
      matter: "ఈరోజు మీకు ఒక స్త్రీ వల్ల ప్రమాదాలు మున్చుకోస్తునాయి కాబట్టి మీరు అప్ప్రమత్తంగా ఉండండి వాహనాలు నడిపెటప్పుడు ఒక స్త్రీ ని ఆకర్షించడానికి మీరు మీ వాహనాన్ని అతివేగంలో నడుపుతారు దీనివల్ల ప్రమాదం కూడా జరుగవచ్చు",
    },
    {
      title: "ఒక స్త్రీ నష్టం చేస్తారు",
      thumbnail: "ఒక స్త్రీ ఈవిధంగా నష్టం చేస్తున్నారు + ఇలా చెయ్యండి",
      matter: "మీరు మిమ్మల్ని ప్రేమిస్తున్నారు అనుకుంటున్నా స్త్రీ మీదగ్గర మీ డబ్బుకోసమే ఉన్నారు . ఈరోజు బయట ఆ స్త్రీ మిమ్మల్ని షాపింగ్ కు తెసుకేల్లి మీ లక్షలు నష్టం చేస్తారు జాగ్రత్త",
    },
    {
      title: "మంచి శుభవార్తలు ఉన్నాయి",
      thumbnail: "మంచి శుభవార్తలు + ఈవిషయాల్లో జాగ్రత్త",
      matter: "ఈరోజు మీ జీవితానికి అర్ధమోచ్చే ఒక పెద్ద బంగారు శుభావర్తని మీ జీవిత భాగస్వామి మీకు అందిస్తారు ఆ శుభవార్త మీ జీవితాన్నే మార్చేస్తుంది  సంతోషంలో మీరు మద్యం సేవించవచ్చు ఇలా చెయ్యకండి జాగ్రత్త",
    },
    {
      title: "ఒక స్త్రీ తో గొడవ",
      thumbnail: "ఈరోజు ఒక స్త్రీ తో గొడవ జరుగుతుంది జాగ్రత్త",
      matter: "ఈరోజు మీకు ఒక స్త్రీ తో ఆస్తి మరియు దనం విషయంలో గొడవలు జరుగుతాయి కాని గొడవలో మీరు నూరు జారి చెప్పకుదని మాటలు చెపుతారు గొడవ తరువాత మీరు ఎందుకుచేప్పరని బాధపడి ఆ స్త్రీ తో క్షమాపణ అడుగుతారు దీని బదులు మీరు ముందే నూరు అదుపులో పెట్టుకోండి",
    },
    {
      title: "సేత్రువులు ఇలా చేస్తారు",
      thumbnail: "రహస్య సెత్రువులు ఈవిధంగా చేస్తున్నారు జాగ్రత్త",
      matter: "ఈరోజు రహస్య సేత్రువులు మీకు తెలియకుండానె మిమ్మల్ని ఆర్ధికంగా మరియు మీ కుతుమ్బంన్ని హాని చెయ్యడానికి చెయ్యని ప్రయత్నలుండవు కాబట్టి మీరు ముందే జాగ్రత్తగా ఉండండి ఎవ్వరిని గుడ్డిగా నమ్మవద్దు మోసపోవచ్చు",
    },
    {
      title: "అమ్మాయి కాళ్ళ వద్దకు",
      thumbnail: "అందమైన అమ్మాయి మీ కాళ్ళ వద్దకు వస్తుంది",
      matter: "ఈరోజు మీ స్వప్న సుందరి మీ ఉన్నత చదువులు మరియు వ్యాపారంలో అభివృద్ధి చూసి ఒచ్చి మీ కాళ్ళ వద్దకు పడుతది . ఈరోజు మీరు పడ్డ కష్టం వ్యర్ధం కాలేదని మీరు తెలుసుకుంటారు వ్యాపారం మరియు చదువులూ ఇంకా ముందుకు సాగాలని మీకు మోటివేషన్ దొరుకుతుంది",
    },
    {
      title: "స్త్రీ వల్ల పెద్ద శుభవార్త",
      thumbnail: "ఒక స్త్రీ వల్ల పెద్ద శుభవార్త + ఆకస్మిక ధనాలభం",
      matter: "ఈరోజు మీకు ఒక స్త్రీ వల్ల పెద్ద శుభవార్త అందుతుంది మరియు వార్త వినంగానే మీ మడ్ ఒక్కసారిగా మంచిగా మారడంతో మీరు మీ పార్టనర్ తో కలిసి సినిమాకు పోతారు మరియు రాత్రి సమయంలో మీకు ధనలాభం కలుగుతుంది ",
    },
    {
      title: "స్త్రీ తో సరదాగా ఉలా",
      thumbnail: "ఒక స్త్రీ తో కలిసి సరదాగా చేసే పనులు తెలిస్తే షాక్ !",
      matter: "ఈరోజు మీరు టైం పాస్ చెయ్యడానికి ఒక స్త్రీ తో కలిసి ఒక మంచి రెస్టారెంట్ కు వెళ్లి భూజనం చెయ్యడం ఇష్టపడుతారు మరియు సినిమాకు పోయి జాలిగా గడుపుతారు ఈరోజు మీకు ఎప్పటికి గుర్తుండిపోయేలా గడుపుతారు",
    },
    {
      title: "సెత్రువులు ఇలా చేస్తారు",
      thumbnail: "పెద్ద శుభవార్తలు + సెత్రువులు ఇలా చేస్తారు",
      matter: "ఈరోజు మీకు చాల పెద్ద శుభవార్తలు అందుతాయి దీనితో మీరు చాల సంతోషంగా ఉంటారు మీ సంతోషం మీ సేత్రువులు చూడలేరు వారు మీకు ఎదో ఒక హాని చెయ్యాలని చూస్తారు కాని రోజు ఆకరికి ఏమి చెయ్యలేక అలిసి వెళ్ళిపోతారు",
    },
    {
      title: "ప్రాణగండం ఉంది జాగ్రత్త",
      thumbnail: "వీరితో గొడవలు + ప్రాణగండం ఉంది జాగ్రత్త",
      matter: "ఈరోజు మీకు మీ సేత్రువులతో గొడవలు జరుగుతాయి మరియు మీరు ఈరోజు మీ కోపాన్ని అడుపులూ ఉంచాలి లేదంటే మీకు గొడవలో తీవ్ర గాయలవల్ల ప్రాణగండం ఉంది దేవుడ్ని స్మరించండి గొడవ దేనికి కూడా సమాధానం కాదు అని మీరు తెలుసుకోవాలి",
    },
    {
      title: "స్త్రీ వల్ల పండగలు",
      thumbnail: "ఒక స్త్రీ వల్ల ఈరోజు పండుగలా ఉంటుంది",
      matter: "ఈరోజు ఒక స్త్రీ వల్ల వేడుకలా ఉంటుంది మీకు నచ్చిన స్త్రీ తో ఈరోజు మీరు బయటకు పోతారు మరియు వారితో సినిమాలకు పోయి జాలిగా గడుపుతారు ఆ స్త్రీ వల్ల రోజు చివర్లో ధనాలభం కూడా కావొచ్చు శుభం కలుగుతుంది ",
    },
    {
      title: "స్త్రీ మోసం చేస్తుంది",
      thumbnail: "ఒక స్త్రీ ఇలా మోసం చేస్తది + ఇలా చెయ్యండి",
      matter: "ఈరోజు మీరు గుడ్డిగా నమ్మిన ఒక స్త్రీ మిమ్మల్ని మోసం చేస్తది దేనిని మీరు తట్టుకోలేరు కోపంలూ మీరు డిప్రెషన్ లో కూడా పోవచ్చు కాని మీ తల్లి తండ్రులకు ఈ విషయం తెలిసి వారు మిమ్మల్ని దీని నుండి బయటకు తెస్తారు",
    },
    {
      title: "స్త్రీ మీ కాళ్ళ వద్దకు",
      thumbnail: "ఒద్దు అన్న స్త్రీ మీ కాళ్ళ వద్దకు వస్తుంది",
      matter: "మీ దగ్గర డబ్బులు లేవు మీరు బిచ్చగాల్లు అని మిమ్మల్ని వదిలి పాయిన ఆ స్త్రీ ఈరోజు మీ అభివృద్ధి మరియు మీ ఉన్నత చదువులు చూసి మల్లి మీ కాళ్ళ వద్దకు ఒస్తుంది మల్లి తనను దగ్గరుకు తెసుకున్తారా? కామెంట్ లో చెప్పండి  ",
    },
  
    {
      title: "పెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "పెద్ద శుభవార్తలు ఉన్నాయి + స్త్రీ వల్ల పండుగ",
      matter: "ఈరోజు మీకోసం పెద్ద శుభవార్తలు ఎదురుచుస్తునాయి మీరు పడ్డ కష్టానికి ప్రతిఫలం ఈరోజు మీకు శుభవార్త అందుతుంది మరియు మీ అభివృద్ది ని చూసి ",
    },
    {
      title: "స్త్రీ వల్ల ధనలాభం",
      thumbnail: "అందమైన స్త్రీ వల్ల ధనలాభం + పెద్ద శుభవార్త",
      matter: "ఈరోజు ఒక అందమైన స్త్రీ వల్ల ధనాలభం కలుగుతుంది ఇంకా రోజు మధ్యలో మీకు పెద్ద శుభవార్త అందుతుంది మీకు ఆ శుభవార్త అందుతదని మీరు కలలో కూడా ఉహించి ఉండరు కాని మీ అదృష్టం వల్ల మీకు ఆ శుభవార్తః అందుతుంది ",
    },
    {
      title: "కుటుంబంలో వీరికి ప్రాణగండం",
      thumbnail: "మీ కుటుంబంలో వీరికి ఇలా ప్రాణగండం జాగ్రత్త",
      matter: "ఈరోజు మీ కుటుంబంలో వ్రుదుల అనారోగ్యం వల్ల వారికి ప్రాణగండం ఉంది కాబట్టి పుష్టిక ఆహారాన్ని సేవించాలి మరియు దేవుడ్ని స్మరించాలి మీరు చేసిన పుణ్యకార్యాల వల్ల దేవుడు మీ గండాన్ని తొలగిస్తారు శుభం జరుగుతుంది",
    },
    {
      title: "స్త్రీ వల్ల శుభవార్తలు",
      thumbnail: "మీరు ఊహించని స్త్రీ శుభవార్తలు చెప్తారు ",
      matter: "ఈరోజు మీరు కలలో కూడా ఉహించని ఒక అందమైన స్త్రీ నోటితో మీరు శుభావర్తలు వింటారు ఈవార్త వినగానే మీ మనస్సు గాలిలో తేలినట్లు అయిపోతుంది మీరు మీ బంధువులందరితో ఈ వార్తని పంచుకుంటారు జాలిగా గడుపుతారు",
    },
    {
      title: "స్త్రీ మీ కాళ్ళ వద్దకు",
      thumbnail: "మీరు కావాలనుకున్న స్త్రీ మీ కాళ్ళ వద్దకు",
      matter: "ఈరోజు మీరు ఎప్పటినున్డూ కోరుకుంటున్న స్త్రీ మీ అదృష్టం కొద్ది మీ దగ్గర సహాయం కోరుతూ వస్తుంది మీరు కాని తనకు సహాయం చేస్తే మాత్రం మీ ఇద్దరి మధ్య బంధం ఇంకా గట్టిపడుతుంది కాని ఆ సహాయం చెయ్యడానికి కొద్దిగా శ్రీమ పడాల్సి ఉంటది",
    },
  
    {
      title: "పెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "పెద్ద శుభవార్తలు + ఒక స్త్రీ ఇలా చేస్తుంది",
      matter: "ఈరోజు మీకు మీరు ఎన్నో సంవచరాల నుండి ఎదురుచూస్తున్న శుభవార్త ఒకటి అందడం వల్ల మీరు సంతోషంగా ఎగిరి గంతులేస్తారు మరియు మీ మిత్రులకి పార్టి ఇస్తారు మొత్తానికి ఈరోజు జాలిగా గడుపుతారు కాని ఆ శుభవార్త మీ జీవితాన్ని మార్చేస్తుంది",
    },
    {
      title: "ఒక స్త్రీ మోసం చేస్తారు",
      thumbnail: "ఒక స్త్రీ మిమ్మల్ని ఈవిధంగా మోసం చేస్తున్నారు",
      matter: "ఈరోజు మీరు కళ్ళు ముసి నమ్మిన ఒక స్త్రీ మిమ్మల్ని వెంనేపోటు పొడుస్తారు మిమ్మల్ని కాదని మోసం చేస్తారు దీనితో మీరు చాల బాధ పాడుతారు కాని మీ తల్లితండ్రులు మీకు సపోర్టుగా ఉంటారు దీనివల్ల వాళ్ళని మించిన వారు లేరని మీకు తెలుస్తుంది",
    },
    {
      title: "స్త్రీ తో మనసులోని మాట",
      thumbnail: "నచ్చిన స్త్రీ తో మీ మనసులోని మాట చెపుతారు",
      matter: "మీరు ప్రతిరోజూ కలలో చూసే మీకు నచ్చిన ఒక స్త్రీ తో ఈరోజు మీరు మీ మనస్సులోని మాట చెపుదామని మీరు ఫిక్స్ అవుతారు ఇలా చెయ్యడానికి ఇదే సరైన సమయం శుభవార్తలు కూడా అందవచ్చు ఏది జరిగినా మన మంచికే అని గుర్తుపెట్టుకోండి ",
    },
    {
      title: "ఎవరంలో ఇలా జరిగిద్ది",
      thumbnail: "ఈవారంలో ఏం జరుగుతుందో తెలిస్తే షాక్",
      matter: "ఈవారంలో మీ వృత్తికి మీరే రాజు మీరే మంత్రి బిజినెస్ లో మిమ్మల్ని మించినోల్లు ఎవ్వరు ఉండరు కొత్త స్త్రీ తో పరిచయాలు జరుగుతాయి మరియు ధనాలభం కలుగుతుంది",
    },
    {
      title: "వీరే మీ సెత్రువులు",
      thumbnail: "వీరే మీ సెత్రువులు + ఒక స్త్రీ తో జాగ్రత్త",
      matter: "ఈరోజు మీరు మీ సేత్రువుల పేర్లు తెలుసుకుంటారు మరియు ఒక స్త్రీ మీ రహస్య సేత్రువు మీకు ఇప్పటివరుకు కలిగిన హాని మొత్తం మీ సేత్రువులనుంచే అని ఈరోజు మీకు తెలిసి వస్తుంది అప్ప్రమత్తంగా ఉండండి",
    },
    {
      title: "స్త్రీ కాళ్ళ వద్దకు",
      thumbnail: "మీరు ఒద్దు అని విడిచిపోయిన స్త్రీ కాళ్ళ వద్దకు",
      matter: "మీరు డబ్బు లేనివారు అని మిల్లల్ని చులకనగా చుసిన ఒక స్త్రీ ఈరోజు మీ వ్యాపారం మరియు అభివృద్ధి చూసి మల్లి మీ కాళ్ళ వద్దకు వస్తుంది కాని వచ్చిన తరువాత మీరు మీ దృష్టి ని అటు మల్లిన్చాకండి మీ వ్యాపారాన్ని ఇంకా పెంచుతూనే ఉండాలి",
    },
    {
      title: "ఒక స్త్రీ వల్ల శుభవార్తలు",
      thumbnail: "ఒక స్త్రీ వల్ల అతిపెద్ద శుభవార్తలు తెలిస్తే షాక్",
      matter: "ఈరోజు మీ జీవితంలూ ఎప్పుడు అందని శుభవార్తలు ఈరోజు మీకు ఒక స్త్రీ వల్ల అందుతాయి వాటిని విని మీరు ఎగిరి గంతులేస్తారు మీ ఆనందానికి హద్దులు ఉండవు ఆ శుభవార్తలు మీ జీవితాన్నే మార్చేస్తాయి రెడీగా ఉండండి ",
    },
    {
      title: "ఒక స్త్రీ పగబట్టి ఇలా",
      thumbnail: "ఒక స్త్రీ పగబట్టి చేసే ప్రయత్నాలు చుస్తే చాక్",
      matter: "ఈరోజు మీపైన ఎంతోకాలంగా కక్షగుడి మీ ప్రానసేత్రువు ఒక స్త్రీ మిమ్మల్ని అన్ని విధాలుగా హాని చెయ్యడానికి ప్రయత్నాలు చేస్తారు కాని మీరు చాలా ధైర్యవంతులు కావడంతో మీరు వాటన్నిటినుంచి సులభంగా తప్పించుకుంటారు ",
    },
    {
      title: "పెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "పెద్ద శుభవార్తలు ఉన్నాయి వీరు నక్కతోకతొక్కారు",
      matter: "ఈరోజు మీరునక్కతోకతొక్కారు మీకు ఈరోజు పెద్ద శుభవార్తలు అందుతాయి వాటిని విని మీ మనసు గాలిలో తేలడం మాత్రం ఖాయం ఈరోజు మీకు శుభవార్తలు విన్న తరువాత ఆనదందానికి హద్దులు ఉండవు ఎగిరి గంతులు వేస్తారు",
    },
    {
      title: "ఒక స్త్రీ వల్ల ప్రాణగండం",
      thumbnail: "ఒక స్త్రీ వల్ల ప్రాణగండం + ఈవిషయాల్లో జాగ్రత్త",
      matter: "ఈరోజు మీకు ఒక స్త్రీ వల్ల ప్రాణగండం ఉంది ఎలా అంటే ఈరోజు మీరు ఒక స్త్రీ ని ఆకట్టుకోవడానికి వాహనాన్ని అతివేగంతో నడుపడంతో మీకు ఆపదలు జరిగే అవకాశం ఉంది జాగ్రత్తగా ఉండండి మరియు వాహనాన్ని ఇంటిదగ్గర మీకోసం ఎదురుచూస్తున్నా వాళ్ళ కోసం నెమ్మదిగా తోలండి",
    },
    {
      title: "స్త్రీ తో ఇలా చేస్తారు",
      thumbnail: "శుభవార్త తెలిస్తే ఎగిరి గంటెస్తారు ఒక స్త్రీ తో",
      matter: "ఈరోజు మీ రోజువారి బ్రతుకులూ ఒక్కసారిగా పెద్ద శుభవార్త ఒకటి అందడంవల్ల మీరు మీ ప్రేయసితో కలిసి ఎంజాయ్ చెయ్యడానికి బయటకు సినిమాలు అని షికార్లకు పోతారు ఈరోజు మీ జీవితంలో ఎప్పటికి గుర్తుండిపోతుంది",
    },
    {
      title: "స్త్రే తో సరదాగా ఉలా",
      thumbnail: "అందమైన స్త్రీ తో సరదా కోసం ఇలా చేస్తారు ",
      matter: "ఈరోజు మీకు చాల అదృష్టమైన రోజు మీరు కలలో కూడా ఉహించని అందమైన స్త్రీ తో ఈరోజు మీరు సరదాగా షికారుకు వెళ్లి జాలిగా గడుపుతారు మరియు మీ ఇద్దరి బంధం దీనివల్ల ఇంకా ద్రుదపడుతుంది",
    },
    {
      title: "ఒక స్త్రీ కాళ్ళ దగ్గర",
      thumbnail: "శుభవార్త ! ఒక స్త్రీ ఈరోజు మీ కాళ్ళ దగ్గర",
      matter: "ఈరోజు శుభవార్త అందుతుంది మీరు పేదవాళ్ళు అని మిమ్మల్ని వదిలిపొఇన ఒక స్త్రీ ఈరోజు మీ అభివృద్ధి మరియు దానం చూసి మల్లి మీ కాళ్ళ దగ్గర రావడం ఖాయం",
    },
    {
      title: "స్త్రీ వల్ల గుండెలుపగిలే వార్త",
      thumbnail: "ఒక స్త్రీ వల్ల గుండెలు పగిలే వార్తలు జాగ్రత్త",
      matter: "ఈరోజు మీరు ఎంతగా నమ్మిన స్త్రీ తరుపునుంచి మీకు గుండెలు పగిలే వార్తలు వింటారు ఆ వార్తలు ఏంటంటే వారి ఆరోగ్యం అస్సలు బాగాలేదు మరియు ఆసుపత్రిలూ వారికి చాల ఖర్చులు ఉన్నాయి ఇది విన్న తరువాత మీరు వారిని ఆర్ధికంగా సహాయం చేస్తారు",
    },
    {
      title: "ఒక స్త్రీ మిమ్మల్ని హాని",
      thumbnail: "ఒక స్త్రీ ఇలా హాని చేస్తుంది ఇప్పుడే తెలుసుకోండి",
      matter: "ఈరోజు మీకు ఒక స్త్రీ పగబట్టి శారీరికంగా హాని చెయ్యడానికి చెయ్యని ప్రయత్నాలు ఉండవు కావున మీరు బయటకు వెళ్ళేటప్పుడు దేవుడ్ని స్మరించి జాగ్రత్తగా వెళ్ళండి మీకు ఎలాంటి హాని కలగదు",
    },
    {
      title: "మీ మీద స్త్రీ దృష్టి",
      thumbnail: "మీ మీద ఒక స్త్రీ చేసుదృష్టి జాగ్రత్త",
      matter: "మీ మీద ఒక స్త్రీ చేడుద్రుష్టి ఈలోకంలో చేడుద్రుష్టి అనేది ఒక రాజుని కూడా బిచ్చగాడు లా చెయ్యొచ్చు మీ సంపద మీద ఒక స్త్రీ ఏడుస్తుంది ఇది మీరు జాగ్రత్తగా ఉండాల్సిన సమయం అప్ప్రమత్తంగా ఉండండి",
    },
    {
      title: "ఒక స్త్రీ వల్ల శుభవార్తలు",
      thumbnail: "అన్ని శుభవార్తలే మీ జీవితంలో ఒక స్త్రీ ఎంట్రీ",
      matter: "ఎప్పటినుండో బ్రేక్ లో ఉన్న మీ జీవితం ఒక స్త్రీ రావడంతో దూసుకుపోతుంది , అవును ఈరోజు మీకు అన్ని శుభవార్తలు అందుతాయి మరియు మీ జీవితంలూ ఒక స్త్రీ ఎంట్రీ ఇస్తుంది ",
    },
    {
      title: "స్త్రీ వల్ల పెద్ద శుభవార్తలు",
      thumbnail: "ఒక స్త్రీ వల్ల 3 పెద్ద శుభవార్తలు + ఇలా చెయ్యకండి",
      matter: "ఈరోజు మీరు ఒక స్త్రీ వల్ల మూడు పెద్ద శుభావర్హలు అందుకుంటారు మరియు శుభవార్తలు అందుకున్న వెంటనే మీరు ఆ విషయాలను మీ తల్లి తండ్రులకు ముందుగా చెపుతారు ఎందుకంటే ఈలోకంలో వారిని మించి మీకు ఎవ్వరు లేరు",
    },
  ];
  const today = new Date();
  let tomorrow = new Date(today);
  tomorrow.setDate(tomorrow.getDate() + 2);

  let dayOfWeekIndex = tomorrow.getDay();
  let dayOfWeekArray = [
    "sunday",
    "monday",
    "tuesday",
    "wednesday",
    "thursday",
    "friday",
    "saturday"
  ];

  

  let monthIndex = tomorrow.getMonth();
  let monthArray = [
    "january",
    "february",
    "march",
    "april",
    "may",
    "june",
    "july",
    "august",
    "september",
    "october",
    "november",
    "december",
  ];
let count = Number(localStorage.getItem("count") )|| 23;
  let dayname = dayOfWeekArray[dayOfWeekIndex];
  let monthname = monthArray[monthIndex];
  let datenumber = tomorrow.getDate().toString().padStart(2, "0");

  const textInput = document.getElementById("text-input");
  const textInput2 = document.getElementById("text-input2");
  const fontSelect = document.getElementById("text-input");
  const colorSelect = document.getElementById("color-select");
  const sizeRange1 = document.getElementById("size-range-1");
  const sizeRange2 = document.getElementById("size-range-2");
  const positionRangeX = document.getElementById("position-range-x");
  const previewContainer = document.getElementById("preview-container");
  const previewCanvas = document.getElementById("preview-canvas");
  const downloadButton = document.getElementById("download-button");
textInput2.value = datenumber;

const DailyOnceSet = function(){

  let currentDate = new Date();
  let currentDay = currentDate.getDate();
    localStorage.setItem('thumbdate', currentDay);
  }
  const Shiftdown = function () {
    let today = new Date().getDate();
    let yesterday = localStorage.getItem('thumbdate') || "";
    if(today!=yesterday){
      if(Number(localStorage.getItem("count"))+1>daily.length){
        localStorage.setItem("count",0);
      }
      else{
        
      localStorage.setItem("count",++count);
      localStorage.setItem("var4",daily[count].thumbnail);
      localStorage.setItem("var3", daily[count-1].thumbnail)
      localStorage.setItem("var2", daily[count-2].thumbnail)
      localStorage.setItem("var1", daily[count-3].thumbnail)



      }
    }  
  }

Shiftdown();
DailyOnceSet();

let var4 = localStorage.getItem("var4");
let var3;
let var2;
let var1;
if (count ==0){
  localStorage.setItem("var3", daily[67].thumbnail)
  var3 = localStorage.getItem("var3");
  localStorage.setItem("var2", daily[66].thumbnail)
  var2 = localStorage.getItem("var2");
  localStorage.setItem("var1", daily[65].thumbnail)
  var1 = localStorage.getItem("var1");
}
else if(count ==1){
  localStorage.setItem("var3", daily[0].thumbnail)
  var3 = localStorage.getItem("var3");
  localStorage.setItem("var2", daily[67].thumbnail)
  var2 = localStorage.getItem("var2");
  localStorage.setItem("var1", daily[66].thumbnail)
  var1 = localStorage.getItem("var1");
}
else if(count ==2){
  localStorage.setItem("var3", daily[1].thumbnail)
  var3 = localStorage.getItem("var3");
  localStorage.setItem("var2", daily[0].thumbnail)
  var2 = localStorage.getItem("var2");
  localStorage.setItem("var1", daily[67].thumbnail)
  var1 = localStorage.getItem("var1");
}
else{
  var3 = localStorage.getItem("var3");
  var2 = localStorage.getItem("var2");
  var1 = localStorage.getItem("var1");
}
document.getElementById("var1").value = var1;
document.getElementById("var2").value = var2;
document.getElementById("var3").value = var3;
document.getElementById("var4").value = var4;

  let currentImage = null;
  let previewImage = null;
  let fontSize1;
  // Load default image
  const defaultImage = new Image();
  //!

  textInput.value = var3;
  defaultImage.src  = "dailyastrogurujimesha.jpg" 

  

 
  
  
  
  
  defaultImage.onload = () => {
    currentImage = defaultImage;
    updatePreview();
  };

  textInput.addEventListener("input", () => {
    updatePreview();
  });

  textInput2.addEventListener("input", () => {
    updatePreview();
  });

  fontSelect.addEventListener("input", () => {
    updatePreview();
  });

  colorSelect.addEventListener("input", () => {
    updatePreview();
  });

  sizeRange1.addEventListener("input", () => {
    updatePreview();
  });

  sizeRange2.addEventListener("input", () => {
    updatePreview();
  });

  positionRangeX.addEventListener("input", () => {
    updatePreview();
  });

  function updatePreview() {
    if (!currentImage) return;

    const text = textInput.value;
    const text2 = textInput2.value;
    const color = "white"; // Set text2 color to white
    const canvas = document.createElement("canvas");
    const ctx = canvas.getContext("2d");

    const image = currentImage;

    canvas.width = image.width;
    canvas.height = image.height;

    ctx.drawImage(image, 0, 0);

    const positionX1 = 10; // Fixed X-coordinate for text1 (leftmost position)
    const positionY1 = 1730; // Fixed Y-coordinate for text1 (bottom - 600 pixels up)

    fontSize1 = 250; // Initial font size for text1
    ctx.font = `${fontSize1}px 'Anek Telugu'`;
    let textWidth = ctx.measureText(text).width;

    // Decrease font size until the text fits within the canvas width
    while (textWidth > canvas.width - 1) {
      fontSize1 -= 1;
      ctx.font = `${fontSize1}px 'Anek Telugu'`;
      textWidth = ctx.measureText(text).width;
    }

    let stretchRatio1;
    // Calculate vertical stretch factor for text1
    if (document.querySelector("#text-input").value.length > 48) {
      const originalHeight1 = fontSize1;
      const targetHeight1 = originalHeight1 + 100; // Vertical stretch factor, adjust as needed
      stretchRatio1 = targetHeight1 / originalHeight1;
    } else if (document.querySelector("#text-input").value.length < 30) {
      const originalHeight1 = fontSize1;
      const targetHeight1 = originalHeight1+15; // Vertical stretch factor, adjust as needed
      stretchRatio1 = targetHeight1 / originalHeight1;
    } else if (document.querySelector("#text-input").value.length > 40) {
      const originalHeight1 = fontSize1;
      const targetHeight1 = originalHeight1 + 40; // Vertical stretch factor, adjust as needed
      stretchRatio1 = targetHeight1 / originalHeight1;
    } else {
      const originalHeight1 = fontSize1;
      const targetHeight1 = originalHeight1 + 30; // Vertical stretch factor, adjust as needed
      stretchRatio1 = targetHeight1 / originalHeight1;
    }
    ctx.strokeStyle = "black";
ctx.lineWidth = 10;
ctx.lineJoin = "round"; // Use round corners for the stroke
    ctx.save();
    ctx.translate(positionX1, positionY1);
    ctx.scale(1, stretchRatio1);
    ctx.fillStyle = color;
ctx.strokeText(text, 0, 0);
    ctx.fillText(text, 0, 0);
    ctx.restore();
   const fixedpos = 2400;
      const fixedPositionY = 830; // Fixed position for text2
      let size2 = 620; // Get the value of sizeRange2
      
      // Calculate the desired height increase factor
      const heightIncreaseFactor = 40; // You can adjust this value as needed
      
      // Calculate the transformation matrix for vertical scaling
      const scaleX = 1;
      const scaleY = 1 + heightIncreaseFactor / 100;
      
      ctx.save(); // Save the current state of the canvas
      
      // Apply the vertical scaling transformation
      ctx.scale(scaleX, scaleY);
      
      ctx.font = `${size2}px 'Archivo Black', sans-serif`;
      ctx.fillStyle = "white"; // Set text2 color to white
      
      // Add border to text2
      ctx.lineWidth = 40;
      ctx.strokeText(text2, fixedpos, fixedPositionY);
      ctx.fillText(text2, fixedpos, fixedPositionY);
      
      ctx.restore(); // Restore the saved state of the canvas
      
      let month = monthname;
      let day = dayname;
      
      // Add a new element (PNG) in the middle of the canvas
      let middleX;
      let middleY;
      const pngElement = new Image();
      pngElement.src = `${month}.png`;
      
    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1700;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 4000; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }
    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1800;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =2050;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =2050;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =2050;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 4150; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =2090;
      middleY =780;
    pngElement.onload = () => {
      const pngWidth = 3250; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1890;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =2090;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 3000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1900;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1950;
      middleY =820;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2200; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1900;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3000; // Width of the PNG element
      const pngHeight =2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1850;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1900;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =2050;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =2050;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("vruschika")){
     middleX =2100;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =2090;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1950;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2200; // Width of the PNG element
      const pngHeight = 2100; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1900;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =2050;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2100; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1980;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1950;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2400; // Width of the PNG element
      const pngHeight =1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }






    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1830;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =2100;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =2050;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("tula")){
     middleX =2100;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =2090;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1920;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2100; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1900;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =2000;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1900;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1880;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }





    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1830;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =2100;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =2050;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("kumbha")){
     middleX =2100;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =2090;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1920;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2300; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1900;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1900;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1880;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }



    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1830;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =2000;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =2050;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("midhuna")){
     middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 3600; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =2090;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1870;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2300; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1900;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1900;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1880;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }



    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1830;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =2100;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =2050;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("makara")){
     middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 3600; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =2090;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1870;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1900;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1900;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1880;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }








    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1830;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =2100;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =2050;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("dhanussu")){
     middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 3600; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =2090;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1870;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1900;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1920;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1880;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }



    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1720;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1850;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2950; // Width of the PNG element
      const pngHeight =1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =2050;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 3400; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =2050;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("vrushabha")){
     middleX =2100;
      middleY =910;
    pngElement.onload = () => {
      const pngWidth = 3750; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =2090;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1890;
      middleY =1050;
    pngElement.onload = () => {
      const pngWidth = 2400; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =2090;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1900;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1990;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 2400; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1890;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight =2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1870;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 2700; // Width of the PNG element
      const pngHeight =1400;// Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }




    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1830;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =2100;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =2050;
      middleY =940;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("mesha")){
     middleX =2000;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3800; // Width of the PNG element
      const pngHeight = 1500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =2090;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1920;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2100; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1900;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =2000;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1900;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1880;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }




    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1720;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1850;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2950; // Width of the PNG element
      const pngHeight =1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =2050;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 3400; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =2050;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("mesha")){
     middleX =2100;
      middleY =910;
    pngElement.onload = () => {
      const pngWidth = 3750; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =2090;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1890;
      middleY =1050;
    pngElement.onload = () => {
      const pngWidth = 2400; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =2090;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1900;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1990;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 2400; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1890;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight =2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1870;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 2700; // Width of the PNG element
      const pngHeight =1400;// Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }














    // Add new element (PNG) in the middle of the canvas
    let middlesX ;
    let middlesY;
    const pngElements = new Image();
    pngElements.src = `${day}.png`;
    if(`${pngElements.src}`.includes("friday.png")){
      middlesX =1700;
      middlesY =940;
    pngElements.onload = () => {
      const pngWidth = 3000; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElements, middlesX - pngWidth / 2, middlesY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else{
      middlesX =1700;
      middlesY =900;
      pngElements.onload = () => {
        const pngWidth = 3000; // Width of the PNG element
        const pngHeight = 1800; // Height of the PNG element
        ctx.drawImage(pngElements, middlesX - pngWidth / 2, middlesY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
    }








    function updatePreviewCanvas(image) {
      previewCanvas.width = previewContainer.clientWidth;
      previewCanvas.height = (previewContainer.clientWidth / image.width) * image.height;

      const scaleFactor = calculateScaleFactor(
        image.width,
        image.height,
        previewCanvas.width,
        previewCanvas.height
      );
      const previewCtx = previewCanvas.getContext("2d");
      previewCtx.clearRect(0, 0, previewCanvas.width, previewCanvas.height);
      previewCtx.drawImage(canvas, 0, 0, previewCanvas.width, previewCanvas.height);

      // Store the preview image separately
      previewImage = canvas.toDataURL();

      downloadButton.disabled = false;
    }
  }
 

  function calculateScaleFactor(originalWidth, originalHeight, maxWidth, maxHeight) {
    const widthScaleFactor = originalWidth / maxWidth;
    const heightScaleFactor = originalHeight / maxHeight;

    return Math.max(widthScaleFactor, heightScaleFactor, 1);
  }
  setTimeout(() => {
    const link = document.createElement("a");
    link.download = "dailyastrogurujimesha";
    link.href = previewImage; // Use the preview image data URL
    link.click();
  }, 6000);

  downloadButton.addEventListener("click", () => {
  
  });
let funk = ()=>{
  const link = document.createElement("a");
    link.download = "image";
    link.href = previewImage; // Use the preview image data URL
    link.click();
}


},150000);
setTimeout(() =>{
  

  let daily = [
    {
      title: "అతిపెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "ఈరోజు మీ జీవితంలోనే అతిపెద్ద శుభవార్త!",
      matter: "ఈరోజు మీకు మీ జీవితంలోనే అతిపెద్ద శుభవార్త అందుతుంది దాన్ని విన్న తరవాత మీ ఆనందానికి హద్దులు ఉండవు ",
    },
    {
      title: "ఒక స్త్రీ వల్ల ధనాలభం",
      thumbnail: "ఒక స్త్రీ వల్ల ఇలా ధనాలభం పొందే అవకాశం!",
      matter: "ఈరోజు మీకు మీ జీవిత భాగస్వామి వల్ల ధనాలభం పొందే అవకాశం ఉంది మీరు మాత్రం మీ జీవిత భాగస్వామి ని పూర్తిగా నమ్మాలి శుభం జరుగుతుంది ",
    },
    {
      title: "ఒక స్త్రీ పగబట్టి ఇలా",
      thumbnail: "ఒక స్త్రీ పగబట్టి చేసే ప్రయత్నాలు తెలిస్తే షాక్!",
      matter: "ఈరోజు ఒక స్త్రీ పాత కక్షలు పెట్టుకొని మీ మీద పగబట్టి మిమ్మల్ని ఆర్ధికంగా నష్టపరుచడానికి చెయ్యని ప్రయత్నలంటూ ఉండవు కాని మీ మంచి మనస్సు వల్ల దేవుడు మీ మీద అన్ని ప్రయత్నాలను విఫలం చేస్తారు",
    },
    {
      title: "కొత్త స్త్రీ తో స్నేహం",
      thumbnail: "2 శుభవార్తలు + ఒక కొత్త స్త్రీ తో స్నేహం",
      matter: "ఈరోజు మీరు రెండు పెద్ద శుభవార్తలు వింటారు మరియు అనుకోకుండా మీరు ఒక కొత్త స్త్రీ తో కలిసి ఆకస్మికంగా స్నేహం చేస్తారు",
    },
    {
      title: "పెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "పెద్ద శుభవార్తలు + ఈవిషయంలో జాగ్రత్త",
      matter: "ఈరోజు శుభప్రదంగా ఉంటుంది మీరు ఈరోజు పెద్ద శుభవార్తలు వింటారు ఆ శుభవార్తలు విన్న తరువాత ఆనండంలూ మద్యపానం సేవించడానికి ప్రయత్నాలు చేస్తారు ఇలా చెయ్యకండి మీ ఆరోగ్యం దెబ్బతీస్తుంది జాగ్రత్తగా ఉండండి ",
    },
    {
      title: "ఒక స్త్రీ పగబట్టి ఇలా",
      thumbnail: "ఒక స్త్రీ పగబట్టి ఈవిధంగా చేస్తుంది జాగ్రత్త",
      matter: "ఈరోజు మీ మీద ఒక స్త్రీ పగబట్టి హాని చెయ్యాలని చూస్తున్నారు , మరియు మీ మీద ఒక స్త్రీ ఏడుపు ఉంది మీ వ్యాపారం మరియు అభివృద్ధి మీద ఏడుస్తున్నారు జాగ్రత్తగా ఉండండి",
    },
    {
      title: "బంధువులే మీ సేత్రువులు",
      thumbnail: "మీ బంధువులే మీ సేత్రువులు జాగ్రత్త",
      matter: "మీ బంధువుల్లో కొందరు మీ సేత్రువులు ఉన్నారు వాళ్ళు ఎప్పుడు అవకాశం దొరికితే మిమ్మల్ని నష్టం చెయ్యాలని చూస్తున్నారు ఎవ్వరితో కూడా మీ వ్యాపారం గురించి చెప్పకండి జాగ్రత్తగా ఉండండి వెంనేపోటు పొడుస్తారు",
    }, 
    {
      title: "ఒక స్త్రీ మోసం చేస్తారు",
      thumbnail: "ఒక స్త్రీ ఇలా మోసం చేస్తుంది జాగ్రత్త!",
      matter: "ఈరోజు మీరు ఏంతో నమ్మిన ఒక స్త్రీ మిమ్మల్ని మోసం చేసే అవకాశం ఉంది జాగ్రత్తగా ఉండండి , మీరు మంచివారు కాని అందరు మంచివారు ఉండరు ఎవ్వరిని గుడ్డిగా నమ్మవద్దు",
    },
    {
      title: "ఒక స్త్రీ వల్ల డబ్బులు",
      thumbnail: "ఒక స్త్రీ వలన ఆదాయం + ఈవిషయాల్లో జాగ్రత్త",
      matter: "ఈరోజు మీకు చాలా మంచిరోజు నేడు మీకు మీ జీవిత భాగస్వామి బల్ల ధనాలభం కలుగుతుంది మరియు మీరు మీ జీవిత భాగస్వామి వల్ల చాలా సంతోషంగా ఉంటారు మీ బాధ్యతే ఏంటంటే మీరు కుడా వారిని సంతోషంగా ఉంచండి ",
    },
    {
      title: "స్త్రీ వల్ల శుభవార్తలు",
      thumbnail: "ఒక స్త్రీ వల్ల శుభవార్తలు ! తెలిస్తే షాక్!",
      matter: "ఈరోజు మీకు చాలా మంచిరోజు ఈరోజు మీకు ఒక స్త్రీ వల్ల శుభవార్తలు అందుతాయి ఈలోకంలో మీరే అదృష్టవంతులు అని ఈరోజు మీకు అనిపిస్తుంది మీరు మాత్రం ఆ శుభవార్తలు వినగానే షాక్ అవ్వడం ఖాయం",
    },
    {
      title: "స్త్రీ కాళ్ళ వద్దకు",
      thumbnail: "కోరుకున్న స్త్రీ కాళ్ళ వద్దకు వస్తుంది",
      matter: "ఈరోజు మీరు కూరుకున్న స్త్రీ మీ వ్యాపారం మరియు అభివృద్ధి చూసి వారు మీ కాళ్ళ వద్దకు వస్తారు కాని మీరు మాత్రం మీ వ్యాపారం మరియు అభివృద్ధి ని ఆపకండి ",
    },
    {
      title: "ఒక స్త్రీ మోసం చేస్తారు",
      thumbnail: "ఒక స్త్రీ వెన్నెపాటు పొడుస్తారు జాగ్రత్త!",
      matter: "ఈరోజు మీరు ఎంతగా నమ్మిన ఒక స్త్రీ మిమ్మల్ని మోసం చేస్తారు , దీనివల్ల మీరు మానసికంగా డిప్రెషన్ లోకి పోవచ్చు జాగ్రత్తగా ఉండండి లోకంలో డబ్బే అంత అని తెలుసుకోండి డబ్బు ఉంటె మీరే రాజు మీరే మంత్రి",
    },
    {
      title: "స్త్రీ వల్ల శుభవార్తలు",
      thumbnail: "ఒక స్త్రీ వల్ల శుభవార్తలు ! తెలిస్తే ఎగిరి గంటేస్తారు",
      matter: "ఈరోజు మీరు ఒక స్త్రీ వల్ల శుభవార్తలు అందుకుంటారు ఈలోకంలో మీరే అదృష్టవంతులు అని ఈరోజు మీకు అనిపిస్తుంది మీరు మాత్రం ఆ శుభవార్తలు వినగానే మీరు ఎగిరి గంతెయ్యడం మాత్రం ఖాయం",
    },
    {
      title: "ఒక స్త్రీ వల్ల ఘూరం",
      thumbnail: "ఒక స్త్రీ వల్ల ఘోరం జరుగుతుంది జాగ్రత్త!",
      matter: "ఈరోజు మీరు ఒక స్త్రీ వల్ల భారిగా నష్టపూతారు దీనివల్ల మీరు బాధ పాడుతారు కాని దానివల్ల ఏమి లాభం లేదు ఇప్పటికైనా పోయింది ఏమిలేదు అన్ని మరిచి మీరు మీ లక్ష్యం మీద దృష్తి పెడితే శుభం కలుగుతుంది",
    },
    {
      title: "కుటుంబంలో వీరికి మరనగందం",
      thumbnail: "కుటుంబంలో వీరికి మరణ గండం జాగ్రత్త!",
      matter: "ఈరోజు మీ కుటుంబంలో పెద్దవారిని ఎలెక్ట్రానిక్ వస్తువులనుంచి దూరంగా ఉంచండి ప్రమాదాలు జరిగే అవకాశాలు ఉన్నాయి అప్ప్రమత్తంగా ఉండండి వారి ఆరోగ్యం మీద శ్రెద్ద పెట్టండి శుభం కలుగుతుంది ",
    },
    {
      title: "అందమైన స్త్రీ తో ",
      thumbnail: "ఈరోజు అదృష్టం మీదే! అందమైన స్త్రీ తో",
      matter: "ఈరోజు ఈ మొత్తం ప్రపంచంలో మీరే అదృష్టవంతులు అని మీకు అనిపిస్తుంది ఈరోజు మీరు మీకు నచ్చిన ఇక అందమైన స్త్రీ తో బయటకు వెళ్లి సినిమాలు షికార్లు అని జాలిగా గడుపుతారు",
    },
    {
      title: "స్త్రీ తో మనసులోని మాట",
      thumbnail: "అందమైన స్త్రీ తో మనసులోని మాట చెప్తారు ",
      matter: "ఈరోజు మీరు మీకు నచ్చిన ఒక అందమైన స్త్రీ తో ఎప్పటినుంచో చెప్పాలనుకుంటున్న మీ మనస్సులోని మాట ఈరోజు చెపుతారు మరియు ఇలా చేస్తే ఈరోజు మీరు షాకింగ్ న్యూస్ వింటారు ",
    },
    {
      title: "పెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "పెద్ద శుభవార్తలు + ఒక స్త్రీ పగబట్టి ఇలా చేస్తది",
      matter: "ఈరోజు మీరు పెద్ద శుభవార్తలు వింటారు మరియు ఈరోజు ఒక స్త్రీ పగబట్టి మీ శుభవార్తల మీద ఈర్ష తో నష్టం చెయ్యడానికి ప్రయత్నాలు చేస్తారు కాని మీరు మీ అదృష్టం వల్ల తప్పించుకుంటారు",
    },
    {
      title: "ఒక స్త్రీ తో సరదాగా ఉలా",
      thumbnail: "ఒక స్త్రీ తో సరదాగా ఇలా చేస్తారు...! జాగ్రత్త",
      matter: "ఈరోజు మీరు సరదా కోసం మీ ప్రేయసితో బయటకు పోయి సినిమాలకు రెస్టారెంట్లకు పోయి చివరికి మీరు మీ దగ్గర ఉన్న డబ్బును మొత్తం ఐపోచేస్తారు జాగ్రత్తగా ఉండండి డబ్బును ఈరోజు మీరు ఆదా చేస్తే అవి మీకు రేపు పనికి వస్తాయి",
    },
    {
      title: "స్త్రీ వల్ల ఆనందం",
      thumbnail: "ఒక స్త్రీ వల్ల ఆనందానికి హద్దులు ఉండవు",
      matter: "ఈరోజు మీ జీవితానికి అర్ధమోచ్చే ఒక పెద్ద బంగారు శుభావర్తని మీ జీవిత భాగస్వామి మీకు అందిస్తారు ఈరోజు మీరు ఒక అందమైన స్త్రీ తో జాలిగా గడుపుతారు ఈరోజు ఆ అందమైన స్త్రీ వల్ల ఆకస్మికంగా ధనలాభం పొందే అవకాశం కుడా ఉంది",
    },
    {
      title: "వీరితో గొడవలు జాగ్రత్త",
      thumbnail: "ఈరోజు వీరితో గొడవలు జరుగుతాయి జాగ్రత్త",
      matter: "ఈరోజు మీరు ఎప్పటినుంచో గొడవ పదాలనుకుంటున్న మీ సేత్రువులు మిమ్మల్ని గెలకడంతో మీరు వారితో గొడవ పడొచ్చు కాని గొడవ పరిష్కారం కాదని మీరు తెలుసుకూవాలి కాని గొడవ జరిగితే మాత్రం గెలిసేది మీరే",
    },
    {
      title: "అందమైన స్త్రీ తో ఇలా",
      thumbnail: "ఒక అందమైన స్త్రీ తో సరదాలు + ఆకస్మిక ధనాలభం",
      matter: "ఈరోజు మీరు ఒక అందమైన స్త్రీ తో జాలిగా గడుపుతారు ఈరోజు ఆ అందమైన స్త్రీ వల్ల ఆకస్మికంగా ధనలాభం పొందే అవకాశం కుడా ఉంది",
    },
    {
      title: "స్త్రీ వల్ల నష్టాలు",
      thumbnail: "ఓక స్త్రీ వల్ల భారీగా నష్టపోతారు జాగ్రత్త!",
      matter: "ఈరోజు మీరు మీ జీవిత భాగస్వామి చేసిన ఒక తప్పు వల్ల బిజినెస్ లో భారి నష్టాలను చూస్తారు దీనివల్ల మీరు వారిమీద కోప్పడుతారు ఆఖరికి దీంట్లో వాళ్ళు కావాలని చెయ్యలేదని తెలుసుకొని క్షమిస్తారు",
    },
    {
      title: "ఒక స్త్రీ పగబట్టి ఇలా",
      thumbnail: "ఒక స్త్రీ పగబట్టి ఈవిధంగా చేస్తుంది",
      matter: "ఈరోజు మీ మీద ఎప్పటినుంచో కక్ష పెట్టుకున్న ఒక స్త్రీ ఈరోజు పగతీర్చుకోవడానికి మిమ్మల్ని మానసికంగా హాని చేస్తారు అది కుడా విఫలం అయితే శారీరికంగా హాని చేస్తారు జాగ్రత్తగా ఉండండి ",
    },
    {
      title: "ఒక స్త్రీ తో గొడవలు",
      thumbnail: "ఈరోజు ఒక స్త్రీ తో గొడవలు జరుగుతాయి",
      matter: "ఈరోజు మీకు ఒక స్త్రీ తో గొడవలు జరుగుతాయి మీరు ఎంత ఒద్దు అనుకున్న గొడవలు తప్పవు దీనిని ద్రుష్టిలో పెట్టుకొని మీరు గొడవని ఆపలేరు అయితే మీరు కోపంలో మీరు చెప్పే మాటలపై మీరు తరువాత ఆందోళన పాడుతారు జాగ్రత్త key",
    },
    {
      title: "స్త్రీ తో మనసులోని మాట",
      thumbnail: "ఒక స్త్రీ తో మనసులోని విషయం మాట్లాడతారు",
      matter: "ఈరోజు మీరు ఒక స్త్రీ తో మీ మనసులోని మాట మాట్లాడుతారు మీరు వారిని ఇష్టపడుతున్నారని వారితో చెపుతారు ఈవిషయం చెప్పినతరువాత మీకు ఒక షాకింగ్ వార్త అందుతుంది జాలిగా గడుపుతారు",
    },
    {
      title: "జీవితంలో ఒక స్త్రీ ఎంట్రీ",
      thumbnail: "మీ జీవితంలో ఒక స్త్రీ ఎంట్రీ .. అన్ని శుభవర్తలే",
      matter: "ఈరోజు మీ జీవితంలో ఒక కొత్త స్త్రీ వస్తుంది తను చాల బుద్ధిమంతురాలు మరియు అందానికి యువరాణి మీకు ఆ స్త్రీ చాల నచ్చుతుంది మరియు మీరు ఆ స్త్రీ తో స్నేహం కూడా చెయ్యడానికి ప్రయత్నాలు చేస్తారు",
    },
    {
      title: "ఒక స్త్రీ వల్ల మోసపోతారు",
      thumbnail: "ఒక స్త్రీ ని గుడ్డిగా నమ్మవద్దు! మీరు మోసపోవచ్చు",
      matter: "మీరు ప్రాణంగా ప్రేమించిన స్త్రీ ఈరోజు మిమ్మల్ని విదిచిపోవడంతో మీరు తట్టుకోలేరు మీరు డిప్రెషన్ లో కూడా పోవచ్చు కాని అదే సమయంలో మీ తల్లితండ్రులవల్ల మీకు జీవితం అంటే ఒక అర్ధం ఒస్తుంది వారి కోసమే బ్రతుకుతారు",
    },
    
    {
      title: "స్త్రీ వల్ల బంగారు శుభవార్త",
      thumbnail: "ఒక స్త్రీ వల్ల బంగారు శుభవార్తలు + ఇలా చేయకండి",
      matter: "ఈరోజు మీ జీవితానికి అర్ధమోచ్చే ఒక పెద్ద బంగారు శుభావర్తని మీ జీవిత భాగస్వామి మీకు అందిస్తారు ఆ శుభవార్త మీ జీవితాన్నే మార్చేస్తుంది కాబట్టి ఈరోజు మీరు ఆనందంలో మీరు ఎం చేయ్యలనుకున్తున్నారో ఆ పనులన్నీ చేసేస్తారు",
    },
  
    {
      title: "ప్రియమైన స్త్రీ ని కలుస్తారు",
      thumbnail: "ఒక ప్రియమైన స్త్రీ ని కలుస్తారు + ఆకస్మిక ధనాలభం",
      matter: "ఈరోజు మీరు మీకు ఏంటో ప్రియమైన స్త్రీ ని కలుస్తారు కలిసి సరదాగా మాట్లాడుకుంటారు ఇంకా ఈరోజు చివరిలో మీకు ఆకస్మిక ధనలాభం కలుగడంతో మీ ఆనందానికి హద్దులు ఉండవు ఆనందంలో పార్టి కూడా చేసుకుంటారు",
    },
    {
      title: "2 పెద్ద శుభవార్తలు",
      thumbnail: "2 పెద్ద శుభవార్తలు + ఈవిషయంలో జాగ్రత్త!",
      matter: "ఈరోజు మీరు ఎప్పటినుండో ఎదురుచూస్తున్న శుభవార్త వింటారు మరియు మీరు అనుకోకుండా ఒక స్త్రీ వల్ల ఇంకొక శుభవార్తలు అందుకుంటారు సంతోషంలో మీరు మద్యం సేవించవచ్చు ఇలా చెయ్యకండి జాగ్రత్త",
    },
    {
      title: "ఒక స్త్రీ వల్ల గొడవలు",
      thumbnail: "ఒక స్త్రీ వల్ల గొడవలు + ఆకస్మిక సంఘటనలు",
      matter: "ఈరోజు మీరు మీకు నచ్చిన ఒక స్త్రీ కోసం వేరే వాళ్లతో గొడవలలో పలుగోనతారు కాని ఆకస్మికంగా ఆ గొడవ చాల పెద్దగా కావడంతో మీరు గొడవని ముగించడానికి ప్రయత్స్తారు కాని మీరు జాగ్రత్తగా ఉండాలి దెబ్బలు కూడా తగలోచ్చు",
    },
    {
      title: "స్త్రీ వల్ల ప్రమాదాలు",
      thumbnail: "ఒక స్త్రీ వల్ల ప్రమాదాలు ముంచుకోస్తున్నాయి జాగ్రత్త",
      matter: "ఈరోజు మీకు ఒక స్త్రీ వల్ల ప్రమాదాలు మున్చుకోస్తునాయి కాబట్టి మీరు అప్ప్రమత్తంగా ఉండండి వాహనాలు నడిపెటప్పుడు ఒక స్త్రీ ని ఆకర్షించడానికి మీరు మీ వాహనాన్ని అతివేగంలో నడుపుతారు దీనివల్ల ప్రమాదం కూడా జరుగవచ్చు",
    },
    {
      title: "ఒక స్త్రీ నష్టం చేస్తారు",
      thumbnail: "ఒక స్త్రీ ఈవిధంగా నష్టం చేస్తున్నారు + ఇలా చెయ్యండి",
      matter: "మీరు మిమ్మల్ని ప్రేమిస్తున్నారు అనుకుంటున్నా స్త్రీ మీదగ్గర మీ డబ్బుకోసమే ఉన్నారు . ఈరోజు బయట ఆ స్త్రీ మిమ్మల్ని షాపింగ్ కు తెసుకేల్లి మీ లక్షలు నష్టం చేస్తారు జాగ్రత్త",
    },
    {
      title: "మంచి శుభవార్తలు ఉన్నాయి",
      thumbnail: "మంచి శుభవార్తలు + ఈవిషయాల్లో జాగ్రత్త",
      matter: "ఈరోజు మీ జీవితానికి అర్ధమోచ్చే ఒక పెద్ద బంగారు శుభావర్తని మీ జీవిత భాగస్వామి మీకు అందిస్తారు ఆ శుభవార్త మీ జీవితాన్నే మార్చేస్తుంది  సంతోషంలో మీరు మద్యం సేవించవచ్చు ఇలా చెయ్యకండి జాగ్రత్త",
    },
    {
      title: "ఒక స్త్రీ తో గొడవ",
      thumbnail: "ఈరోజు ఒక స్త్రీ తో గొడవ జరుగుతుంది జాగ్రత్త",
      matter: "ఈరోజు మీకు ఒక స్త్రీ తో ఆస్తి మరియు దనం విషయంలో గొడవలు జరుగుతాయి కాని గొడవలో మీరు నూరు జారి చెప్పకుదని మాటలు చెపుతారు గొడవ తరువాత మీరు ఎందుకుచేప్పరని బాధపడి ఆ స్త్రీ తో క్షమాపణ అడుగుతారు దీని బదులు మీరు ముందే నూరు అదుపులో పెట్టుకోండి",
    },
    {
      title: "సేత్రువులు ఇలా చేస్తారు",
      thumbnail: "రహస్య సెత్రువులు ఈవిధంగా చేస్తున్నారు జాగ్రత్త",
      matter: "ఈరోజు రహస్య సేత్రువులు మీకు తెలియకుండానె మిమ్మల్ని ఆర్ధికంగా మరియు మీ కుతుమ్బంన్ని హాని చెయ్యడానికి చెయ్యని ప్రయత్నలుండవు కాబట్టి మీరు ముందే జాగ్రత్తగా ఉండండి ఎవ్వరిని గుడ్డిగా నమ్మవద్దు మోసపోవచ్చు",
    },
    {
      title: "అమ్మాయి కాళ్ళ వద్దకు",
      thumbnail: "అందమైన అమ్మాయి మీ కాళ్ళ వద్దకు వస్తుంది",
      matter: "ఈరోజు మీ స్వప్న సుందరి మీ ఉన్నత చదువులు మరియు వ్యాపారంలో అభివృద్ధి చూసి ఒచ్చి మీ కాళ్ళ వద్దకు పడుతది . ఈరోజు మీరు పడ్డ కష్టం వ్యర్ధం కాలేదని మీరు తెలుసుకుంటారు వ్యాపారం మరియు చదువులూ ఇంకా ముందుకు సాగాలని మీకు మోటివేషన్ దొరుకుతుంది",
    },
    {
      title: "స్త్రీ వల్ల పెద్ద శుభవార్త",
      thumbnail: "ఒక స్త్రీ వల్ల పెద్ద శుభవార్త + ఆకస్మిక ధనాలభం",
      matter: "ఈరోజు మీకు ఒక స్త్రీ వల్ల పెద్ద శుభవార్త అందుతుంది మరియు వార్త వినంగానే మీ మడ్ ఒక్కసారిగా మంచిగా మారడంతో మీరు మీ పార్టనర్ తో కలిసి సినిమాకు పోతారు మరియు రాత్రి సమయంలో మీకు ధనలాభం కలుగుతుంది ",
    },
    {
      title: "స్త్రీ తో సరదాగా ఉలా",
      thumbnail: "ఒక స్త్రీ తో కలిసి సరదాగా చేసే పనులు తెలిస్తే షాక్ !",
      matter: "ఈరోజు మీరు టైం పాస్ చెయ్యడానికి ఒక స్త్రీ తో కలిసి ఒక మంచి రెస్టారెంట్ కు వెళ్లి భూజనం చెయ్యడం ఇష్టపడుతారు మరియు సినిమాకు పోయి జాలిగా గడుపుతారు ఈరోజు మీకు ఎప్పటికి గుర్తుండిపోయేలా గడుపుతారు",
    },
    {
      title: "సెత్రువులు ఇలా చేస్తారు",
      thumbnail: "పెద్ద శుభవార్తలు + సెత్రువులు ఇలా చేస్తారు",
      matter: "ఈరోజు మీకు చాల పెద్ద శుభవార్తలు అందుతాయి దీనితో మీరు చాల సంతోషంగా ఉంటారు మీ సంతోషం మీ సేత్రువులు చూడలేరు వారు మీకు ఎదో ఒక హాని చెయ్యాలని చూస్తారు కాని రోజు ఆకరికి ఏమి చెయ్యలేక అలిసి వెళ్ళిపోతారు",
    },
    {
      title: "ప్రాణగండం ఉంది జాగ్రత్త",
      thumbnail: "వీరితో గొడవలు + ప్రాణగండం ఉంది జాగ్రత్త",
      matter: "ఈరోజు మీకు మీ సేత్రువులతో గొడవలు జరుగుతాయి మరియు మీరు ఈరోజు మీ కోపాన్ని అడుపులూ ఉంచాలి లేదంటే మీకు గొడవలో తీవ్ర గాయలవల్ల ప్రాణగండం ఉంది దేవుడ్ని స్మరించండి గొడవ దేనికి కూడా సమాధానం కాదు అని మీరు తెలుసుకోవాలి",
    },
    {
      title: "స్త్రీ వల్ల పండగలు",
      thumbnail: "ఒక స్త్రీ వల్ల ఈరోజు పండుగలా ఉంటుంది",
      matter: "ఈరోజు ఒక స్త్రీ వల్ల వేడుకలా ఉంటుంది మీకు నచ్చిన స్త్రీ తో ఈరోజు మీరు బయటకు పోతారు మరియు వారితో సినిమాలకు పోయి జాలిగా గడుపుతారు ఆ స్త్రీ వల్ల రోజు చివర్లో ధనాలభం కూడా కావొచ్చు శుభం కలుగుతుంది ",
    },
    {
      title: "స్త్రీ మోసం చేస్తుంది",
      thumbnail: "ఒక స్త్రీ ఇలా మోసం చేస్తది + ఇలా చెయ్యండి",
      matter: "ఈరోజు మీరు గుడ్డిగా నమ్మిన ఒక స్త్రీ మిమ్మల్ని మోసం చేస్తది దేనిని మీరు తట్టుకోలేరు కోపంలూ మీరు డిప్రెషన్ లో కూడా పోవచ్చు కాని మీ తల్లి తండ్రులకు ఈ విషయం తెలిసి వారు మిమ్మల్ని దీని నుండి బయటకు తెస్తారు",
    },
    {
      title: "స్త్రీ మీ కాళ్ళ వద్దకు",
      thumbnail: "ఒద్దు అన్న స్త్రీ మీ కాళ్ళ వద్దకు వస్తుంది",
      matter: "మీ దగ్గర డబ్బులు లేవు మీరు బిచ్చగాల్లు అని మిమ్మల్ని వదిలి పాయిన ఆ స్త్రీ ఈరోజు మీ అభివృద్ధి మరియు మీ ఉన్నత చదువులు చూసి మల్లి మీ కాళ్ళ వద్దకు ఒస్తుంది మల్లి తనను దగ్గరుకు తెసుకున్తారా? కామెంట్ లో చెప్పండి  ",
    },
  
    {
      title: "పెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "పెద్ద శుభవార్తలు ఉన్నాయి + స్త్రీ వల్ల పండుగ",
      matter: "ఈరోజు మీకోసం పెద్ద శుభవార్తలు ఎదురుచుస్తునాయి మీరు పడ్డ కష్టానికి ప్రతిఫలం ఈరోజు మీకు శుభవార్త అందుతుంది మరియు మీ అభివృద్ది ని చూసి ",
    },
    {
      title: "స్త్రీ వల్ల ధనలాభం",
      thumbnail: "అందమైన స్త్రీ వల్ల ధనలాభం + పెద్ద శుభవార్త",
      matter: "ఈరోజు ఒక అందమైన స్త్రీ వల్ల ధనాలభం కలుగుతుంది ఇంకా రోజు మధ్యలో మీకు పెద్ద శుభవార్త అందుతుంది మీకు ఆ శుభవార్త అందుతదని మీరు కలలో కూడా ఉహించి ఉండరు కాని మీ అదృష్టం వల్ల మీకు ఆ శుభవార్తః అందుతుంది ",
    },
    {
      title: "కుటుంబంలో వీరికి ప్రాణగండం",
      thumbnail: "మీ కుటుంబంలో వీరికి ఇలా ప్రాణగండం జాగ్రత్త",
      matter: "ఈరోజు మీ కుటుంబంలో వ్రుదుల అనారోగ్యం వల్ల వారికి ప్రాణగండం ఉంది కాబట్టి పుష్టిక ఆహారాన్ని సేవించాలి మరియు దేవుడ్ని స్మరించాలి మీరు చేసిన పుణ్యకార్యాల వల్ల దేవుడు మీ గండాన్ని తొలగిస్తారు శుభం జరుగుతుంది",
    },
    {
      title: "స్త్రీ వల్ల శుభవార్తలు",
      thumbnail: "మీరు ఊహించని స్త్రీ శుభవార్తలు చెప్తారు ",
      matter: "ఈరోజు మీరు కలలో కూడా ఉహించని ఒక అందమైన స్త్రీ నోటితో మీరు శుభావర్తలు వింటారు ఈవార్త వినగానే మీ మనస్సు గాలిలో తేలినట్లు అయిపోతుంది మీరు మీ బంధువులందరితో ఈ వార్తని పంచుకుంటారు జాలిగా గడుపుతారు",
    },
    {
      title: "స్త్రీ మీ కాళ్ళ వద్దకు",
      thumbnail: "మీరు కావాలనుకున్న స్త్రీ మీ కాళ్ళ వద్దకు",
      matter: "ఈరోజు మీరు ఎప్పటినున్డూ కోరుకుంటున్న స్త్రీ మీ అదృష్టం కొద్ది మీ దగ్గర సహాయం కోరుతూ వస్తుంది మీరు కాని తనకు సహాయం చేస్తే మాత్రం మీ ఇద్దరి మధ్య బంధం ఇంకా గట్టిపడుతుంది కాని ఆ సహాయం చెయ్యడానికి కొద్దిగా శ్రీమ పడాల్సి ఉంటది",
    },
  
    {
      title: "పెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "పెద్ద శుభవార్తలు + ఒక స్త్రీ ఇలా చేస్తుంది",
      matter: "ఈరోజు మీకు మీరు ఎన్నో సంవచరాల నుండి ఎదురుచూస్తున్న శుభవార్త ఒకటి అందడం వల్ల మీరు సంతోషంగా ఎగిరి గంతులేస్తారు మరియు మీ మిత్రులకి పార్టి ఇస్తారు మొత్తానికి ఈరోజు జాలిగా గడుపుతారు కాని ఆ శుభవార్త మీ జీవితాన్ని మార్చేస్తుంది",
    },
    {
      title: "ఒక స్త్రీ మోసం చేస్తారు",
      thumbnail: "ఒక స్త్రీ మిమ్మల్ని ఈవిధంగా మోసం చేస్తున్నారు",
      matter: "ఈరోజు మీరు కళ్ళు ముసి నమ్మిన ఒక స్త్రీ మిమ్మల్ని వెంనేపోటు పొడుస్తారు మిమ్మల్ని కాదని మోసం చేస్తారు దీనితో మీరు చాల బాధ పాడుతారు కాని మీ తల్లితండ్రులు మీకు సపోర్టుగా ఉంటారు దీనివల్ల వాళ్ళని మించిన వారు లేరని మీకు తెలుస్తుంది",
    },
    {
      title: "స్త్రీ తో మనసులోని మాట",
      thumbnail: "నచ్చిన స్త్రీ తో మీ మనసులోని మాట చెపుతారు",
      matter: "మీరు ప్రతిరోజూ కలలో చూసే మీకు నచ్చిన ఒక స్త్రీ తో ఈరోజు మీరు మీ మనస్సులోని మాట చెపుదామని మీరు ఫిక్స్ అవుతారు ఇలా చెయ్యడానికి ఇదే సరైన సమయం శుభవార్తలు కూడా అందవచ్చు ఏది జరిగినా మన మంచికే అని గుర్తుపెట్టుకోండి ",
    },
    {
      title: "ఎవరంలో ఇలా జరిగిద్ది",
      thumbnail: "ఈవారంలో ఏం జరుగుతుందో తెలిస్తే షాక్",
      matter: "ఈవారంలో మీ వృత్తికి మీరే రాజు మీరే మంత్రి బిజినెస్ లో మిమ్మల్ని మించినోల్లు ఎవ్వరు ఉండరు కొత్త స్త్రీ తో పరిచయాలు జరుగుతాయి మరియు ధనాలభం కలుగుతుంది",
    },
    {
      title: "వీరే మీ సెత్రువులు",
      thumbnail: "వీరే మీ సెత్రువులు + ఒక స్త్రీ తో జాగ్రత్త",
      matter: "ఈరోజు మీరు మీ సేత్రువుల పేర్లు తెలుసుకుంటారు మరియు ఒక స్త్రీ మీ రహస్య సేత్రువు మీకు ఇప్పటివరుకు కలిగిన హాని మొత్తం మీ సేత్రువులనుంచే అని ఈరోజు మీకు తెలిసి వస్తుంది అప్ప్రమత్తంగా ఉండండి",
    },
    {
      title: "స్త్రీ కాళ్ళ వద్దకు",
      thumbnail: "మీరు ఒద్దు అని విడిచిపోయిన స్త్రీ కాళ్ళ వద్దకు",
      matter: "మీరు డబ్బు లేనివారు అని మిల్లల్ని చులకనగా చుసిన ఒక స్త్రీ ఈరోజు మీ వ్యాపారం మరియు అభివృద్ధి చూసి మల్లి మీ కాళ్ళ వద్దకు వస్తుంది కాని వచ్చిన తరువాత మీరు మీ దృష్టి ని అటు మల్లిన్చాకండి మీ వ్యాపారాన్ని ఇంకా పెంచుతూనే ఉండాలి",
    },
    {
      title: "ఒక స్త్రీ వల్ల శుభవార్తలు",
      thumbnail: "ఒక స్త్రీ వల్ల అతిపెద్ద శుభవార్తలు తెలిస్తే షాక్",
      matter: "ఈరోజు మీ జీవితంలూ ఎప్పుడు అందని శుభవార్తలు ఈరోజు మీకు ఒక స్త్రీ వల్ల అందుతాయి వాటిని విని మీరు ఎగిరి గంతులేస్తారు మీ ఆనందానికి హద్దులు ఉండవు ఆ శుభవార్తలు మీ జీవితాన్నే మార్చేస్తాయి రెడీగా ఉండండి ",
    },
    {
      title: "ఒక స్త్రీ పగబట్టి ఇలా",
      thumbnail: "ఒక స్త్రీ పగబట్టి చేసే ప్రయత్నాలు చుస్తే చాక్",
      matter: "ఈరోజు మీపైన ఎంతోకాలంగా కక్షగుడి మీ ప్రానసేత్రువు ఒక స్త్రీ మిమ్మల్ని అన్ని విధాలుగా హాని చెయ్యడానికి ప్రయత్నాలు చేస్తారు కాని మీరు చాలా ధైర్యవంతులు కావడంతో మీరు వాటన్నిటినుంచి సులభంగా తప్పించుకుంటారు ",
    },
    {
      title: "పెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "పెద్ద శుభవార్తలు ఉన్నాయి వీరు నక్కతోకతొక్కారు",
      matter: "ఈరోజు మీరునక్కతోకతొక్కారు మీకు ఈరోజు పెద్ద శుభవార్తలు అందుతాయి వాటిని విని మీ మనసు గాలిలో తేలడం మాత్రం ఖాయం ఈరోజు మీకు శుభవార్తలు విన్న తరువాత ఆనదందానికి హద్దులు ఉండవు ఎగిరి గంతులు వేస్తారు",
    },
    {
      title: "ఒక స్త్రీ వల్ల ప్రాణగండం",
      thumbnail: "ఒక స్త్రీ వల్ల ప్రాణగండం + ఈవిషయాల్లో జాగ్రత్త",
      matter: "ఈరోజు మీకు ఒక స్త్రీ వల్ల ప్రాణగండం ఉంది ఎలా అంటే ఈరోజు మీరు ఒక స్త్రీ ని ఆకట్టుకోవడానికి వాహనాన్ని అతివేగంతో నడుపడంతో మీకు ఆపదలు జరిగే అవకాశం ఉంది జాగ్రత్తగా ఉండండి మరియు వాహనాన్ని ఇంటిదగ్గర మీకోసం ఎదురుచూస్తున్నా వాళ్ళ కోసం నెమ్మదిగా తోలండి",
    },
    {
      title: "స్త్రీ తో ఇలా చేస్తారు",
      thumbnail: "శుభవార్త తెలిస్తే ఎగిరి గంటెస్తారు ఒక స్త్రీ తో",
      matter: "ఈరోజు మీ రోజువారి బ్రతుకులూ ఒక్కసారిగా పెద్ద శుభవార్త ఒకటి అందడంవల్ల మీరు మీ ప్రేయసితో కలిసి ఎంజాయ్ చెయ్యడానికి బయటకు సినిమాలు అని షికార్లకు పోతారు ఈరోజు మీ జీవితంలో ఎప్పటికి గుర్తుండిపోతుంది",
    },
    {
      title: "స్త్రే తో సరదాగా ఉలా",
      thumbnail: "అందమైన స్త్రీ తో సరదా కోసం ఇలా చేస్తారు ",
      matter: "ఈరోజు మీకు చాల అదృష్టమైన రోజు మీరు కలలో కూడా ఉహించని అందమైన స్త్రీ తో ఈరోజు మీరు సరదాగా షికారుకు వెళ్లి జాలిగా గడుపుతారు మరియు మీ ఇద్దరి బంధం దీనివల్ల ఇంకా ద్రుదపడుతుంది",
    },
    {
      title: "ఒక స్త్రీ కాళ్ళ దగ్గర",
      thumbnail: "శుభవార్త ! ఒక స్త్రీ ఈరోజు మీ కాళ్ళ దగ్గర",
      matter: "ఈరోజు శుభవార్త అందుతుంది మీరు పేదవాళ్ళు అని మిమ్మల్ని వదిలిపొఇన ఒక స్త్రీ ఈరోజు మీ అభివృద్ధి మరియు దానం చూసి మల్లి మీ కాళ్ళ దగ్గర రావడం ఖాయం",
    },
    {
      title: "స్త్రీ వల్ల గుండెలుపగిలే వార్త",
      thumbnail: "ఒక స్త్రీ వల్ల గుండెలు పగిలే వార్తలు జాగ్రత్త",
      matter: "ఈరోజు మీరు ఎంతగా నమ్మిన స్త్రీ తరుపునుంచి మీకు గుండెలు పగిలే వార్తలు వింటారు ఆ వార్తలు ఏంటంటే వారి ఆరోగ్యం అస్సలు బాగాలేదు మరియు ఆసుపత్రిలూ వారికి చాల ఖర్చులు ఉన్నాయి ఇది విన్న తరువాత మీరు వారిని ఆర్ధికంగా సహాయం చేస్తారు",
    },
    {
      title: "ఒక స్త్రీ మిమ్మల్ని హాని",
      thumbnail: "ఒక స్త్రీ ఇలా హాని చేస్తుంది ఇప్పుడే తెలుసుకోండి",
      matter: "ఈరోజు మీకు ఒక స్త్రీ పగబట్టి శారీరికంగా హాని చెయ్యడానికి చెయ్యని ప్రయత్నాలు ఉండవు కావున మీరు బయటకు వెళ్ళేటప్పుడు దేవుడ్ని స్మరించి జాగ్రత్తగా వెళ్ళండి మీకు ఎలాంటి హాని కలగదు",
    },
    {
      title: "మీ మీద స్త్రీ దృష్టి",
      thumbnail: "మీ మీద ఒక స్త్రీ చేసుదృష్టి జాగ్రత్త",
      matter: "మీ మీద ఒక స్త్రీ చేడుద్రుష్టి ఈలోకంలో చేడుద్రుష్టి అనేది ఒక రాజుని కూడా బిచ్చగాడు లా చెయ్యొచ్చు మీ సంపద మీద ఒక స్త్రీ ఏడుస్తుంది ఇది మీరు జాగ్రత్తగా ఉండాల్సిన సమయం అప్ప్రమత్తంగా ఉండండి",
    },
    {
      title: "ఒక స్త్రీ వల్ల శుభవార్తలు",
      thumbnail: "అన్ని శుభవార్తలే మీ జీవితంలో ఒక స్త్రీ ఎంట్రీ",
      matter: "ఎప్పటినుండో బ్రేక్ లో ఉన్న మీ జీవితం ఒక స్త్రీ రావడంతో దూసుకుపోతుంది , అవును ఈరోజు మీకు అన్ని శుభవార్తలు అందుతాయి మరియు మీ జీవితంలూ ఒక స్త్రీ ఎంట్రీ ఇస్తుంది ",
    },
    {
      title: "స్త్రీ వల్ల పెద్ద శుభవార్తలు",
      thumbnail: "ఒక స్త్రీ వల్ల 3 పెద్ద శుభవార్తలు + ఇలా చెయ్యకండి",
      matter: "ఈరోజు మీరు ఒక స్త్రీ వల్ల మూడు పెద్ద శుభావర్హలు అందుకుంటారు మరియు శుభవార్తలు అందుకున్న వెంటనే మీరు ఆ విషయాలను మీ తల్లి తండ్రులకు ముందుగా చెపుతారు ఎందుకంటే ఈలోకంలో వారిని మించి మీకు ఎవ్వరు లేరు",
    },
  ];
  const today = new Date();
  let tomorrow = new Date(today);
  tomorrow.setDate(tomorrow.getDate() + 2);

  let dayOfWeekIndex = tomorrow.getDay();
  let dayOfWeekArray = [
    "sunday",
    "monday",
    "tuesday",
    "wednesday",
    "thursday",
    "friday",
    "saturday"
  ];

  

  let monthIndex = tomorrow.getMonth();
  let monthArray = [
    "january",
    "february",
    "march",
    "april",
    "may",
    "june",
    "july",
    "august",
    "september",
    "october",
    "november",
    "december",
  ];
let count = Number(localStorage.getItem("count") )|| 23;
  let dayname = dayOfWeekArray[dayOfWeekIndex];
  let monthname = monthArray[monthIndex];
  let datenumber = tomorrow.getDate().toString().padStart(2, "0");

  const textInput = document.getElementById("text-input");
  const textInput2 = document.getElementById("text-input2");
  const fontSelect = document.getElementById("text-input");
  const colorSelect = document.getElementById("color-select");
  const sizeRange1 = document.getElementById("size-range-1");
  const sizeRange2 = document.getElementById("size-range-2");
  const positionRangeX = document.getElementById("position-range-x");
  const previewContainer = document.getElementById("preview-container");
  const previewCanvas = document.getElementById("preview-canvas");
  const downloadButton = document.getElementById("download-button");
textInput2.value = datenumber;

const DailyOnceSet = function(){

  let currentDate = new Date();
  let currentDay = currentDate.getDate();
    localStorage.setItem('thumbdate', currentDay);
  }
  const Shiftdown = function () {
    let today = new Date().getDate();
    let yesterday = localStorage.getItem('thumbdate') || "";
    if(today!=yesterday){
      if(Number(localStorage.getItem("count"))+1>daily.length){
        localStorage.setItem("count",0);
      }
      else{
        
      localStorage.setItem("count",++count);
      localStorage.setItem("var4",daily[count].thumbnail);
      localStorage.setItem("var3", daily[count-1].thumbnail)
      localStorage.setItem("var2", daily[count-2].thumbnail)
      localStorage.setItem("var1", daily[count-3].thumbnail)



      }
    }  
  }

Shiftdown();
DailyOnceSet();

let var4 = localStorage.getItem("var4");
let var3;
let var2;
let var1;
if (count ==0){
  localStorage.setItem("var3", daily[67].thumbnail)
  var3 = localStorage.getItem("var3");
  localStorage.setItem("var2", daily[66].thumbnail)
  var2 = localStorage.getItem("var2");
  localStorage.setItem("var1", daily[65].thumbnail)
  var1 = localStorage.getItem("var1");
}
else if(count ==1){
  localStorage.setItem("var3", daily[0].thumbnail)
  var3 = localStorage.getItem("var3");
  localStorage.setItem("var2", daily[67].thumbnail)
  var2 = localStorage.getItem("var2");
  localStorage.setItem("var1", daily[66].thumbnail)
  var1 = localStorage.getItem("var1");
}
else if(count ==2){
  localStorage.setItem("var3", daily[1].thumbnail)
  var3 = localStorage.getItem("var3");
  localStorage.setItem("var2", daily[0].thumbnail)
  var2 = localStorage.getItem("var2");
  localStorage.setItem("var1", daily[67].thumbnail)
  var1 = localStorage.getItem("var1");
}
else{
  var3 = localStorage.getItem("var3");
  var2 = localStorage.getItem("var2");
  var1 = localStorage.getItem("var1");
}
document.getElementById("var1").value = var1;
document.getElementById("var2").value = var2;
document.getElementById("var3").value = var3;
document.getElementById("var4").value = var4;

  let currentImage = null;
  let previewImage = null;
  let fontSize1;
  // Load default image
  const defaultImage = new Image();
  //!

  textInput.value = var4;
  defaultImage.src  = "dailyastrogurujitula.jpg" 

  

 
  
  
  
  
  defaultImage.onload = () => {
    currentImage = defaultImage;
    updatePreview();
  };

  textInput.addEventListener("input", () => {
    updatePreview();
  });

  textInput2.addEventListener("input", () => {
    updatePreview();
  });

  fontSelect.addEventListener("input", () => {
    updatePreview();
  });

  colorSelect.addEventListener("input", () => {
    updatePreview();
  });

  sizeRange1.addEventListener("input", () => {
    updatePreview();
  });

  sizeRange2.addEventListener("input", () => {
    updatePreview();
  });

  positionRangeX.addEventListener("input", () => {
    updatePreview();
  });

  function updatePreview() {
    if (!currentImage) return;

    const text = textInput.value;
    const text2 = textInput2.value;
    const color = "white"; // Set text2 color to white
    const canvas = document.createElement("canvas");
    const ctx = canvas.getContext("2d");

    const image = currentImage;

    canvas.width = image.width;
    canvas.height = image.height;

    ctx.drawImage(image, 0, 0);

    const positionX1 = 10; // Fixed X-coordinate for text1 (leftmost position)
    const positionY1 = 1730; // Fixed Y-coordinate for text1 (bottom - 600 pixels up)

    fontSize1 = 250; // Initial font size for text1
    ctx.font = `${fontSize1}px 'Anek Telugu'`;
    let textWidth = ctx.measureText(text).width;

    // Decrease font size until the text fits within the canvas width
    while (textWidth > canvas.width - 1) {
      fontSize1 -= 1;
      ctx.font = `${fontSize1}px 'Anek Telugu'`;
      textWidth = ctx.measureText(text).width;
    }

    let stretchRatio1;
    // Calculate vertical stretch factor for text1
    if (document.querySelector("#text-input").value.length > 48) {
      const originalHeight1 = fontSize1;
      const targetHeight1 = originalHeight1 + 100; // Vertical stretch factor, adjust as needed
      stretchRatio1 = targetHeight1 / originalHeight1;
    } else if (document.querySelector("#text-input").value.length < 30) {
      const originalHeight1 = fontSize1;
      const targetHeight1 = originalHeight1+15; // Vertical stretch factor, adjust as needed
      stretchRatio1 = targetHeight1 / originalHeight1;
    } else if (document.querySelector("#text-input").value.length > 40) {
      const originalHeight1 = fontSize1;
      const targetHeight1 = originalHeight1 + 40; // Vertical stretch factor, adjust as needed
      stretchRatio1 = targetHeight1 / originalHeight1;
    } else {
      const originalHeight1 = fontSize1;
      const targetHeight1 = originalHeight1 + 30; // Vertical stretch factor, adjust as needed
      stretchRatio1 = targetHeight1 / originalHeight1;
    }
    ctx.strokeStyle = "black";
ctx.lineWidth = 10;
ctx.lineJoin = "round"; // Use round corners for the stroke
    ctx.save();
    ctx.translate(positionX1, positionY1);
    ctx.scale(1, stretchRatio1);
    ctx.fillStyle = color;
ctx.strokeText(text, 0, 0);
    ctx.fillText(text, 0, 0);
    ctx.restore();
    const fixedpos = 2400;
    const fixedPositionY = 1070; // Fixed position for text2
    let size2 = 600; // Get the value of sizeRange2
    
    // Calculate the desired height increase factor
    const heightIncreaseFactor = 10; // You can adjust this value as needed
    
    // Calculate the transformation matrix for vertical scaling
    const scaleX = 1;
    const scaleY = 1 + heightIncreaseFactor / 100;
    
    ctx.save(); // Save the current state of the canvas
    
    // Apply the vertical scaling transformation
    ctx.scale(scaleX, scaleY);
    
    ctx.font = `${size2}px 'Archivo Black', sans-serif`;
    ctx.fillStyle = "white"; // Set text2 color to white
    
    // Add border to text2
    ctx.lineWidth = 40;
    ctx.strokeText(text2, fixedpos, fixedPositionY);
    ctx.fillText(text2, fixedpos, fixedPositionY);
    
    ctx.restore(); // Restore the saved state of the canvas
    
    let month = monthname;
    let day = dayname;
    
    // Add a new element (PNG) in the middle of the canvas
    let middleX;
    let middleY;
    const pngElement = new Image();
    pngElement.src = `${month}.png`;
    
    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1700;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 4000; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }
    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1800;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =2050;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =2050;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =2050;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 4150; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =2090;
      middleY =780;
    pngElement.onload = () => {
      const pngWidth = 3250; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1890;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =2090;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 3000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1900;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1950;
      middleY =820;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2200; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1900;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3000; // Width of the PNG element
      const pngHeight =2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1850;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1900;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =2050;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =2050;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("vruschika")){
     middleX =2100;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =2090;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1950;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2200; // Width of the PNG element
      const pngHeight = 2100; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1900;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =2050;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2100; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1980;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1950;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2400; // Width of the PNG element
      const pngHeight =1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }






    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1830;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =2100;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =2050;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("tula")){
     middleX =2100;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =2090;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1920;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2100; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1900;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =2000;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1900;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1880;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }





    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1830;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =2100;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =2050;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("kumbha")){
     middleX =2100;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =2090;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1920;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2300; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1900;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1900;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1880;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }



    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1830;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =2000;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =2050;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("midhuna")){
     middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 3600; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =2090;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1870;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2300; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1900;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1900;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1880;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }



    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1830;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =2100;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =2050;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("makara")){
     middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 3600; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =2090;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1870;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1900;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1900;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1880;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }








    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1830;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =2100;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =2050;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("dhanussu")){
     middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 3600; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =2090;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1870;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1900;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1920;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1880;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }



    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1720;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1850;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2950; // Width of the PNG element
      const pngHeight =1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =2050;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 3400; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =2050;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("vrushabha")){
     middleX =2100;
      middleY =910;
    pngElement.onload = () => {
      const pngWidth = 3750; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =2090;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1890;
      middleY =1050;
    pngElement.onload = () => {
      const pngWidth = 2400; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =2090;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1900;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1990;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 2400; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1890;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight =2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1870;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 2700; // Width of the PNG element
      const pngHeight =1400;// Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }




    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1830;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =2100;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =2050;
      middleY =940;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("meena")){
     middleX =2000;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3800; // Width of the PNG element
      const pngHeight = 1500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =2090;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1920;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2100; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1900;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =2000;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1900;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1880;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }




    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1720;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1850;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2950; // Width of the PNG element
      const pngHeight =1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =2050;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 3400; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =2050;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("mesha")){
     middleX =2100;
      middleY =910;
    pngElement.onload = () => {
      const pngWidth = 3750; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =2090;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1890;
      middleY =1050;
    pngElement.onload = () => {
      const pngWidth = 2400; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =2090;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1900;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1990;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 2400; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1890;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight =2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1870;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 2700; // Width of the PNG element
      const pngHeight =1400;// Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }














    // Add new element (PNG) in the middle of the canvas
    let middlesX ;
    let middlesY;
    const pngElements = new Image();
    pngElements.src = `${day}.png`;
    if(`${pngElements.src}`.includes("friday.png")){
      middlesX =1700;
      middlesY =940;
    pngElements.onload = () => {
      const pngWidth = 3000; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElements, middlesX - pngWidth / 2, middlesY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else{
      middlesX =1700;
      middlesY =900;
      pngElements.onload = () => {
        const pngWidth = 3000; // Width of the PNG element
        const pngHeight = 1800; // Height of the PNG element
        ctx.drawImage(pngElements, middlesX - pngWidth / 2, middlesY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
    }








    function updatePreviewCanvas(image) {
      previewCanvas.width = previewContainer.clientWidth;
      previewCanvas.height = (previewContainer.clientWidth / image.width) * image.height;

      const scaleFactor = calculateScaleFactor(
        image.width,
        image.height,
        previewCanvas.width,
        previewCanvas.height
      );
      const previewCtx = previewCanvas.getContext("2d");
      previewCtx.clearRect(0, 0, previewCanvas.width, previewCanvas.height);
      previewCtx.drawImage(canvas, 0, 0, previewCanvas.width, previewCanvas.height);

      // Store the preview image separately
      previewImage = canvas.toDataURL();

      downloadButton.disabled = false;
    }
  }
 

  function calculateScaleFactor(originalWidth, originalHeight, maxWidth, maxHeight) {
    const widthScaleFactor = originalWidth / maxWidth;
    const heightScaleFactor = originalHeight / maxHeight;

    return Math.max(widthScaleFactor, heightScaleFactor, 1);
  }
  setTimeout(() => {
    const link = document.createElement("a");
    link.download = "dailyastrogurujitula";
    link.href = previewImage; // Use the preview image data URL
    link.click();
  }, 6000);
  
  downloadButton.addEventListener("click", () => {
  
  });
let funk = ()=>{
  const link = document.createElement("a");
    link.download = "image";
    link.href = previewImage; // Use the preview image data URL
    link.click();
}


},160000);
setTimeout(() =>{
  

  let daily = [
    {
      title: "అతిపెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "ఈరోజు మీ జీవితంలోనే అతిపెద్ద శుభవార్త!",
      matter: "ఈరోజు మీకు మీ జీవితంలోనే అతిపెద్ద శుభవార్త అందుతుంది దాన్ని విన్న తరవాత మీ ఆనందానికి హద్దులు ఉండవు ",
    },
    {
      title: "ఒక స్త్రీ వల్ల ధనాలభం",
      thumbnail: "ఒక స్త్రీ వల్ల ఇలా ధనాలభం పొందే అవకాశం!",
      matter: "ఈరోజు మీకు మీ జీవిత భాగస్వామి వల్ల ధనాలభం పొందే అవకాశం ఉంది మీరు మాత్రం మీ జీవిత భాగస్వామి ని పూర్తిగా నమ్మాలి శుభం జరుగుతుంది ",
    },
    {
      title: "ఒక స్త్రీ పగబట్టి ఇలా",
      thumbnail: "ఒక స్త్రీ పగబట్టి చేసే ప్రయత్నాలు తెలిస్తే షాక్!",
      matter: "ఈరోజు ఒక స్త్రీ పాత కక్షలు పెట్టుకొని మీ మీద పగబట్టి మిమ్మల్ని ఆర్ధికంగా నష్టపరుచడానికి చెయ్యని ప్రయత్నలంటూ ఉండవు కాని మీ మంచి మనస్సు వల్ల దేవుడు మీ మీద అన్ని ప్రయత్నాలను విఫలం చేస్తారు",
    },
    {
      title: "కొత్త స్త్రీ తో స్నేహం",
      thumbnail: "2 శుభవార్తలు + ఒక కొత్త స్త్రీ తో స్నేహం",
      matter: "ఈరోజు మీరు రెండు పెద్ద శుభవార్తలు వింటారు మరియు అనుకోకుండా మీరు ఒక కొత్త స్త్రీ తో కలిసి ఆకస్మికంగా స్నేహం చేస్తారు",
    },
    {
      title: "పెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "పెద్ద శుభవార్తలు + ఈవిషయంలో జాగ్రత్త",
      matter: "ఈరోజు శుభప్రదంగా ఉంటుంది మీరు ఈరోజు పెద్ద శుభవార్తలు వింటారు ఆ శుభవార్తలు విన్న తరువాత ఆనండంలూ మద్యపానం సేవించడానికి ప్రయత్నాలు చేస్తారు ఇలా చెయ్యకండి మీ ఆరోగ్యం దెబ్బతీస్తుంది జాగ్రత్తగా ఉండండి ",
    },
    {
      title: "ఒక స్త్రీ పగబట్టి ఇలా",
      thumbnail: "ఒక స్త్రీ పగబట్టి ఈవిధంగా చేస్తుంది జాగ్రత్త",
      matter: "ఈరోజు మీ మీద ఒక స్త్రీ పగబట్టి హాని చెయ్యాలని చూస్తున్నారు , మరియు మీ మీద ఒక స్త్రీ ఏడుపు ఉంది మీ వ్యాపారం మరియు అభివృద్ధి మీద ఏడుస్తున్నారు జాగ్రత్తగా ఉండండి",
    },
    {
      title: "బంధువులే మీ సేత్రువులు",
      thumbnail: "మీ బంధువులే మీ సేత్రువులు జాగ్రత్త",
      matter: "మీ బంధువుల్లో కొందరు మీ సేత్రువులు ఉన్నారు వాళ్ళు ఎప్పుడు అవకాశం దొరికితే మిమ్మల్ని నష్టం చెయ్యాలని చూస్తున్నారు ఎవ్వరితో కూడా మీ వ్యాపారం గురించి చెప్పకండి జాగ్రత్తగా ఉండండి వెంనేపోటు పొడుస్తారు",
    }, 
    {
      title: "ఒక స్త్రీ మోసం చేస్తారు",
      thumbnail: "ఒక స్త్రీ ఇలా మోసం చేస్తుంది జాగ్రత్త!",
      matter: "ఈరోజు మీరు ఏంతో నమ్మిన ఒక స్త్రీ మిమ్మల్ని మోసం చేసే అవకాశం ఉంది జాగ్రత్తగా ఉండండి , మీరు మంచివారు కాని అందరు మంచివారు ఉండరు ఎవ్వరిని గుడ్డిగా నమ్మవద్దు",
    },
    {
      title: "ఒక స్త్రీ వల్ల డబ్బులు",
      thumbnail: "ఒక స్త్రీ వలన ఆదాయం + ఈవిషయాల్లో జాగ్రత్త",
      matter: "ఈరోజు మీకు చాలా మంచిరోజు నేడు మీకు మీ జీవిత భాగస్వామి బల్ల ధనాలభం కలుగుతుంది మరియు మీరు మీ జీవిత భాగస్వామి వల్ల చాలా సంతోషంగా ఉంటారు మీ బాధ్యతే ఏంటంటే మీరు కుడా వారిని సంతోషంగా ఉంచండి ",
    },
    {
      title: "స్త్రీ వల్ల శుభవార్తలు",
      thumbnail: "ఒక స్త్రీ వల్ల శుభవార్తలు ! తెలిస్తే షాక్!",
      matter: "ఈరోజు మీకు చాలా మంచిరోజు ఈరోజు మీకు ఒక స్త్రీ వల్ల శుభవార్తలు అందుతాయి ఈలోకంలో మీరే అదృష్టవంతులు అని ఈరోజు మీకు అనిపిస్తుంది మీరు మాత్రం ఆ శుభవార్తలు వినగానే షాక్ అవ్వడం ఖాయం",
    },
    {
      title: "స్త్రీ కాళ్ళ వద్దకు",
      thumbnail: "కోరుకున్న స్త్రీ కాళ్ళ వద్దకు వస్తుంది",
      matter: "ఈరోజు మీరు కూరుకున్న స్త్రీ మీ వ్యాపారం మరియు అభివృద్ధి చూసి వారు మీ కాళ్ళ వద్దకు వస్తారు కాని మీరు మాత్రం మీ వ్యాపారం మరియు అభివృద్ధి ని ఆపకండి ",
    },
    {
      title: "ఒక స్త్రీ మోసం చేస్తారు",
      thumbnail: "ఒక స్త్రీ వెన్నెపాటు పొడుస్తారు జాగ్రత్త!",
      matter: "ఈరోజు మీరు ఎంతగా నమ్మిన ఒక స్త్రీ మిమ్మల్ని మోసం చేస్తారు , దీనివల్ల మీరు మానసికంగా డిప్రెషన్ లోకి పోవచ్చు జాగ్రత్తగా ఉండండి లోకంలో డబ్బే అంత అని తెలుసుకోండి డబ్బు ఉంటె మీరే రాజు మీరే మంత్రి",
    },
    {
      title: "స్త్రీ వల్ల శుభవార్తలు",
      thumbnail: "ఒక స్త్రీ వల్ల శుభవార్తలు ! తెలిస్తే ఎగిరి గంటేస్తారు",
      matter: "ఈరోజు మీరు ఒక స్త్రీ వల్ల శుభవార్తలు అందుకుంటారు ఈలోకంలో మీరే అదృష్టవంతులు అని ఈరోజు మీకు అనిపిస్తుంది మీరు మాత్రం ఆ శుభవార్తలు వినగానే మీరు ఎగిరి గంతెయ్యడం మాత్రం ఖాయం",
    },
    {
      title: "ఒక స్త్రీ వల్ల ఘూరం",
      thumbnail: "ఒక స్త్రీ వల్ల ఘోరం జరుగుతుంది జాగ్రత్త!",
      matter: "ఈరోజు మీరు ఒక స్త్రీ వల్ల భారిగా నష్టపూతారు దీనివల్ల మీరు బాధ పాడుతారు కాని దానివల్ల ఏమి లాభం లేదు ఇప్పటికైనా పోయింది ఏమిలేదు అన్ని మరిచి మీరు మీ లక్ష్యం మీద దృష్తి పెడితే శుభం కలుగుతుంది",
    },
    {
      title: "కుటుంబంలో వీరికి మరనగందం",
      thumbnail: "కుటుంబంలో వీరికి మరణ గండం జాగ్రత్త!",
      matter: "ఈరోజు మీ కుటుంబంలో పెద్దవారిని ఎలెక్ట్రానిక్ వస్తువులనుంచి దూరంగా ఉంచండి ప్రమాదాలు జరిగే అవకాశాలు ఉన్నాయి అప్ప్రమత్తంగా ఉండండి వారి ఆరోగ్యం మీద శ్రెద్ద పెట్టండి శుభం కలుగుతుంది ",
    },
    {
      title: "అందమైన స్త్రీ తో ",
      thumbnail: "ఈరోజు అదృష్టం మీదే! అందమైన స్త్రీ తో",
      matter: "ఈరోజు ఈ మొత్తం ప్రపంచంలో మీరే అదృష్టవంతులు అని మీకు అనిపిస్తుంది ఈరోజు మీరు మీకు నచ్చిన ఇక అందమైన స్త్రీ తో బయటకు వెళ్లి సినిమాలు షికార్లు అని జాలిగా గడుపుతారు",
    },
    {
      title: "స్త్రీ తో మనసులోని మాట",
      thumbnail: "అందమైన స్త్రీ తో మనసులోని మాట చెప్తారు ",
      matter: "ఈరోజు మీరు మీకు నచ్చిన ఒక అందమైన స్త్రీ తో ఎప్పటినుంచో చెప్పాలనుకుంటున్న మీ మనస్సులోని మాట ఈరోజు చెపుతారు మరియు ఇలా చేస్తే ఈరోజు మీరు షాకింగ్ న్యూస్ వింటారు ",
    },
    {
      title: "పెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "పెద్ద శుభవార్తలు + ఒక స్త్రీ పగబట్టి ఇలా చేస్తది",
      matter: "ఈరోజు మీరు పెద్ద శుభవార్తలు వింటారు మరియు ఈరోజు ఒక స్త్రీ పగబట్టి మీ శుభవార్తల మీద ఈర్ష తో నష్టం చెయ్యడానికి ప్రయత్నాలు చేస్తారు కాని మీరు మీ అదృష్టం వల్ల తప్పించుకుంటారు",
    },
    {
      title: "ఒక స్త్రీ తో సరదాగా ఉలా",
      thumbnail: "ఒక స్త్రీ తో సరదాగా ఇలా చేస్తారు...! జాగ్రత్త",
      matter: "ఈరోజు మీరు సరదా కోసం మీ ప్రేయసితో బయటకు పోయి సినిమాలకు రెస్టారెంట్లకు పోయి చివరికి మీరు మీ దగ్గర ఉన్న డబ్బును మొత్తం ఐపోచేస్తారు జాగ్రత్తగా ఉండండి డబ్బును ఈరోజు మీరు ఆదా చేస్తే అవి మీకు రేపు పనికి వస్తాయి",
    },
    {
      title: "స్త్రీ వల్ల ఆనందం",
      thumbnail: "ఒక స్త్రీ వల్ల ఆనందానికి హద్దులు ఉండవు",
      matter: "ఈరోజు మీ జీవితానికి అర్ధమోచ్చే ఒక పెద్ద బంగారు శుభావర్తని మీ జీవిత భాగస్వామి మీకు అందిస్తారు ఈరోజు మీరు ఒక అందమైన స్త్రీ తో జాలిగా గడుపుతారు ఈరోజు ఆ అందమైన స్త్రీ వల్ల ఆకస్మికంగా ధనలాభం పొందే అవకాశం కుడా ఉంది",
    },
    {
      title: "వీరితో గొడవలు జాగ్రత్త",
      thumbnail: "ఈరోజు వీరితో గొడవలు జరుగుతాయి జాగ్రత్త",
      matter: "ఈరోజు మీరు ఎప్పటినుంచో గొడవ పదాలనుకుంటున్న మీ సేత్రువులు మిమ్మల్ని గెలకడంతో మీరు వారితో గొడవ పడొచ్చు కాని గొడవ పరిష్కారం కాదని మీరు తెలుసుకూవాలి కాని గొడవ జరిగితే మాత్రం గెలిసేది మీరే",
    },
    {
      title: "అందమైన స్త్రీ తో ఇలా",
      thumbnail: "ఒక అందమైన స్త్రీ తో సరదాలు + ఆకస్మిక ధనాలభం",
      matter: "ఈరోజు మీరు ఒక అందమైన స్త్రీ తో జాలిగా గడుపుతారు ఈరోజు ఆ అందమైన స్త్రీ వల్ల ఆకస్మికంగా ధనలాభం పొందే అవకాశం కుడా ఉంది",
    },
    {
      title: "స్త్రీ వల్ల నష్టాలు",
      thumbnail: "ఓక స్త్రీ వల్ల భారీగా నష్టపోతారు జాగ్రత్త!",
      matter: "ఈరోజు మీరు మీ జీవిత భాగస్వామి చేసిన ఒక తప్పు వల్ల బిజినెస్ లో భారి నష్టాలను చూస్తారు దీనివల్ల మీరు వారిమీద కోప్పడుతారు ఆఖరికి దీంట్లో వాళ్ళు కావాలని చెయ్యలేదని తెలుసుకొని క్షమిస్తారు",
    },
    {
      title: "ఒక స్త్రీ పగబట్టి ఇలా",
      thumbnail: "ఒక స్త్రీ పగబట్టి ఈవిధంగా చేస్తుంది",
      matter: "ఈరోజు మీ మీద ఎప్పటినుంచో కక్ష పెట్టుకున్న ఒక స్త్రీ ఈరోజు పగతీర్చుకోవడానికి మిమ్మల్ని మానసికంగా హాని చేస్తారు అది కుడా విఫలం అయితే శారీరికంగా హాని చేస్తారు జాగ్రత్తగా ఉండండి ",
    },
    {
      title: "ఒక స్త్రీ తో గొడవలు",
      thumbnail: "ఈరోజు ఒక స్త్రీ తో గొడవలు జరుగుతాయి",
      matter: "ఈరోజు మీకు ఒక స్త్రీ తో గొడవలు జరుగుతాయి మీరు ఎంత ఒద్దు అనుకున్న గొడవలు తప్పవు దీనిని ద్రుష్టిలో పెట్టుకొని మీరు గొడవని ఆపలేరు అయితే మీరు కోపంలో మీరు చెప్పే మాటలపై మీరు తరువాత ఆందోళన పాడుతారు జాగ్రత్త key",
    },
    {
      title: "స్త్రీ తో మనసులోని మాట",
      thumbnail: "ఒక స్త్రీ తో మనసులోని విషయం మాట్లాడతారు",
      matter: "ఈరోజు మీరు ఒక స్త్రీ తో మీ మనసులోని మాట మాట్లాడుతారు మీరు వారిని ఇష్టపడుతున్నారని వారితో చెపుతారు ఈవిషయం చెప్పినతరువాత మీకు ఒక షాకింగ్ వార్త అందుతుంది జాలిగా గడుపుతారు",
    },
    {
      title: "జీవితంలో ఒక స్త్రీ ఎంట్రీ",
      thumbnail: "మీ జీవితంలో ఒక స్త్రీ ఎంట్రీ .. అన్ని శుభవర్తలే",
      matter: "ఈరోజు మీ జీవితంలో ఒక కొత్త స్త్రీ వస్తుంది తను చాల బుద్ధిమంతురాలు మరియు అందానికి యువరాణి మీకు ఆ స్త్రీ చాల నచ్చుతుంది మరియు మీరు ఆ స్త్రీ తో స్నేహం కూడా చెయ్యడానికి ప్రయత్నాలు చేస్తారు",
    },
    {
      title: "ఒక స్త్రీ వల్ల మోసపోతారు",
      thumbnail: "ఒక స్త్రీ ని గుడ్డిగా నమ్మవద్దు! మీరు మోసపోవచ్చు",
      matter: "మీరు ప్రాణంగా ప్రేమించిన స్త్రీ ఈరోజు మిమ్మల్ని విదిచిపోవడంతో మీరు తట్టుకోలేరు మీరు డిప్రెషన్ లో కూడా పోవచ్చు కాని అదే సమయంలో మీ తల్లితండ్రులవల్ల మీకు జీవితం అంటే ఒక అర్ధం ఒస్తుంది వారి కోసమే బ్రతుకుతారు",
    },
    
    {
      title: "స్త్రీ వల్ల బంగారు శుభవార్త",
      thumbnail: "ఒక స్త్రీ వల్ల బంగారు శుభవార్తలు + ఇలా చేయకండి",
      matter: "ఈరోజు మీ జీవితానికి అర్ధమోచ్చే ఒక పెద్ద బంగారు శుభావర్తని మీ జీవిత భాగస్వామి మీకు అందిస్తారు ఆ శుభవార్త మీ జీవితాన్నే మార్చేస్తుంది కాబట్టి ఈరోజు మీరు ఆనందంలో మీరు ఎం చేయ్యలనుకున్తున్నారో ఆ పనులన్నీ చేసేస్తారు",
    },
  
    {
      title: "ప్రియమైన స్త్రీ ని కలుస్తారు",
      thumbnail: "ఒక ప్రియమైన స్త్రీ ని కలుస్తారు + ఆకస్మిక ధనాలభం",
      matter: "ఈరోజు మీరు మీకు ఏంటో ప్రియమైన స్త్రీ ని కలుస్తారు కలిసి సరదాగా మాట్లాడుకుంటారు ఇంకా ఈరోజు చివరిలో మీకు ఆకస్మిక ధనలాభం కలుగడంతో మీ ఆనందానికి హద్దులు ఉండవు ఆనందంలో పార్టి కూడా చేసుకుంటారు",
    },
    {
      title: "2 పెద్ద శుభవార్తలు",
      thumbnail: "2 పెద్ద శుభవార్తలు + ఈవిషయంలో జాగ్రత్త!",
      matter: "ఈరోజు మీరు ఎప్పటినుండో ఎదురుచూస్తున్న శుభవార్త వింటారు మరియు మీరు అనుకోకుండా ఒక స్త్రీ వల్ల ఇంకొక శుభవార్తలు అందుకుంటారు సంతోషంలో మీరు మద్యం సేవించవచ్చు ఇలా చెయ్యకండి జాగ్రత్త",
    },
    {
      title: "ఒక స్త్రీ వల్ల గొడవలు",
      thumbnail: "ఒక స్త్రీ వల్ల గొడవలు + ఆకస్మిక సంఘటనలు",
      matter: "ఈరోజు మీరు మీకు నచ్చిన ఒక స్త్రీ కోసం వేరే వాళ్లతో గొడవలలో పలుగోనతారు కాని ఆకస్మికంగా ఆ గొడవ చాల పెద్దగా కావడంతో మీరు గొడవని ముగించడానికి ప్రయత్స్తారు కాని మీరు జాగ్రత్తగా ఉండాలి దెబ్బలు కూడా తగలోచ్చు",
    },
    {
      title: "స్త్రీ వల్ల ప్రమాదాలు",
      thumbnail: "ఒక స్త్రీ వల్ల ప్రమాదాలు ముంచుకోస్తున్నాయి జాగ్రత్త",
      matter: "ఈరోజు మీకు ఒక స్త్రీ వల్ల ప్రమాదాలు మున్చుకోస్తునాయి కాబట్టి మీరు అప్ప్రమత్తంగా ఉండండి వాహనాలు నడిపెటప్పుడు ఒక స్త్రీ ని ఆకర్షించడానికి మీరు మీ వాహనాన్ని అతివేగంలో నడుపుతారు దీనివల్ల ప్రమాదం కూడా జరుగవచ్చు",
    },
    {
      title: "ఒక స్త్రీ నష్టం చేస్తారు",
      thumbnail: "ఒక స్త్రీ ఈవిధంగా నష్టం చేస్తున్నారు + ఇలా చెయ్యండి",
      matter: "మీరు మిమ్మల్ని ప్రేమిస్తున్నారు అనుకుంటున్నా స్త్రీ మీదగ్గర మీ డబ్బుకోసమే ఉన్నారు . ఈరోజు బయట ఆ స్త్రీ మిమ్మల్ని షాపింగ్ కు తెసుకేల్లి మీ లక్షలు నష్టం చేస్తారు జాగ్రత్త",
    },
    {
      title: "మంచి శుభవార్తలు ఉన్నాయి",
      thumbnail: "మంచి శుభవార్తలు + ఈవిషయాల్లో జాగ్రత్త",
      matter: "ఈరోజు మీ జీవితానికి అర్ధమోచ్చే ఒక పెద్ద బంగారు శుభావర్తని మీ జీవిత భాగస్వామి మీకు అందిస్తారు ఆ శుభవార్త మీ జీవితాన్నే మార్చేస్తుంది  సంతోషంలో మీరు మద్యం సేవించవచ్చు ఇలా చెయ్యకండి జాగ్రత్త",
    },
    {
      title: "ఒక స్త్రీ తో గొడవ",
      thumbnail: "ఈరోజు ఒక స్త్రీ తో గొడవ జరుగుతుంది జాగ్రత్త",
      matter: "ఈరోజు మీకు ఒక స్త్రీ తో ఆస్తి మరియు దనం విషయంలో గొడవలు జరుగుతాయి కాని గొడవలో మీరు నూరు జారి చెప్పకుదని మాటలు చెపుతారు గొడవ తరువాత మీరు ఎందుకుచేప్పరని బాధపడి ఆ స్త్రీ తో క్షమాపణ అడుగుతారు దీని బదులు మీరు ముందే నూరు అదుపులో పెట్టుకోండి",
    },
    {
      title: "సేత్రువులు ఇలా చేస్తారు",
      thumbnail: "రహస్య సెత్రువులు ఈవిధంగా చేస్తున్నారు జాగ్రత్త",
      matter: "ఈరోజు రహస్య సేత్రువులు మీకు తెలియకుండానె మిమ్మల్ని ఆర్ధికంగా మరియు మీ కుతుమ్బంన్ని హాని చెయ్యడానికి చెయ్యని ప్రయత్నలుండవు కాబట్టి మీరు ముందే జాగ్రత్తగా ఉండండి ఎవ్వరిని గుడ్డిగా నమ్మవద్దు మోసపోవచ్చు",
    },
    {
      title: "అమ్మాయి కాళ్ళ వద్దకు",
      thumbnail: "అందమైన అమ్మాయి మీ కాళ్ళ వద్దకు వస్తుంది",
      matter: "ఈరోజు మీ స్వప్న సుందరి మీ ఉన్నత చదువులు మరియు వ్యాపారంలో అభివృద్ధి చూసి ఒచ్చి మీ కాళ్ళ వద్దకు పడుతది . ఈరోజు మీరు పడ్డ కష్టం వ్యర్ధం కాలేదని మీరు తెలుసుకుంటారు వ్యాపారం మరియు చదువులూ ఇంకా ముందుకు సాగాలని మీకు మోటివేషన్ దొరుకుతుంది",
    },
    {
      title: "స్త్రీ వల్ల పెద్ద శుభవార్త",
      thumbnail: "ఒక స్త్రీ వల్ల పెద్ద శుభవార్త + ఆకస్మిక ధనాలభం",
      matter: "ఈరోజు మీకు ఒక స్త్రీ వల్ల పెద్ద శుభవార్త అందుతుంది మరియు వార్త వినంగానే మీ మడ్ ఒక్కసారిగా మంచిగా మారడంతో మీరు మీ పార్టనర్ తో కలిసి సినిమాకు పోతారు మరియు రాత్రి సమయంలో మీకు ధనలాభం కలుగుతుంది ",
    },
    {
      title: "స్త్రీ తో సరదాగా ఉలా",
      thumbnail: "ఒక స్త్రీ తో కలిసి సరదాగా చేసే పనులు తెలిస్తే షాక్ !",
      matter: "ఈరోజు మీరు టైం పాస్ చెయ్యడానికి ఒక స్త్రీ తో కలిసి ఒక మంచి రెస్టారెంట్ కు వెళ్లి భూజనం చెయ్యడం ఇష్టపడుతారు మరియు సినిమాకు పోయి జాలిగా గడుపుతారు ఈరోజు మీకు ఎప్పటికి గుర్తుండిపోయేలా గడుపుతారు",
    },
    {
      title: "సెత్రువులు ఇలా చేస్తారు",
      thumbnail: "పెద్ద శుభవార్తలు + సెత్రువులు ఇలా చేస్తారు",
      matter: "ఈరోజు మీకు చాల పెద్ద శుభవార్తలు అందుతాయి దీనితో మీరు చాల సంతోషంగా ఉంటారు మీ సంతోషం మీ సేత్రువులు చూడలేరు వారు మీకు ఎదో ఒక హాని చెయ్యాలని చూస్తారు కాని రోజు ఆకరికి ఏమి చెయ్యలేక అలిసి వెళ్ళిపోతారు",
    },
    {
      title: "ప్రాణగండం ఉంది జాగ్రత్త",
      thumbnail: "వీరితో గొడవలు + ప్రాణగండం ఉంది జాగ్రత్త",
      matter: "ఈరోజు మీకు మీ సేత్రువులతో గొడవలు జరుగుతాయి మరియు మీరు ఈరోజు మీ కోపాన్ని అడుపులూ ఉంచాలి లేదంటే మీకు గొడవలో తీవ్ర గాయలవల్ల ప్రాణగండం ఉంది దేవుడ్ని స్మరించండి గొడవ దేనికి కూడా సమాధానం కాదు అని మీరు తెలుసుకోవాలి",
    },
    {
      title: "స్త్రీ వల్ల పండగలు",
      thumbnail: "ఒక స్త్రీ వల్ల ఈరోజు పండుగలా ఉంటుంది",
      matter: "ఈరోజు ఒక స్త్రీ వల్ల వేడుకలా ఉంటుంది మీకు నచ్చిన స్త్రీ తో ఈరోజు మీరు బయటకు పోతారు మరియు వారితో సినిమాలకు పోయి జాలిగా గడుపుతారు ఆ స్త్రీ వల్ల రోజు చివర్లో ధనాలభం కూడా కావొచ్చు శుభం కలుగుతుంది ",
    },
    {
      title: "స్త్రీ మోసం చేస్తుంది",
      thumbnail: "ఒక స్త్రీ ఇలా మోసం చేస్తది + ఇలా చెయ్యండి",
      matter: "ఈరోజు మీరు గుడ్డిగా నమ్మిన ఒక స్త్రీ మిమ్మల్ని మోసం చేస్తది దేనిని మీరు తట్టుకోలేరు కోపంలూ మీరు డిప్రెషన్ లో కూడా పోవచ్చు కాని మీ తల్లి తండ్రులకు ఈ విషయం తెలిసి వారు మిమ్మల్ని దీని నుండి బయటకు తెస్తారు",
    },
    {
      title: "స్త్రీ మీ కాళ్ళ వద్దకు",
      thumbnail: "ఒద్దు అన్న స్త్రీ మీ కాళ్ళ వద్దకు వస్తుంది",
      matter: "మీ దగ్గర డబ్బులు లేవు మీరు బిచ్చగాల్లు అని మిమ్మల్ని వదిలి పాయిన ఆ స్త్రీ ఈరోజు మీ అభివృద్ధి మరియు మీ ఉన్నత చదువులు చూసి మల్లి మీ కాళ్ళ వద్దకు ఒస్తుంది మల్లి తనను దగ్గరుకు తెసుకున్తారా? కామెంట్ లో చెప్పండి  ",
    },
  
    {
      title: "పెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "పెద్ద శుభవార్తలు ఉన్నాయి + స్త్రీ వల్ల పండుగ",
      matter: "ఈరోజు మీకోసం పెద్ద శుభవార్తలు ఎదురుచుస్తునాయి మీరు పడ్డ కష్టానికి ప్రతిఫలం ఈరోజు మీకు శుభవార్త అందుతుంది మరియు మీ అభివృద్ది ని చూసి ",
    },
    {
      title: "స్త్రీ వల్ల ధనలాభం",
      thumbnail: "అందమైన స్త్రీ వల్ల ధనలాభం + పెద్ద శుభవార్త",
      matter: "ఈరోజు ఒక అందమైన స్త్రీ వల్ల ధనాలభం కలుగుతుంది ఇంకా రోజు మధ్యలో మీకు పెద్ద శుభవార్త అందుతుంది మీకు ఆ శుభవార్త అందుతదని మీరు కలలో కూడా ఉహించి ఉండరు కాని మీ అదృష్టం వల్ల మీకు ఆ శుభవార్తః అందుతుంది ",
    },
    {
      title: "కుటుంబంలో వీరికి ప్రాణగండం",
      thumbnail: "మీ కుటుంబంలో వీరికి ఇలా ప్రాణగండం జాగ్రత్త",
      matter: "ఈరోజు మీ కుటుంబంలో వ్రుదుల అనారోగ్యం వల్ల వారికి ప్రాణగండం ఉంది కాబట్టి పుష్టిక ఆహారాన్ని సేవించాలి మరియు దేవుడ్ని స్మరించాలి మీరు చేసిన పుణ్యకార్యాల వల్ల దేవుడు మీ గండాన్ని తొలగిస్తారు శుభం జరుగుతుంది",
    },
    {
      title: "స్త్రీ వల్ల శుభవార్తలు",
      thumbnail: "మీరు ఊహించని స్త్రీ శుభవార్తలు చెప్తారు ",
      matter: "ఈరోజు మీరు కలలో కూడా ఉహించని ఒక అందమైన స్త్రీ నోటితో మీరు శుభావర్తలు వింటారు ఈవార్త వినగానే మీ మనస్సు గాలిలో తేలినట్లు అయిపోతుంది మీరు మీ బంధువులందరితో ఈ వార్తని పంచుకుంటారు జాలిగా గడుపుతారు",
    },
    {
      title: "స్త్రీ మీ కాళ్ళ వద్దకు",
      thumbnail: "మీరు కావాలనుకున్న స్త్రీ మీ కాళ్ళ వద్దకు",
      matter: "ఈరోజు మీరు ఎప్పటినున్డూ కోరుకుంటున్న స్త్రీ మీ అదృష్టం కొద్ది మీ దగ్గర సహాయం కోరుతూ వస్తుంది మీరు కాని తనకు సహాయం చేస్తే మాత్రం మీ ఇద్దరి మధ్య బంధం ఇంకా గట్టిపడుతుంది కాని ఆ సహాయం చెయ్యడానికి కొద్దిగా శ్రీమ పడాల్సి ఉంటది",
    },
  
    {
      title: "పెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "పెద్ద శుభవార్తలు + ఒక స్త్రీ ఇలా చేస్తుంది",
      matter: "ఈరోజు మీకు మీరు ఎన్నో సంవచరాల నుండి ఎదురుచూస్తున్న శుభవార్త ఒకటి అందడం వల్ల మీరు సంతోషంగా ఎగిరి గంతులేస్తారు మరియు మీ మిత్రులకి పార్టి ఇస్తారు మొత్తానికి ఈరోజు జాలిగా గడుపుతారు కాని ఆ శుభవార్త మీ జీవితాన్ని మార్చేస్తుంది",
    },
    {
      title: "ఒక స్త్రీ మోసం చేస్తారు",
      thumbnail: "ఒక స్త్రీ మిమ్మల్ని ఈవిధంగా మోసం చేస్తున్నారు",
      matter: "ఈరోజు మీరు కళ్ళు ముసి నమ్మిన ఒక స్త్రీ మిమ్మల్ని వెంనేపోటు పొడుస్తారు మిమ్మల్ని కాదని మోసం చేస్తారు దీనితో మీరు చాల బాధ పాడుతారు కాని మీ తల్లితండ్రులు మీకు సపోర్టుగా ఉంటారు దీనివల్ల వాళ్ళని మించిన వారు లేరని మీకు తెలుస్తుంది",
    },
    {
      title: "స్త్రీ తో మనసులోని మాట",
      thumbnail: "నచ్చిన స్త్రీ తో మీ మనసులోని మాట చెపుతారు",
      matter: "మీరు ప్రతిరోజూ కలలో చూసే మీకు నచ్చిన ఒక స్త్రీ తో ఈరోజు మీరు మీ మనస్సులోని మాట చెపుదామని మీరు ఫిక్స్ అవుతారు ఇలా చెయ్యడానికి ఇదే సరైన సమయం శుభవార్తలు కూడా అందవచ్చు ఏది జరిగినా మన మంచికే అని గుర్తుపెట్టుకోండి ",
    },
    {
      title: "ఎవరంలో ఇలా జరిగిద్ది",
      thumbnail: "ఈవారంలో ఏం జరుగుతుందో తెలిస్తే షాక్",
      matter: "ఈవారంలో మీ వృత్తికి మీరే రాజు మీరే మంత్రి బిజినెస్ లో మిమ్మల్ని మించినోల్లు ఎవ్వరు ఉండరు కొత్త స్త్రీ తో పరిచయాలు జరుగుతాయి మరియు ధనాలభం కలుగుతుంది",
    },
    {
      title: "వీరే మీ సెత్రువులు",
      thumbnail: "వీరే మీ సెత్రువులు + ఒక స్త్రీ తో జాగ్రత్త",
      matter: "ఈరోజు మీరు మీ సేత్రువుల పేర్లు తెలుసుకుంటారు మరియు ఒక స్త్రీ మీ రహస్య సేత్రువు మీకు ఇప్పటివరుకు కలిగిన హాని మొత్తం మీ సేత్రువులనుంచే అని ఈరోజు మీకు తెలిసి వస్తుంది అప్ప్రమత్తంగా ఉండండి",
    },
    {
      title: "స్త్రీ కాళ్ళ వద్దకు",
      thumbnail: "మీరు ఒద్దు అని విడిచిపోయిన స్త్రీ కాళ్ళ వద్దకు",
      matter: "మీరు డబ్బు లేనివారు అని మిల్లల్ని చులకనగా చుసిన ఒక స్త్రీ ఈరోజు మీ వ్యాపారం మరియు అభివృద్ధి చూసి మల్లి మీ కాళ్ళ వద్దకు వస్తుంది కాని వచ్చిన తరువాత మీరు మీ దృష్టి ని అటు మల్లిన్చాకండి మీ వ్యాపారాన్ని ఇంకా పెంచుతూనే ఉండాలి",
    },
    {
      title: "ఒక స్త్రీ వల్ల శుభవార్తలు",
      thumbnail: "ఒక స్త్రీ వల్ల అతిపెద్ద శుభవార్తలు తెలిస్తే షాక్",
      matter: "ఈరోజు మీ జీవితంలూ ఎప్పుడు అందని శుభవార్తలు ఈరోజు మీకు ఒక స్త్రీ వల్ల అందుతాయి వాటిని విని మీరు ఎగిరి గంతులేస్తారు మీ ఆనందానికి హద్దులు ఉండవు ఆ శుభవార్తలు మీ జీవితాన్నే మార్చేస్తాయి రెడీగా ఉండండి ",
    },
    {
      title: "ఒక స్త్రీ పగబట్టి ఇలా",
      thumbnail: "ఒక స్త్రీ పగబట్టి చేసే ప్రయత్నాలు చుస్తే చాక్",
      matter: "ఈరోజు మీపైన ఎంతోకాలంగా కక్షగుడి మీ ప్రానసేత్రువు ఒక స్త్రీ మిమ్మల్ని అన్ని విధాలుగా హాని చెయ్యడానికి ప్రయత్నాలు చేస్తారు కాని మీరు చాలా ధైర్యవంతులు కావడంతో మీరు వాటన్నిటినుంచి సులభంగా తప్పించుకుంటారు ",
    },
    {
      title: "పెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "పెద్ద శుభవార్తలు ఉన్నాయి వీరు నక్కతోకతొక్కారు",
      matter: "ఈరోజు మీరునక్కతోకతొక్కారు మీకు ఈరోజు పెద్ద శుభవార్తలు అందుతాయి వాటిని విని మీ మనసు గాలిలో తేలడం మాత్రం ఖాయం ఈరోజు మీకు శుభవార్తలు విన్న తరువాత ఆనదందానికి హద్దులు ఉండవు ఎగిరి గంతులు వేస్తారు",
    },
    {
      title: "ఒక స్త్రీ వల్ల ప్రాణగండం",
      thumbnail: "ఒక స్త్రీ వల్ల ప్రాణగండం + ఈవిషయాల్లో జాగ్రత్త",
      matter: "ఈరోజు మీకు ఒక స్త్రీ వల్ల ప్రాణగండం ఉంది ఎలా అంటే ఈరోజు మీరు ఒక స్త్రీ ని ఆకట్టుకోవడానికి వాహనాన్ని అతివేగంతో నడుపడంతో మీకు ఆపదలు జరిగే అవకాశం ఉంది జాగ్రత్తగా ఉండండి మరియు వాహనాన్ని ఇంటిదగ్గర మీకోసం ఎదురుచూస్తున్నా వాళ్ళ కోసం నెమ్మదిగా తోలండి",
    },
    {
      title: "స్త్రీ తో ఇలా చేస్తారు",
      thumbnail: "శుభవార్త తెలిస్తే ఎగిరి గంటెస్తారు ఒక స్త్రీ తో",
      matter: "ఈరోజు మీ రోజువారి బ్రతుకులూ ఒక్కసారిగా పెద్ద శుభవార్త ఒకటి అందడంవల్ల మీరు మీ ప్రేయసితో కలిసి ఎంజాయ్ చెయ్యడానికి బయటకు సినిమాలు అని షికార్లకు పోతారు ఈరోజు మీ జీవితంలో ఎప్పటికి గుర్తుండిపోతుంది",
    },
    {
      title: "స్త్రే తో సరదాగా ఉలా",
      thumbnail: "అందమైన స్త్రీ తో సరదా కోసం ఇలా చేస్తారు ",
      matter: "ఈరోజు మీకు చాల అదృష్టమైన రోజు మీరు కలలో కూడా ఉహించని అందమైన స్త్రీ తో ఈరోజు మీరు సరదాగా షికారుకు వెళ్లి జాలిగా గడుపుతారు మరియు మీ ఇద్దరి బంధం దీనివల్ల ఇంకా ద్రుదపడుతుంది",
    },
    {
      title: "ఒక స్త్రీ కాళ్ళ దగ్గర",
      thumbnail: "శుభవార్త ! ఒక స్త్రీ ఈరోజు మీ కాళ్ళ దగ్గర",
      matter: "ఈరోజు శుభవార్త అందుతుంది మీరు పేదవాళ్ళు అని మిమ్మల్ని వదిలిపొఇన ఒక స్త్రీ ఈరోజు మీ అభివృద్ధి మరియు దానం చూసి మల్లి మీ కాళ్ళ దగ్గర రావడం ఖాయం",
    },
    {
      title: "స్త్రీ వల్ల గుండెలుపగిలే వార్త",
      thumbnail: "ఒక స్త్రీ వల్ల గుండెలు పగిలే వార్తలు జాగ్రత్త",
      matter: "ఈరోజు మీరు ఎంతగా నమ్మిన స్త్రీ తరుపునుంచి మీకు గుండెలు పగిలే వార్తలు వింటారు ఆ వార్తలు ఏంటంటే వారి ఆరోగ్యం అస్సలు బాగాలేదు మరియు ఆసుపత్రిలూ వారికి చాల ఖర్చులు ఉన్నాయి ఇది విన్న తరువాత మీరు వారిని ఆర్ధికంగా సహాయం చేస్తారు",
    },
    {
      title: "ఒక స్త్రీ మిమ్మల్ని హాని",
      thumbnail: "ఒక స్త్రీ ఇలా హాని చేస్తుంది ఇప్పుడే తెలుసుకోండి",
      matter: "ఈరోజు మీకు ఒక స్త్రీ పగబట్టి శారీరికంగా హాని చెయ్యడానికి చెయ్యని ప్రయత్నాలు ఉండవు కావున మీరు బయటకు వెళ్ళేటప్పుడు దేవుడ్ని స్మరించి జాగ్రత్తగా వెళ్ళండి మీకు ఎలాంటి హాని కలగదు",
    },
    {
      title: "మీ మీద స్త్రీ దృష్టి",
      thumbnail: "మీ మీద ఒక స్త్రీ చేసుదృష్టి జాగ్రత్త",
      matter: "మీ మీద ఒక స్త్రీ చేడుద్రుష్టి ఈలోకంలో చేడుద్రుష్టి అనేది ఒక రాజుని కూడా బిచ్చగాడు లా చెయ్యొచ్చు మీ సంపద మీద ఒక స్త్రీ ఏడుస్తుంది ఇది మీరు జాగ్రత్తగా ఉండాల్సిన సమయం అప్ప్రమత్తంగా ఉండండి",
    },
    {
      title: "ఒక స్త్రీ వల్ల శుభవార్తలు",
      thumbnail: "అన్ని శుభవార్తలే మీ జీవితంలో ఒక స్త్రీ ఎంట్రీ",
      matter: "ఎప్పటినుండో బ్రేక్ లో ఉన్న మీ జీవితం ఒక స్త్రీ రావడంతో దూసుకుపోతుంది , అవును ఈరోజు మీకు అన్ని శుభవార్తలు అందుతాయి మరియు మీ జీవితంలూ ఒక స్త్రీ ఎంట్రీ ఇస్తుంది ",
    },
    {
      title: "స్త్రీ వల్ల పెద్ద శుభవార్తలు",
      thumbnail: "ఒక స్త్రీ వల్ల 3 పెద్ద శుభవార్తలు + ఇలా చెయ్యకండి",
      matter: "ఈరోజు మీరు ఒక స్త్రీ వల్ల మూడు పెద్ద శుభావర్హలు అందుకుంటారు మరియు శుభవార్తలు అందుకున్న వెంటనే మీరు ఆ విషయాలను మీ తల్లి తండ్రులకు ముందుగా చెపుతారు ఎందుకంటే ఈలోకంలో వారిని మించి మీకు ఎవ్వరు లేరు",
    },
  ];
  const today = new Date();
  let tomorrow = new Date(today);
  tomorrow.setDate(tomorrow.getDate() + 2);

  let dayOfWeekIndex = tomorrow.getDay();
  let dayOfWeekArray = [
    "sunday",
    "monday",
    "tuesday",
    "wednesday",
    "thursday",
    "friday",
    "saturday"
  ];

  

  let monthIndex = tomorrow.getMonth();
  let monthArray = [
    "january",
    "february",
    "march",
    "april",
    "may",
    "june",
    "july",
    "august",
    "september",
    "october",
    "november",
    "december",
  ];
let count = Number(localStorage.getItem("count") )|| 23;
  let dayname = dayOfWeekArray[dayOfWeekIndex];
  let monthname = monthArray[monthIndex];
  let datenumber = tomorrow.getDate().toString().padStart(2, "0");

  const textInput = document.getElementById("text-input");
  const textInput2 = document.getElementById("text-input2");
  const fontSelect = document.getElementById("text-input");
  const colorSelect = document.getElementById("color-select");
  const sizeRange1 = document.getElementById("size-range-1");
  const sizeRange2 = document.getElementById("size-range-2");
  const positionRangeX = document.getElementById("position-range-x");
  const previewContainer = document.getElementById("preview-container");
  const previewCanvas = document.getElementById("preview-canvas");
  const downloadButton = document.getElementById("download-button");
textInput2.value = datenumber;

const DailyOnceSet = function(){

  let currentDate = new Date();
  let currentDay = currentDate.getDate();
    localStorage.setItem('thumbdate', currentDay);
  }
  const Shiftdown = function () {
    let today = new Date().getDate();
    let yesterday = localStorage.getItem('thumbdate') || "";
    if(today!=yesterday){
      if(Number(localStorage.getItem("count"))+1>daily.length){
        localStorage.setItem("count",0);
      }
      else{
        
      localStorage.setItem("count",++count);
      localStorage.setItem("var4",daily[count].thumbnail);
      localStorage.setItem("var3", daily[count-1].thumbnail)
      localStorage.setItem("var2", daily[count-2].thumbnail)
      localStorage.setItem("var1", daily[count-3].thumbnail)



      }
    }  
  }

Shiftdown();
DailyOnceSet();

let var4 = localStorage.getItem("var4");
let var3;
let var2;
let var1;
if (count ==0){
  localStorage.setItem("var3", daily[67].thumbnail)
  var3 = localStorage.getItem("var3");
  localStorage.setItem("var2", daily[66].thumbnail)
  var2 = localStorage.getItem("var2");
  localStorage.setItem("var1", daily[65].thumbnail)
  var1 = localStorage.getItem("var1");
}
else if(count ==1){
  localStorage.setItem("var3", daily[0].thumbnail)
  var3 = localStorage.getItem("var3");
  localStorage.setItem("var2", daily[67].thumbnail)
  var2 = localStorage.getItem("var2");
  localStorage.setItem("var1", daily[66].thumbnail)
  var1 = localStorage.getItem("var1");
}
else if(count ==2){
  localStorage.setItem("var3", daily[1].thumbnail)
  var3 = localStorage.getItem("var3");
  localStorage.setItem("var2", daily[0].thumbnail)
  var2 = localStorage.getItem("var2");
  localStorage.setItem("var1", daily[67].thumbnail)
  var1 = localStorage.getItem("var1");
}
else{
  var3 = localStorage.getItem("var3");
  var2 = localStorage.getItem("var2");
  var1 = localStorage.getItem("var1");
}
document.getElementById("var1").value = var1;
document.getElementById("var2").value = var2;
document.getElementById("var3").value = var3;
document.getElementById("var4").value = var4;

  let currentImage = null;
  let previewImage = null;
  let fontSize1;
  // Load default image
  const defaultImage = new Image();
  //!

  textInput.value = var4;
  defaultImage.src  = "bhaktimediastudiosimha.jpg" 

  

 
  
  
  
  
  defaultImage.onload = () => {
    currentImage = defaultImage;
    updatePreview();
  };

  textInput.addEventListener("input", () => {
    updatePreview();
  });

  textInput2.addEventListener("input", () => {
    updatePreview();
  });

  fontSelect.addEventListener("input", () => {
    updatePreview();
  });

  colorSelect.addEventListener("input", () => {
    updatePreview();
  });

  sizeRange1.addEventListener("input", () => {
    updatePreview();
  });

  sizeRange2.addEventListener("input", () => {
    updatePreview();
  });

  positionRangeX.addEventListener("input", () => {
    updatePreview();
  });

  function updatePreview() {
    if (!currentImage) return;

    const text = textInput.value;
    const text2 = textInput2.value;
    const color = "white"; // Set text2 color to white
    const canvas = document.createElement("canvas");
    const ctx = canvas.getContext("2d");

    const image = currentImage;

    canvas.width = image.width;
    canvas.height = image.height;

    ctx.drawImage(image, 0, 0);

    const positionX1 = 10; // Fixed X-coordinate for text1 (leftmost position)
    const positionY1 = 1730; // Fixed Y-coordinate for text1 (bottom - 600 pixels up)

    fontSize1 = 250; // Initial font size for text1
    ctx.font = `${fontSize1}px 'Anek Telugu'`;
    let textWidth = ctx.measureText(text).width;

    // Decrease font size until the text fits within the canvas width
    while (textWidth > canvas.width - 1) {
      fontSize1 -= 1;
      ctx.font = `${fontSize1}px 'Anek Telugu'`;
      textWidth = ctx.measureText(text).width;
    }

    let stretchRatio1;
    // Calculate vertical stretch factor for text1
    if (document.querySelector("#text-input").value.length > 48) {
      const originalHeight1 = fontSize1;
      const targetHeight1 = originalHeight1 + 100; // Vertical stretch factor, adjust as needed
      stretchRatio1 = targetHeight1 / originalHeight1;
    } else if (document.querySelector("#text-input").value.length < 30) {
      const originalHeight1 = fontSize1;
      const targetHeight1 = originalHeight1+15; // Vertical stretch factor, adjust as needed
      stretchRatio1 = targetHeight1 / originalHeight1;
    } else if (document.querySelector("#text-input").value.length > 40) {
      const originalHeight1 = fontSize1;
      const targetHeight1 = originalHeight1 + 40; // Vertical stretch factor, adjust as needed
      stretchRatio1 = targetHeight1 / originalHeight1;
    } else {
      const originalHeight1 = fontSize1;
      const targetHeight1 = originalHeight1 + 30; // Vertical stretch factor, adjust as needed
      stretchRatio1 = targetHeight1 / originalHeight1;
    }
    ctx.strokeStyle = "black";
ctx.lineWidth = 10;
ctx.lineJoin = "round"; // Use round corners for the stroke
    ctx.save();
    ctx.translate(positionX1, positionY1);
    ctx.scale(1, stretchRatio1);
    ctx.fillStyle = color;
ctx.strokeText(text, 0, 0);
    ctx.fillText(text, 0, 0);
    ctx.restore();
   const fixedpos = 2400;
      const fixedPositionY = 830; // Fixed position for text2
      let size2 = 620; // Get the value of sizeRange2
      
      // Calculate the desired height increase factor
      const heightIncreaseFactor = 40; // You can adjust this value as needed
      
      // Calculate the transformation matrix for vertical scaling
      const scaleX = 1;
      const scaleY = 1 + heightIncreaseFactor / 100;
      
      ctx.save(); // Save the current state of the canvas
      
      // Apply the vertical scaling transformation
      ctx.scale(scaleX, scaleY);
      
      ctx.font = `${size2}px 'Archivo Black', sans-serif`;
      ctx.fillStyle = "white"; // Set text2 color to white
      
      // Add border to text2
      ctx.lineWidth = 40;
      ctx.strokeText(text2, fixedpos, fixedPositionY);
      ctx.fillText(text2, fixedpos, fixedPositionY);
      
      ctx.restore(); // Restore the saved state of the canvas
      
      let month = monthname;
      let day = dayname;
      
      // Add a new element (PNG) in the middle of the canvas
      let middleX;
      let middleY;
      const pngElement = new Image();
      pngElement.src = `${month}.png`;
      
    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1700;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 4000; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }
    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1800;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =2050;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =2050;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =2050;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 4150; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =2090;
      middleY =780;
    pngElement.onload = () => {
      const pngWidth = 3250; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1890;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =2090;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 3000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1900;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1950;
      middleY =820;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2200; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1900;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3000; // Width of the PNG element
      const pngHeight =2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1850;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1900;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =2050;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =2050;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("vruschika")){
     middleX =2100;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =2090;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1950;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2200; // Width of the PNG element
      const pngHeight = 2100; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1900;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =2050;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2100; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1980;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1950;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2400; // Width of the PNG element
      const pngHeight =1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }






    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1830;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =2100;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =2050;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("tula")){
     middleX =2100;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =2090;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1920;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2100; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1900;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =2000;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1900;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1880;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }





    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1830;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =2100;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =2050;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("kumbha")){
     middleX =2100;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =2090;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1920;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2300; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1900;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1900;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1880;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }



    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1830;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =2000;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =2050;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("midhuna")){
     middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 3600; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =2090;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1870;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2300; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1900;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1900;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1880;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }



    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1830;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =2100;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =2050;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("makara")){
     middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 3600; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =2090;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1870;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1900;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1900;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1880;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }








    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1830;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =2100;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =2050;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("dhanussu")){
     middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 3600; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =2090;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1870;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1900;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1920;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1880;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }



    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1720;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1850;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2950; // Width of the PNG element
      const pngHeight =1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =2050;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 3400; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =2050;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("vrushabha")){
     middleX =2100;
      middleY =910;
    pngElement.onload = () => {
      const pngWidth = 3750; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =2090;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1890;
      middleY =1050;
    pngElement.onload = () => {
      const pngWidth = 2400; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =2090;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1900;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1990;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 2400; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1890;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight =2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1870;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 2700; // Width of the PNG element
      const pngHeight =1400;// Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }




    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1830;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =2100;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =2050;
      middleY =940;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("meena")){
     middleX =2000;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3800; // Width of the PNG element
      const pngHeight = 1500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =2090;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1920;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2100; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1900;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =2000;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1900;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1880;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }




    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1720;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1850;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2950; // Width of the PNG element
      const pngHeight =1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =2050;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 3400; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =2050;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("mesha")){
     middleX =2100;
      middleY =910;
    pngElement.onload = () => {
      const pngWidth = 3750; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =2090;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1890;
      middleY =1050;
    pngElement.onload = () => {
      const pngWidth = 2400; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =2090;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1900;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1990;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 2400; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1890;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight =2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1870;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 2700; // Width of the PNG element
      const pngHeight =1400;// Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }














    // Add new element (PNG) in the middle of the canvas
    let middlesX ;
    let middlesY;
    const pngElements = new Image();
    pngElements.src = `${day}.png`;
    if(`${pngElements.src}`.includes("friday.png")){
      middlesX =1700;
      middlesY =940;
    pngElements.onload = () => {
      const pngWidth = 3000; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElements, middlesX - pngWidth / 2, middlesY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else{
      middlesX =1700;
      middlesY =900;
      pngElements.onload = () => {
        const pngWidth = 3000; // Width of the PNG element
        const pngHeight = 1800; // Height of the PNG element
        ctx.drawImage(pngElements, middlesX - pngWidth / 2, middlesY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
    }








    function updatePreviewCanvas(image) {
      previewCanvas.width = previewContainer.clientWidth;
      previewCanvas.height = (previewContainer.clientWidth / image.width) * image.height;

      const scaleFactor = calculateScaleFactor(
        image.width,
        image.height,
        previewCanvas.width,
        previewCanvas.height
      );
      const previewCtx = previewCanvas.getContext("2d");
      previewCtx.clearRect(0, 0, previewCanvas.width, previewCanvas.height);
      previewCtx.drawImage(canvas, 0, 0, previewCanvas.width, previewCanvas.height);

      // Store the preview image separately
      previewImage = canvas.toDataURL();

      downloadButton.disabled = false;
    }
  }
 

  function calculateScaleFactor(originalWidth, originalHeight, maxWidth, maxHeight) {
    const widthScaleFactor = originalWidth / maxWidth;
    const heightScaleFactor = originalHeight / maxHeight;

    return Math.max(widthScaleFactor, heightScaleFactor, 1);
  }
  setTimeout(() => {
    const link = document.createElement("a");
    link.download = "bhaktimediastudiosimha";
    link.href = previewImage; // Use the preview image data URL
    link.click();
  }, 6000);

  downloadButton.addEventListener("click", () => {
    
  });
let funk = ()=>{
  const link = document.createElement("a");
    link.download = "image";
    link.href = previewImage; // Use the preview image data URL
    link.click();
}


}, 170000);
setTimeout(() =>{
  

  let daily = [
    {
      title: "అతిపెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "ఈరోజు మీ జీవితంలోనే అతిపెద్ద శుభవార్త!",
      matter: "ఈరోజు మీకు మీ జీవితంలోనే అతిపెద్ద శుభవార్త అందుతుంది దాన్ని విన్న తరవాత మీ ఆనందానికి హద్దులు ఉండవు ",
    },
    {
      title: "ఒక స్త్రీ వల్ల ధనాలభం",
      thumbnail: "ఒక స్త్రీ వల్ల ఇలా ధనాలభం పొందే అవకాశం!",
      matter: "ఈరోజు మీకు మీ జీవిత భాగస్వామి వల్ల ధనాలభం పొందే అవకాశం ఉంది మీరు మాత్రం మీ జీవిత భాగస్వామి ని పూర్తిగా నమ్మాలి శుభం జరుగుతుంది ",
    },
    {
      title: "ఒక స్త్రీ పగబట్టి ఇలా",
      thumbnail: "ఒక స్త్రీ పగబట్టి చేసే ప్రయత్నాలు తెలిస్తే షాక్!",
      matter: "ఈరోజు ఒక స్త్రీ పాత కక్షలు పెట్టుకొని మీ మీద పగబట్టి మిమ్మల్ని ఆర్ధికంగా నష్టపరుచడానికి చెయ్యని ప్రయత్నలంటూ ఉండవు కాని మీ మంచి మనస్సు వల్ల దేవుడు మీ మీద అన్ని ప్రయత్నాలను విఫలం చేస్తారు",
    },
    {
      title: "కొత్త స్త్రీ తో స్నేహం",
      thumbnail: "2 శుభవార్తలు + ఒక కొత్త స్త్రీ తో స్నేహం",
      matter: "ఈరోజు మీరు రెండు పెద్ద శుభవార్తలు వింటారు మరియు అనుకోకుండా మీరు ఒక కొత్త స్త్రీ తో కలిసి ఆకస్మికంగా స్నేహం చేస్తారు",
    },
    {
      title: "పెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "పెద్ద శుభవార్తలు + ఈవిషయంలో జాగ్రత్త",
      matter: "ఈరోజు శుభప్రదంగా ఉంటుంది మీరు ఈరోజు పెద్ద శుభవార్తలు వింటారు ఆ శుభవార్తలు విన్న తరువాత ఆనండంలూ మద్యపానం సేవించడానికి ప్రయత్నాలు చేస్తారు ఇలా చెయ్యకండి మీ ఆరోగ్యం దెబ్బతీస్తుంది జాగ్రత్తగా ఉండండి ",
    },
    {
      title: "ఒక స్త్రీ పగబట్టి ఇలా",
      thumbnail: "ఒక స్త్రీ పగబట్టి ఈవిధంగా చేస్తుంది జాగ్రత్త",
      matter: "ఈరోజు మీ మీద ఒక స్త్రీ పగబట్టి హాని చెయ్యాలని చూస్తున్నారు , మరియు మీ మీద ఒక స్త్రీ ఏడుపు ఉంది మీ వ్యాపారం మరియు అభివృద్ధి మీద ఏడుస్తున్నారు జాగ్రత్తగా ఉండండి",
    },
    {
      title: "బంధువులే మీ సేత్రువులు",
      thumbnail: "మీ బంధువులే మీ సేత్రువులు జాగ్రత్త",
      matter: "మీ బంధువుల్లో కొందరు మీ సేత్రువులు ఉన్నారు వాళ్ళు ఎప్పుడు అవకాశం దొరికితే మిమ్మల్ని నష్టం చెయ్యాలని చూస్తున్నారు ఎవ్వరితో కూడా మీ వ్యాపారం గురించి చెప్పకండి జాగ్రత్తగా ఉండండి వెంనేపోటు పొడుస్తారు",
    }, 
    {
      title: "ఒక స్త్రీ మోసం చేస్తారు",
      thumbnail: "ఒక స్త్రీ ఇలా మోసం చేస్తుంది జాగ్రత్త!",
      matter: "ఈరోజు మీరు ఏంతో నమ్మిన ఒక స్త్రీ మిమ్మల్ని మోసం చేసే అవకాశం ఉంది జాగ్రత్తగా ఉండండి , మీరు మంచివారు కాని అందరు మంచివారు ఉండరు ఎవ్వరిని గుడ్డిగా నమ్మవద్దు",
    },
    {
      title: "ఒక స్త్రీ వల్ల డబ్బులు",
      thumbnail: "ఒక స్త్రీ వలన ఆదాయం + ఈవిషయాల్లో జాగ్రత్త",
      matter: "ఈరోజు మీకు చాలా మంచిరోజు నేడు మీకు మీ జీవిత భాగస్వామి బల్ల ధనాలభం కలుగుతుంది మరియు మీరు మీ జీవిత భాగస్వామి వల్ల చాలా సంతోషంగా ఉంటారు మీ బాధ్యతే ఏంటంటే మీరు కుడా వారిని సంతోషంగా ఉంచండి ",
    },
    {
      title: "స్త్రీ వల్ల శుభవార్తలు",
      thumbnail: "ఒక స్త్రీ వల్ల శుభవార్తలు ! తెలిస్తే షాక్!",
      matter: "ఈరోజు మీకు చాలా మంచిరోజు ఈరోజు మీకు ఒక స్త్రీ వల్ల శుభవార్తలు అందుతాయి ఈలోకంలో మీరే అదృష్టవంతులు అని ఈరోజు మీకు అనిపిస్తుంది మీరు మాత్రం ఆ శుభవార్తలు వినగానే షాక్ అవ్వడం ఖాయం",
    },
    {
      title: "స్త్రీ కాళ్ళ వద్దకు",
      thumbnail: "కోరుకున్న స్త్రీ కాళ్ళ వద్దకు వస్తుంది",
      matter: "ఈరోజు మీరు కూరుకున్న స్త్రీ మీ వ్యాపారం మరియు అభివృద్ధి చూసి వారు మీ కాళ్ళ వద్దకు వస్తారు కాని మీరు మాత్రం మీ వ్యాపారం మరియు అభివృద్ధి ని ఆపకండి ",
    },
    {
      title: "ఒక స్త్రీ మోసం చేస్తారు",
      thumbnail: "ఒక స్త్రీ వెన్నెపాటు పొడుస్తారు జాగ్రత్త!",
      matter: "ఈరోజు మీరు ఎంతగా నమ్మిన ఒక స్త్రీ మిమ్మల్ని మోసం చేస్తారు , దీనివల్ల మీరు మానసికంగా డిప్రెషన్ లోకి పోవచ్చు జాగ్రత్తగా ఉండండి లోకంలో డబ్బే అంత అని తెలుసుకోండి డబ్బు ఉంటె మీరే రాజు మీరే మంత్రి",
    },
    {
      title: "స్త్రీ వల్ల శుభవార్తలు",
      thumbnail: "ఒక స్త్రీ వల్ల శుభవార్తలు ! తెలిస్తే ఎగిరి గంటేస్తారు",
      matter: "ఈరోజు మీరు ఒక స్త్రీ వల్ల శుభవార్తలు అందుకుంటారు ఈలోకంలో మీరే అదృష్టవంతులు అని ఈరోజు మీకు అనిపిస్తుంది మీరు మాత్రం ఆ శుభవార్తలు వినగానే మీరు ఎగిరి గంతెయ్యడం మాత్రం ఖాయం",
    },
    {
      title: "ఒక స్త్రీ వల్ల ఘూరం",
      thumbnail: "ఒక స్త్రీ వల్ల ఘోరం జరుగుతుంది జాగ్రత్త!",
      matter: "ఈరోజు మీరు ఒక స్త్రీ వల్ల భారిగా నష్టపూతారు దీనివల్ల మీరు బాధ పాడుతారు కాని దానివల్ల ఏమి లాభం లేదు ఇప్పటికైనా పోయింది ఏమిలేదు అన్ని మరిచి మీరు మీ లక్ష్యం మీద దృష్తి పెడితే శుభం కలుగుతుంది",
    },
    {
      title: "కుటుంబంలో వీరికి మరనగందం",
      thumbnail: "కుటుంబంలో వీరికి మరణ గండం జాగ్రత్త!",
      matter: "ఈరోజు మీ కుటుంబంలో పెద్దవారిని ఎలెక్ట్రానిక్ వస్తువులనుంచి దూరంగా ఉంచండి ప్రమాదాలు జరిగే అవకాశాలు ఉన్నాయి అప్ప్రమత్తంగా ఉండండి వారి ఆరోగ్యం మీద శ్రెద్ద పెట్టండి శుభం కలుగుతుంది ",
    },
    {
      title: "అందమైన స్త్రీ తో ",
      thumbnail: "ఈరోజు అదృష్టం మీదే! అందమైన స్త్రీ తో",
      matter: "ఈరోజు ఈ మొత్తం ప్రపంచంలో మీరే అదృష్టవంతులు అని మీకు అనిపిస్తుంది ఈరోజు మీరు మీకు నచ్చిన ఇక అందమైన స్త్రీ తో బయటకు వెళ్లి సినిమాలు షికార్లు అని జాలిగా గడుపుతారు",
    },
    {
      title: "స్త్రీ తో మనసులోని మాట",
      thumbnail: "అందమైన స్త్రీ తో మనసులోని మాట చెప్తారు ",
      matter: "ఈరోజు మీరు మీకు నచ్చిన ఒక అందమైన స్త్రీ తో ఎప్పటినుంచో చెప్పాలనుకుంటున్న మీ మనస్సులోని మాట ఈరోజు చెపుతారు మరియు ఇలా చేస్తే ఈరోజు మీరు షాకింగ్ న్యూస్ వింటారు ",
    },
    {
      title: "పెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "పెద్ద శుభవార్తలు + ఒక స్త్రీ పగబట్టి ఇలా చేస్తది",
      matter: "ఈరోజు మీరు పెద్ద శుభవార్తలు వింటారు మరియు ఈరోజు ఒక స్త్రీ పగబట్టి మీ శుభవార్తల మీద ఈర్ష తో నష్టం చెయ్యడానికి ప్రయత్నాలు చేస్తారు కాని మీరు మీ అదృష్టం వల్ల తప్పించుకుంటారు",
    },
    {
      title: "ఒక స్త్రీ తో సరదాగా ఉలా",
      thumbnail: "ఒక స్త్రీ తో సరదాగా ఇలా చేస్తారు...! జాగ్రత్త",
      matter: "ఈరోజు మీరు సరదా కోసం మీ ప్రేయసితో బయటకు పోయి సినిమాలకు రెస్టారెంట్లకు పోయి చివరికి మీరు మీ దగ్గర ఉన్న డబ్బును మొత్తం ఐపోచేస్తారు జాగ్రత్తగా ఉండండి డబ్బును ఈరోజు మీరు ఆదా చేస్తే అవి మీకు రేపు పనికి వస్తాయి",
    },
    {
      title: "స్త్రీ వల్ల ఆనందం",
      thumbnail: "ఒక స్త్రీ వల్ల ఆనందానికి హద్దులు ఉండవు",
      matter: "ఈరోజు మీ జీవితానికి అర్ధమోచ్చే ఒక పెద్ద బంగారు శుభావర్తని మీ జీవిత భాగస్వామి మీకు అందిస్తారు ఈరోజు మీరు ఒక అందమైన స్త్రీ తో జాలిగా గడుపుతారు ఈరోజు ఆ అందమైన స్త్రీ వల్ల ఆకస్మికంగా ధనలాభం పొందే అవకాశం కుడా ఉంది",
    },
    {
      title: "వీరితో గొడవలు జాగ్రత్త",
      thumbnail: "ఈరోజు వీరితో గొడవలు జరుగుతాయి జాగ్రత్త",
      matter: "ఈరోజు మీరు ఎప్పటినుంచో గొడవ పదాలనుకుంటున్న మీ సేత్రువులు మిమ్మల్ని గెలకడంతో మీరు వారితో గొడవ పడొచ్చు కాని గొడవ పరిష్కారం కాదని మీరు తెలుసుకూవాలి కాని గొడవ జరిగితే మాత్రం గెలిసేది మీరే",
    },
    {
      title: "అందమైన స్త్రీ తో ఇలా",
      thumbnail: "ఒక అందమైన స్త్రీ తో సరదాలు + ఆకస్మిక ధనాలభం",
      matter: "ఈరోజు మీరు ఒక అందమైన స్త్రీ తో జాలిగా గడుపుతారు ఈరోజు ఆ అందమైన స్త్రీ వల్ల ఆకస్మికంగా ధనలాభం పొందే అవకాశం కుడా ఉంది",
    },
    {
      title: "స్త్రీ వల్ల నష్టాలు",
      thumbnail: "ఓక స్త్రీ వల్ల భారీగా నష్టపోతారు జాగ్రత్త!",
      matter: "ఈరోజు మీరు మీ జీవిత భాగస్వామి చేసిన ఒక తప్పు వల్ల బిజినెస్ లో భారి నష్టాలను చూస్తారు దీనివల్ల మీరు వారిమీద కోప్పడుతారు ఆఖరికి దీంట్లో వాళ్ళు కావాలని చెయ్యలేదని తెలుసుకొని క్షమిస్తారు",
    },
    {
      title: "ఒక స్త్రీ పగబట్టి ఇలా",
      thumbnail: "ఒక స్త్రీ పగబట్టి ఈవిధంగా చేస్తుంది",
      matter: "ఈరోజు మీ మీద ఎప్పటినుంచో కక్ష పెట్టుకున్న ఒక స్త్రీ ఈరోజు పగతీర్చుకోవడానికి మిమ్మల్ని మానసికంగా హాని చేస్తారు అది కుడా విఫలం అయితే శారీరికంగా హాని చేస్తారు జాగ్రత్తగా ఉండండి ",
    },
    {
      title: "ఒక స్త్రీ తో గొడవలు",
      thumbnail: "ఈరోజు ఒక స్త్రీ తో గొడవలు జరుగుతాయి",
      matter: "ఈరోజు మీకు ఒక స్త్రీ తో గొడవలు జరుగుతాయి మీరు ఎంత ఒద్దు అనుకున్న గొడవలు తప్పవు దీనిని ద్రుష్టిలో పెట్టుకొని మీరు గొడవని ఆపలేరు అయితే మీరు కోపంలో మీరు చెప్పే మాటలపై మీరు తరువాత ఆందోళన పాడుతారు జాగ్రత్త key",
    },
    {
      title: "స్త్రీ తో మనసులోని మాట",
      thumbnail: "ఒక స్త్రీ తో మనసులోని విషయం మాట్లాడతారు",
      matter: "ఈరోజు మీరు ఒక స్త్రీ తో మీ మనసులోని మాట మాట్లాడుతారు మీరు వారిని ఇష్టపడుతున్నారని వారితో చెపుతారు ఈవిషయం చెప్పినతరువాత మీకు ఒక షాకింగ్ వార్త అందుతుంది జాలిగా గడుపుతారు",
    },
    {
      title: "జీవితంలో ఒక స్త్రీ ఎంట్రీ",
      thumbnail: "మీ జీవితంలో ఒక స్త్రీ ఎంట్రీ .. అన్ని శుభవర్తలే",
      matter: "ఈరోజు మీ జీవితంలో ఒక కొత్త స్త్రీ వస్తుంది తను చాల బుద్ధిమంతురాలు మరియు అందానికి యువరాణి మీకు ఆ స్త్రీ చాల నచ్చుతుంది మరియు మీరు ఆ స్త్రీ తో స్నేహం కూడా చెయ్యడానికి ప్రయత్నాలు చేస్తారు",
    },
    {
      title: "ఒక స్త్రీ వల్ల మోసపోతారు",
      thumbnail: "ఒక స్త్రీ ని గుడ్డిగా నమ్మవద్దు! మీరు మోసపోవచ్చు",
      matter: "మీరు ప్రాణంగా ప్రేమించిన స్త్రీ ఈరోజు మిమ్మల్ని విదిచిపోవడంతో మీరు తట్టుకోలేరు మీరు డిప్రెషన్ లో కూడా పోవచ్చు కాని అదే సమయంలో మీ తల్లితండ్రులవల్ల మీకు జీవితం అంటే ఒక అర్ధం ఒస్తుంది వారి కోసమే బ్రతుకుతారు",
    },
    
    {
      title: "స్త్రీ వల్ల బంగారు శుభవార్త",
      thumbnail: "ఒక స్త్రీ వల్ల బంగారు శుభవార్తలు + ఇలా చేయకండి",
      matter: "ఈరోజు మీ జీవితానికి అర్ధమోచ్చే ఒక పెద్ద బంగారు శుభావర్తని మీ జీవిత భాగస్వామి మీకు అందిస్తారు ఆ శుభవార్త మీ జీవితాన్నే మార్చేస్తుంది కాబట్టి ఈరోజు మీరు ఆనందంలో మీరు ఎం చేయ్యలనుకున్తున్నారో ఆ పనులన్నీ చేసేస్తారు",
    },
  
    {
      title: "ప్రియమైన స్త్రీ ని కలుస్తారు",
      thumbnail: "ఒక ప్రియమైన స్త్రీ ని కలుస్తారు + ఆకస్మిక ధనాలభం",
      matter: "ఈరోజు మీరు మీకు ఏంటో ప్రియమైన స్త్రీ ని కలుస్తారు కలిసి సరదాగా మాట్లాడుకుంటారు ఇంకా ఈరోజు చివరిలో మీకు ఆకస్మిక ధనలాభం కలుగడంతో మీ ఆనందానికి హద్దులు ఉండవు ఆనందంలో పార్టి కూడా చేసుకుంటారు",
    },
    {
      title: "2 పెద్ద శుభవార్తలు",
      thumbnail: "2 పెద్ద శుభవార్తలు + ఈవిషయంలో జాగ్రత్త!",
      matter: "ఈరోజు మీరు ఎప్పటినుండో ఎదురుచూస్తున్న శుభవార్త వింటారు మరియు మీరు అనుకోకుండా ఒక స్త్రీ వల్ల ఇంకొక శుభవార్తలు అందుకుంటారు సంతోషంలో మీరు మద్యం సేవించవచ్చు ఇలా చెయ్యకండి జాగ్రత్త",
    },
    {
      title: "ఒక స్త్రీ వల్ల గొడవలు",
      thumbnail: "ఒక స్త్రీ వల్ల గొడవలు + ఆకస్మిక సంఘటనలు",
      matter: "ఈరోజు మీరు మీకు నచ్చిన ఒక స్త్రీ కోసం వేరే వాళ్లతో గొడవలలో పలుగోనతారు కాని ఆకస్మికంగా ఆ గొడవ చాల పెద్దగా కావడంతో మీరు గొడవని ముగించడానికి ప్రయత్స్తారు కాని మీరు జాగ్రత్తగా ఉండాలి దెబ్బలు కూడా తగలోచ్చు",
    },
    {
      title: "స్త్రీ వల్ల ప్రమాదాలు",
      thumbnail: "ఒక స్త్రీ వల్ల ప్రమాదాలు ముంచుకోస్తున్నాయి జాగ్రత్త",
      matter: "ఈరోజు మీకు ఒక స్త్రీ వల్ల ప్రమాదాలు మున్చుకోస్తునాయి కాబట్టి మీరు అప్ప్రమత్తంగా ఉండండి వాహనాలు నడిపెటప్పుడు ఒక స్త్రీ ని ఆకర్షించడానికి మీరు మీ వాహనాన్ని అతివేగంలో నడుపుతారు దీనివల్ల ప్రమాదం కూడా జరుగవచ్చు",
    },
    {
      title: "ఒక స్త్రీ నష్టం చేస్తారు",
      thumbnail: "ఒక స్త్రీ ఈవిధంగా నష్టం చేస్తున్నారు + ఇలా చెయ్యండి",
      matter: "మీరు మిమ్మల్ని ప్రేమిస్తున్నారు అనుకుంటున్నా స్త్రీ మీదగ్గర మీ డబ్బుకోసమే ఉన్నారు . ఈరోజు బయట ఆ స్త్రీ మిమ్మల్ని షాపింగ్ కు తెసుకేల్లి మీ లక్షలు నష్టం చేస్తారు జాగ్రత్త",
    },
    {
      title: "మంచి శుభవార్తలు ఉన్నాయి",
      thumbnail: "మంచి శుభవార్తలు + ఈవిషయాల్లో జాగ్రత్త",
      matter: "ఈరోజు మీ జీవితానికి అర్ధమోచ్చే ఒక పెద్ద బంగారు శుభావర్తని మీ జీవిత భాగస్వామి మీకు అందిస్తారు ఆ శుభవార్త మీ జీవితాన్నే మార్చేస్తుంది  సంతోషంలో మీరు మద్యం సేవించవచ్చు ఇలా చెయ్యకండి జాగ్రత్త",
    },
    {
      title: "ఒక స్త్రీ తో గొడవ",
      thumbnail: "ఈరోజు ఒక స్త్రీ తో గొడవ జరుగుతుంది జాగ్రత్త",
      matter: "ఈరోజు మీకు ఒక స్త్రీ తో ఆస్తి మరియు దనం విషయంలో గొడవలు జరుగుతాయి కాని గొడవలో మీరు నూరు జారి చెప్పకుదని మాటలు చెపుతారు గొడవ తరువాత మీరు ఎందుకుచేప్పరని బాధపడి ఆ స్త్రీ తో క్షమాపణ అడుగుతారు దీని బదులు మీరు ముందే నూరు అదుపులో పెట్టుకోండి",
    },
    {
      title: "సేత్రువులు ఇలా చేస్తారు",
      thumbnail: "రహస్య సెత్రువులు ఈవిధంగా చేస్తున్నారు జాగ్రత్త",
      matter: "ఈరోజు రహస్య సేత్రువులు మీకు తెలియకుండానె మిమ్మల్ని ఆర్ధికంగా మరియు మీ కుతుమ్బంన్ని హాని చెయ్యడానికి చెయ్యని ప్రయత్నలుండవు కాబట్టి మీరు ముందే జాగ్రత్తగా ఉండండి ఎవ్వరిని గుడ్డిగా నమ్మవద్దు మోసపోవచ్చు",
    },
    {
      title: "అమ్మాయి కాళ్ళ వద్దకు",
      thumbnail: "అందమైన అమ్మాయి మీ కాళ్ళ వద్దకు వస్తుంది",
      matter: "ఈరోజు మీ స్వప్న సుందరి మీ ఉన్నత చదువులు మరియు వ్యాపారంలో అభివృద్ధి చూసి ఒచ్చి మీ కాళ్ళ వద్దకు పడుతది . ఈరోజు మీరు పడ్డ కష్టం వ్యర్ధం కాలేదని మీరు తెలుసుకుంటారు వ్యాపారం మరియు చదువులూ ఇంకా ముందుకు సాగాలని మీకు మోటివేషన్ దొరుకుతుంది",
    },
    {
      title: "స్త్రీ వల్ల పెద్ద శుభవార్త",
      thumbnail: "ఒక స్త్రీ వల్ల పెద్ద శుభవార్త + ఆకస్మిక ధనాలభం",
      matter: "ఈరోజు మీకు ఒక స్త్రీ వల్ల పెద్ద శుభవార్త అందుతుంది మరియు వార్త వినంగానే మీ మడ్ ఒక్కసారిగా మంచిగా మారడంతో మీరు మీ పార్టనర్ తో కలిసి సినిమాకు పోతారు మరియు రాత్రి సమయంలో మీకు ధనలాభం కలుగుతుంది ",
    },
    {
      title: "స్త్రీ తో సరదాగా ఉలా",
      thumbnail: "ఒక స్త్రీ తో కలిసి సరదాగా చేసే పనులు తెలిస్తే షాక్ !",
      matter: "ఈరోజు మీరు టైం పాస్ చెయ్యడానికి ఒక స్త్రీ తో కలిసి ఒక మంచి రెస్టారెంట్ కు వెళ్లి భూజనం చెయ్యడం ఇష్టపడుతారు మరియు సినిమాకు పోయి జాలిగా గడుపుతారు ఈరోజు మీకు ఎప్పటికి గుర్తుండిపోయేలా గడుపుతారు",
    },
    {
      title: "సెత్రువులు ఇలా చేస్తారు",
      thumbnail: "పెద్ద శుభవార్తలు + సెత్రువులు ఇలా చేస్తారు",
      matter: "ఈరోజు మీకు చాల పెద్ద శుభవార్తలు అందుతాయి దీనితో మీరు చాల సంతోషంగా ఉంటారు మీ సంతోషం మీ సేత్రువులు చూడలేరు వారు మీకు ఎదో ఒక హాని చెయ్యాలని చూస్తారు కాని రోజు ఆకరికి ఏమి చెయ్యలేక అలిసి వెళ్ళిపోతారు",
    },
    {
      title: "ప్రాణగండం ఉంది జాగ్రత్త",
      thumbnail: "వీరితో గొడవలు + ప్రాణగండం ఉంది జాగ్రత్త",
      matter: "ఈరోజు మీకు మీ సేత్రువులతో గొడవలు జరుగుతాయి మరియు మీరు ఈరోజు మీ కోపాన్ని అడుపులూ ఉంచాలి లేదంటే మీకు గొడవలో తీవ్ర గాయలవల్ల ప్రాణగండం ఉంది దేవుడ్ని స్మరించండి గొడవ దేనికి కూడా సమాధానం కాదు అని మీరు తెలుసుకోవాలి",
    },
    {
      title: "స్త్రీ వల్ల పండగలు",
      thumbnail: "ఒక స్త్రీ వల్ల ఈరోజు పండుగలా ఉంటుంది",
      matter: "ఈరోజు ఒక స్త్రీ వల్ల వేడుకలా ఉంటుంది మీకు నచ్చిన స్త్రీ తో ఈరోజు మీరు బయటకు పోతారు మరియు వారితో సినిమాలకు పోయి జాలిగా గడుపుతారు ఆ స్త్రీ వల్ల రోజు చివర్లో ధనాలభం కూడా కావొచ్చు శుభం కలుగుతుంది ",
    },
    {
      title: "స్త్రీ మోసం చేస్తుంది",
      thumbnail: "ఒక స్త్రీ ఇలా మోసం చేస్తది + ఇలా చెయ్యండి",
      matter: "ఈరోజు మీరు గుడ్డిగా నమ్మిన ఒక స్త్రీ మిమ్మల్ని మోసం చేస్తది దేనిని మీరు తట్టుకోలేరు కోపంలూ మీరు డిప్రెషన్ లో కూడా పోవచ్చు కాని మీ తల్లి తండ్రులకు ఈ విషయం తెలిసి వారు మిమ్మల్ని దీని నుండి బయటకు తెస్తారు",
    },
    {
      title: "స్త్రీ మీ కాళ్ళ వద్దకు",
      thumbnail: "ఒద్దు అన్న స్త్రీ మీ కాళ్ళ వద్దకు వస్తుంది",
      matter: "మీ దగ్గర డబ్బులు లేవు మీరు బిచ్చగాల్లు అని మిమ్మల్ని వదిలి పాయిన ఆ స్త్రీ ఈరోజు మీ అభివృద్ధి మరియు మీ ఉన్నత చదువులు చూసి మల్లి మీ కాళ్ళ వద్దకు ఒస్తుంది మల్లి తనను దగ్గరుకు తెసుకున్తారా? కామెంట్ లో చెప్పండి  ",
    },
  
    {
      title: "పెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "పెద్ద శుభవార్తలు ఉన్నాయి + స్త్రీ వల్ల పండుగ",
      matter: "ఈరోజు మీకోసం పెద్ద శుభవార్తలు ఎదురుచుస్తునాయి మీరు పడ్డ కష్టానికి ప్రతిఫలం ఈరోజు మీకు శుభవార్త అందుతుంది మరియు మీ అభివృద్ది ని చూసి ",
    },
    {
      title: "స్త్రీ వల్ల ధనలాభం",
      thumbnail: "అందమైన స్త్రీ వల్ల ధనలాభం + పెద్ద శుభవార్త",
      matter: "ఈరోజు ఒక అందమైన స్త్రీ వల్ల ధనాలభం కలుగుతుంది ఇంకా రోజు మధ్యలో మీకు పెద్ద శుభవార్త అందుతుంది మీకు ఆ శుభవార్త అందుతదని మీరు కలలో కూడా ఉహించి ఉండరు కాని మీ అదృష్టం వల్ల మీకు ఆ శుభవార్తః అందుతుంది ",
    },
    {
      title: "కుటుంబంలో వీరికి ప్రాణగండం",
      thumbnail: "మీ కుటుంబంలో వీరికి ఇలా ప్రాణగండం జాగ్రత్త",
      matter: "ఈరోజు మీ కుటుంబంలో వ్రుదుల అనారోగ్యం వల్ల వారికి ప్రాణగండం ఉంది కాబట్టి పుష్టిక ఆహారాన్ని సేవించాలి మరియు దేవుడ్ని స్మరించాలి మీరు చేసిన పుణ్యకార్యాల వల్ల దేవుడు మీ గండాన్ని తొలగిస్తారు శుభం జరుగుతుంది",
    },
    {
      title: "స్త్రీ వల్ల శుభవార్తలు",
      thumbnail: "మీరు ఊహించని స్త్రీ శుభవార్తలు చెప్తారు ",
      matter: "ఈరోజు మీరు కలలో కూడా ఉహించని ఒక అందమైన స్త్రీ నోటితో మీరు శుభావర్తలు వింటారు ఈవార్త వినగానే మీ మనస్సు గాలిలో తేలినట్లు అయిపోతుంది మీరు మీ బంధువులందరితో ఈ వార్తని పంచుకుంటారు జాలిగా గడుపుతారు",
    },
    {
      title: "స్త్రీ మీ కాళ్ళ వద్దకు",
      thumbnail: "మీరు కావాలనుకున్న స్త్రీ మీ కాళ్ళ వద్దకు",
      matter: "ఈరోజు మీరు ఎప్పటినున్డూ కోరుకుంటున్న స్త్రీ మీ అదృష్టం కొద్ది మీ దగ్గర సహాయం కోరుతూ వస్తుంది మీరు కాని తనకు సహాయం చేస్తే మాత్రం మీ ఇద్దరి మధ్య బంధం ఇంకా గట్టిపడుతుంది కాని ఆ సహాయం చెయ్యడానికి కొద్దిగా శ్రీమ పడాల్సి ఉంటది",
    },
  
    {
      title: "పెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "పెద్ద శుభవార్తలు + ఒక స్త్రీ ఇలా చేస్తుంది",
      matter: "ఈరోజు మీకు మీరు ఎన్నో సంవచరాల నుండి ఎదురుచూస్తున్న శుభవార్త ఒకటి అందడం వల్ల మీరు సంతోషంగా ఎగిరి గంతులేస్తారు మరియు మీ మిత్రులకి పార్టి ఇస్తారు మొత్తానికి ఈరోజు జాలిగా గడుపుతారు కాని ఆ శుభవార్త మీ జీవితాన్ని మార్చేస్తుంది",
    },
    {
      title: "ఒక స్త్రీ మోసం చేస్తారు",
      thumbnail: "ఒక స్త్రీ మిమ్మల్ని ఈవిధంగా మోసం చేస్తున్నారు",
      matter: "ఈరోజు మీరు కళ్ళు ముసి నమ్మిన ఒక స్త్రీ మిమ్మల్ని వెంనేపోటు పొడుస్తారు మిమ్మల్ని కాదని మోసం చేస్తారు దీనితో మీరు చాల బాధ పాడుతారు కాని మీ తల్లితండ్రులు మీకు సపోర్టుగా ఉంటారు దీనివల్ల వాళ్ళని మించిన వారు లేరని మీకు తెలుస్తుంది",
    },
    {
      title: "స్త్రీ తో మనసులోని మాట",
      thumbnail: "నచ్చిన స్త్రీ తో మీ మనసులోని మాట చెపుతారు",
      matter: "మీరు ప్రతిరోజూ కలలో చూసే మీకు నచ్చిన ఒక స్త్రీ తో ఈరోజు మీరు మీ మనస్సులోని మాట చెపుదామని మీరు ఫిక్స్ అవుతారు ఇలా చెయ్యడానికి ఇదే సరైన సమయం శుభవార్తలు కూడా అందవచ్చు ఏది జరిగినా మన మంచికే అని గుర్తుపెట్టుకోండి ",
    },
    {
      title: "ఎవరంలో ఇలా జరిగిద్ది",
      thumbnail: "ఈవారంలో ఏం జరుగుతుందో తెలిస్తే షాక్",
      matter: "ఈవారంలో మీ వృత్తికి మీరే రాజు మీరే మంత్రి బిజినెస్ లో మిమ్మల్ని మించినోల్లు ఎవ్వరు ఉండరు కొత్త స్త్రీ తో పరిచయాలు జరుగుతాయి మరియు ధనాలభం కలుగుతుంది",
    },
    {
      title: "వీరే మీ సెత్రువులు",
      thumbnail: "వీరే మీ సెత్రువులు + ఒక స్త్రీ తో జాగ్రత్త",
      matter: "ఈరోజు మీరు మీ సేత్రువుల పేర్లు తెలుసుకుంటారు మరియు ఒక స్త్రీ మీ రహస్య సేత్రువు మీకు ఇప్పటివరుకు కలిగిన హాని మొత్తం మీ సేత్రువులనుంచే అని ఈరోజు మీకు తెలిసి వస్తుంది అప్ప్రమత్తంగా ఉండండి",
    },
    {
      title: "స్త్రీ కాళ్ళ వద్దకు",
      thumbnail: "మీరు ఒద్దు అని విడిచిపోయిన స్త్రీ కాళ్ళ వద్దకు",
      matter: "మీరు డబ్బు లేనివారు అని మిల్లల్ని చులకనగా చుసిన ఒక స్త్రీ ఈరోజు మీ వ్యాపారం మరియు అభివృద్ధి చూసి మల్లి మీ కాళ్ళ వద్దకు వస్తుంది కాని వచ్చిన తరువాత మీరు మీ దృష్టి ని అటు మల్లిన్చాకండి మీ వ్యాపారాన్ని ఇంకా పెంచుతూనే ఉండాలి",
    },
    {
      title: "ఒక స్త్రీ వల్ల శుభవార్తలు",
      thumbnail: "ఒక స్త్రీ వల్ల అతిపెద్ద శుభవార్తలు తెలిస్తే షాక్",
      matter: "ఈరోజు మీ జీవితంలూ ఎప్పుడు అందని శుభవార్తలు ఈరోజు మీకు ఒక స్త్రీ వల్ల అందుతాయి వాటిని విని మీరు ఎగిరి గంతులేస్తారు మీ ఆనందానికి హద్దులు ఉండవు ఆ శుభవార్తలు మీ జీవితాన్నే మార్చేస్తాయి రెడీగా ఉండండి ",
    },
    {
      title: "ఒక స్త్రీ పగబట్టి ఇలా",
      thumbnail: "ఒక స్త్రీ పగబట్టి చేసే ప్రయత్నాలు చుస్తే చాక్",
      matter: "ఈరోజు మీపైన ఎంతోకాలంగా కక్షగుడి మీ ప్రానసేత్రువు ఒక స్త్రీ మిమ్మల్ని అన్ని విధాలుగా హాని చెయ్యడానికి ప్రయత్నాలు చేస్తారు కాని మీరు చాలా ధైర్యవంతులు కావడంతో మీరు వాటన్నిటినుంచి సులభంగా తప్పించుకుంటారు ",
    },
    {
      title: "పెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "పెద్ద శుభవార్తలు ఉన్నాయి వీరు నక్కతోకతొక్కారు",
      matter: "ఈరోజు మీరునక్కతోకతొక్కారు మీకు ఈరోజు పెద్ద శుభవార్తలు అందుతాయి వాటిని విని మీ మనసు గాలిలో తేలడం మాత్రం ఖాయం ఈరోజు మీకు శుభవార్తలు విన్న తరువాత ఆనదందానికి హద్దులు ఉండవు ఎగిరి గంతులు వేస్తారు",
    },
    {
      title: "ఒక స్త్రీ వల్ల ప్రాణగండం",
      thumbnail: "ఒక స్త్రీ వల్ల ప్రాణగండం + ఈవిషయాల్లో జాగ్రత్త",
      matter: "ఈరోజు మీకు ఒక స్త్రీ వల్ల ప్రాణగండం ఉంది ఎలా అంటే ఈరోజు మీరు ఒక స్త్రీ ని ఆకట్టుకోవడానికి వాహనాన్ని అతివేగంతో నడుపడంతో మీకు ఆపదలు జరిగే అవకాశం ఉంది జాగ్రత్తగా ఉండండి మరియు వాహనాన్ని ఇంటిదగ్గర మీకోసం ఎదురుచూస్తున్నా వాళ్ళ కోసం నెమ్మదిగా తోలండి",
    },
    {
      title: "స్త్రీ తో ఇలా చేస్తారు",
      thumbnail: "శుభవార్త తెలిస్తే ఎగిరి గంటెస్తారు ఒక స్త్రీ తో",
      matter: "ఈరోజు మీ రోజువారి బ్రతుకులూ ఒక్కసారిగా పెద్ద శుభవార్త ఒకటి అందడంవల్ల మీరు మీ ప్రేయసితో కలిసి ఎంజాయ్ చెయ్యడానికి బయటకు సినిమాలు అని షికార్లకు పోతారు ఈరోజు మీ జీవితంలో ఎప్పటికి గుర్తుండిపోతుంది",
    },
    {
      title: "స్త్రే తో సరదాగా ఉలా",
      thumbnail: "అందమైన స్త్రీ తో సరదా కోసం ఇలా చేస్తారు ",
      matter: "ఈరోజు మీకు చాల అదృష్టమైన రోజు మీరు కలలో కూడా ఉహించని అందమైన స్త్రీ తో ఈరోజు మీరు సరదాగా షికారుకు వెళ్లి జాలిగా గడుపుతారు మరియు మీ ఇద్దరి బంధం దీనివల్ల ఇంకా ద్రుదపడుతుంది",
    },
    {
      title: "ఒక స్త్రీ కాళ్ళ దగ్గర",
      thumbnail: "శుభవార్త ! ఒక స్త్రీ ఈరోజు మీ కాళ్ళ దగ్గర",
      matter: "ఈరోజు శుభవార్త అందుతుంది మీరు పేదవాళ్ళు అని మిమ్మల్ని వదిలిపొఇన ఒక స్త్రీ ఈరోజు మీ అభివృద్ధి మరియు దానం చూసి మల్లి మీ కాళ్ళ దగ్గర రావడం ఖాయం",
    },
    {
      title: "స్త్రీ వల్ల గుండెలుపగిలే వార్త",
      thumbnail: "ఒక స్త్రీ వల్ల గుండెలు పగిలే వార్తలు జాగ్రత్త",
      matter: "ఈరోజు మీరు ఎంతగా నమ్మిన స్త్రీ తరుపునుంచి మీకు గుండెలు పగిలే వార్తలు వింటారు ఆ వార్తలు ఏంటంటే వారి ఆరోగ్యం అస్సలు బాగాలేదు మరియు ఆసుపత్రిలూ వారికి చాల ఖర్చులు ఉన్నాయి ఇది విన్న తరువాత మీరు వారిని ఆర్ధికంగా సహాయం చేస్తారు",
    },
    {
      title: "ఒక స్త్రీ మిమ్మల్ని హాని",
      thumbnail: "ఒక స్త్రీ ఇలా హాని చేస్తుంది ఇప్పుడే తెలుసుకోండి",
      matter: "ఈరోజు మీకు ఒక స్త్రీ పగబట్టి శారీరికంగా హాని చెయ్యడానికి చెయ్యని ప్రయత్నాలు ఉండవు కావున మీరు బయటకు వెళ్ళేటప్పుడు దేవుడ్ని స్మరించి జాగ్రత్తగా వెళ్ళండి మీకు ఎలాంటి హాని కలగదు",
    },
    {
      title: "మీ మీద స్త్రీ దృష్టి",
      thumbnail: "మీ మీద ఒక స్త్రీ చేసుదృష్టి జాగ్రత్త",
      matter: "మీ మీద ఒక స్త్రీ చేడుద్రుష్టి ఈలోకంలో చేడుద్రుష్టి అనేది ఒక రాజుని కూడా బిచ్చగాడు లా చెయ్యొచ్చు మీ సంపద మీద ఒక స్త్రీ ఏడుస్తుంది ఇది మీరు జాగ్రత్తగా ఉండాల్సిన సమయం అప్ప్రమత్తంగా ఉండండి",
    },
    {
      title: "ఒక స్త్రీ వల్ల శుభవార్తలు",
      thumbnail: "అన్ని శుభవార్తలే మీ జీవితంలో ఒక స్త్రీ ఎంట్రీ",
      matter: "ఎప్పటినుండో బ్రేక్ లో ఉన్న మీ జీవితం ఒక స్త్రీ రావడంతో దూసుకుపోతుంది , అవును ఈరోజు మీకు అన్ని శుభవార్తలు అందుతాయి మరియు మీ జీవితంలూ ఒక స్త్రీ ఎంట్రీ ఇస్తుంది ",
    },
    {
      title: "స్త్రీ వల్ల పెద్ద శుభవార్తలు",
      thumbnail: "ఒక స్త్రీ వల్ల 3 పెద్ద శుభవార్తలు + ఇలా చెయ్యకండి",
      matter: "ఈరోజు మీరు ఒక స్త్రీ వల్ల మూడు పెద్ద శుభావర్హలు అందుకుంటారు మరియు శుభవార్తలు అందుకున్న వెంటనే మీరు ఆ విషయాలను మీ తల్లి తండ్రులకు ముందుగా చెపుతారు ఎందుకంటే ఈలోకంలో వారిని మించి మీకు ఎవ్వరు లేరు",
    },
  ];
  const today = new Date();
  let tomorrow = new Date(today);
  tomorrow.setDate(tomorrow.getDate() + 2);

  let dayOfWeekIndex = tomorrow.getDay();
  let dayOfWeekArray = [
    "sunday",
    "monday",
    "tuesday",
    "wednesday",
    "thursday",
    "friday",
    "saturday"
  ];

  

  let monthIndex = tomorrow.getMonth();
  let monthArray = [
    "january",
    "february",
    "march",
    "april",
    "may",
    "june",
    "july",
    "august",
    "september",
    "october",
    "november",
    "december",
  ];
let count = Number(localStorage.getItem("count") )|| 23;
  let dayname = dayOfWeekArray[dayOfWeekIndex];
  let monthname = monthArray[monthIndex];
  let datenumber = tomorrow.getDate().toString().padStart(2, "0");

  const textInput = document.getElementById("text-input");
  const textInput2 = document.getElementById("text-input2");
  const fontSelect = document.getElementById("text-input");
  const colorSelect = document.getElementById("color-select");
  const sizeRange1 = document.getElementById("size-range-1");
  const sizeRange2 = document.getElementById("size-range-2");
  const positionRangeX = document.getElementById("position-range-x");
  const previewContainer = document.getElementById("preview-container");
  const previewCanvas = document.getElementById("preview-canvas");
  const downloadButton = document.getElementById("download-button");
textInput2.value = datenumber;

const DailyOnceSet = function(){

  let currentDate = new Date();
  let currentDay = currentDate.getDate();
    localStorage.setItem('thumbdate', currentDay);
  }
  const Shiftdown = function () {
    let today = new Date().getDate();
    let yesterday = localStorage.getItem('thumbdate') || "";
    if(today!=yesterday){
      if(Number(localStorage.getItem("count"))+1>daily.length){
        localStorage.setItem("count",0);
      }
      else{
        
      localStorage.setItem("count",++count);
      localStorage.setItem("var4",daily[count].thumbnail);
      localStorage.setItem("var3", daily[count-1].thumbnail)
      localStorage.setItem("var2", daily[count-2].thumbnail)
      localStorage.setItem("var1", daily[count-3].thumbnail)



      }
    }  
  }

Shiftdown();
DailyOnceSet();

let var4 = localStorage.getItem("var4");
let var3;
let var2;
let var1;
if (count ==0){
  localStorage.setItem("var3", daily[67].thumbnail)
  var3 = localStorage.getItem("var3");
  localStorage.setItem("var2", daily[66].thumbnail)
  var2 = localStorage.getItem("var2");
  localStorage.setItem("var1", daily[65].thumbnail)
  var1 = localStorage.getItem("var1");
}
else if(count ==1){
  localStorage.setItem("var3", daily[0].thumbnail)
  var3 = localStorage.getItem("var3");
  localStorage.setItem("var2", daily[67].thumbnail)
  var2 = localStorage.getItem("var2");
  localStorage.setItem("var1", daily[66].thumbnail)
  var1 = localStorage.getItem("var1");
}
else if(count ==2){
  localStorage.setItem("var3", daily[1].thumbnail)
  var3 = localStorage.getItem("var3");
  localStorage.setItem("var2", daily[0].thumbnail)
  var2 = localStorage.getItem("var2");
  localStorage.setItem("var1", daily[67].thumbnail)
  var1 = localStorage.getItem("var1");
}
else{
  var3 = localStorage.getItem("var3");
  var2 = localStorage.getItem("var2");
  var1 = localStorage.getItem("var1");
}
document.getElementById("var1").value = var1;
document.getElementById("var2").value = var2;
document.getElementById("var3").value = var3;
document.getElementById("var4").value = var4;

  let currentImage = null;
  let previewImage = null;
  let fontSize1;
  // Load default image
  const defaultImage = new Image();
  //!

  textInput.value = var4;
  defaultImage.src  = "grasiphalalumesha.jpg" 

  

 
  
  
  
  
  defaultImage.onload = () => {
    currentImage = defaultImage;
    updatePreview();
  };

  textInput.addEventListener("input", () => {
    updatePreview();
  });

  textInput2.addEventListener("input", () => {
    updatePreview();
  });

  fontSelect.addEventListener("input", () => {
    updatePreview();
  });

  colorSelect.addEventListener("input", () => {
    updatePreview();
  });

  sizeRange1.addEventListener("input", () => {
    updatePreview();
  });

  sizeRange2.addEventListener("input", () => {
    updatePreview();
  });

  positionRangeX.addEventListener("input", () => {
    updatePreview();
  });

  function updatePreview() {
    if (!currentImage) return;

    const text = textInput.value;
    const text2 = textInput2.value;
    const color = "white"; // Set text2 color to white
    const canvas = document.createElement("canvas");
    const ctx = canvas.getContext("2d");

    const image = currentImage;

    canvas.width = image.width;
    canvas.height = image.height;

    ctx.drawImage(image, 0, 0);

    const positionX1 = 10; // Fixed X-coordinate for text1 (leftmost position)
    const positionY1 = 1730; // Fixed Y-coordinate for text1 (bottom - 600 pixels up)

    fontSize1 = 250; // Initial font size for text1
    ctx.font = `${fontSize1}px 'Anek Telugu'`;
    let textWidth = ctx.measureText(text).width;

    // Decrease font size until the text fits within the canvas width
    while (textWidth > canvas.width - 1) {
      fontSize1 -= 1;
      ctx.font = `${fontSize1}px 'Anek Telugu'`;
      textWidth = ctx.measureText(text).width;
    }

    let stretchRatio1;
    // Calculate vertical stretch factor for text1
    if (document.querySelector("#text-input").value.length > 48) {
      const originalHeight1 = fontSize1;
      const targetHeight1 = originalHeight1 + 100; // Vertical stretch factor, adjust as needed
      stretchRatio1 = targetHeight1 / originalHeight1;
    } else if (document.querySelector("#text-input").value.length < 30) {
      const originalHeight1 = fontSize1;
      const targetHeight1 = originalHeight1+15; // Vertical stretch factor, adjust as needed
      stretchRatio1 = targetHeight1 / originalHeight1;
    } else if (document.querySelector("#text-input").value.length > 40) {
      const originalHeight1 = fontSize1;
      const targetHeight1 = originalHeight1 + 40; // Vertical stretch factor, adjust as needed
      stretchRatio1 = targetHeight1 / originalHeight1;
    } else {
      const originalHeight1 = fontSize1;
      const targetHeight1 = originalHeight1 + 30; // Vertical stretch factor, adjust as needed
      stretchRatio1 = targetHeight1 / originalHeight1;
    }
    ctx.strokeStyle = "black";
ctx.lineWidth = 10;
ctx.lineJoin = "round"; // Use round corners for the stroke
    ctx.save();
    ctx.translate(positionX1, positionY1);
    ctx.scale(1, stretchRatio1);
    ctx.fillStyle = color;
ctx.strokeText(text, 0, 0);
    ctx.fillText(text, 0, 0);
    ctx.restore();
    const fixedpos = 2400;
    const fixedPositionY = 1070; // Fixed position for text2
    let size2 = 600; // Get the value of sizeRange2
    
    // Calculate the desired height increase factor
    const heightIncreaseFactor = 10; // You can adjust this value as needed
    
    // Calculate the transformation matrix for vertical scaling
    const scaleX = 1;
    const scaleY = 1 + heightIncreaseFactor / 100;
    
    ctx.save(); // Save the current state of the canvas
    
    // Apply the vertical scaling transformation
    ctx.scale(scaleX, scaleY);
    
    ctx.font = `${size2}px 'Archivo Black', sans-serif`;
    ctx.fillStyle = "white"; // Set text2 color to white
    
    // Add border to text2
    ctx.lineWidth = 40;
    ctx.strokeText(text2, fixedpos, fixedPositionY);
    ctx.fillText(text2, fixedpos, fixedPositionY);
    
    ctx.restore(); // Restore the saved state of the canvas
    
    let month = monthname;
    let day = dayname;
    
    // Add a new element (PNG) in the middle of the canvas
    let middleX;
    let middleY;
    const pngElement = new Image();
    pngElement.src = `${month}.png`;
    
      
    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1700;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 4000; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }
    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1800;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =2050;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =2050;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =2050;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 4150; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =2090;
      middleY =780;
    pngElement.onload = () => {
      const pngWidth = 3250; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1890;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =2090;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 3000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1900;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1950;
      middleY =820;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2200; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1900;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3000; // Width of the PNG element
      const pngHeight =2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1850;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1900;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =2050;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =2050;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("vruschika")){
     middleX =2100;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =2090;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1950;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2200; // Width of the PNG element
      const pngHeight = 2100; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1900;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =2050;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2100; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1980;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1950;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2400; // Width of the PNG element
      const pngHeight =1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }






    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1830;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =2100;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =2050;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("tula")){
     middleX =2100;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =2090;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1920;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2100; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1900;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =2000;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1900;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1880;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }





    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1830;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =2100;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =2050;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("kumbha")){
     middleX =2100;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =2090;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1920;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2300; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1900;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1900;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1880;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }



    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1830;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =2000;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =2050;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("midhuna")){
     middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 3600; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =2090;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1870;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2300; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1900;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1900;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1880;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }



    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1830;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =2100;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =2050;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("makara")){
     middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 3600; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =2090;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1870;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1900;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1900;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1880;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }








    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1830;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =2100;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =2050;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("dhanussu")){
     middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 3600; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =2090;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1870;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1900;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1920;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1880;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }



    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1720;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1850;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2950; // Width of the PNG element
      const pngHeight =1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =2050;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 3400; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =2050;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("vrushabha")){
     middleX =2100;
      middleY =910;
    pngElement.onload = () => {
      const pngWidth = 3750; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =2090;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1890;
      middleY =1050;
    pngElement.onload = () => {
      const pngWidth = 2400; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =2090;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1900;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1990;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 2400; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1890;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight =2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1870;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 2700; // Width of the PNG element
      const pngHeight =1400;// Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }




    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1830;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =2100;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =2050;
      middleY =940;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("meena")){
     middleX =2000;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3800; // Width of the PNG element
      const pngHeight = 1500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =2090;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1920;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2100; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1900;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =2000;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1900;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1880;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }




    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1720;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1850;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2950; // Width of the PNG element
      const pngHeight =1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =2050;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 3400; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =2050;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("mesha")){
     middleX =2100;
      middleY =910;
    pngElement.onload = () => {
      const pngWidth = 3750; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =2090;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1890;
      middleY =1050;
    pngElement.onload = () => {
      const pngWidth = 2400; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =2090;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1900;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1990;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 2400; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1890;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight =2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1870;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 2700; // Width of the PNG element
      const pngHeight =1400;// Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }














    // Add new element (PNG) in the middle of the canvas
    let middlesX ;
    let middlesY;
    const pngElements = new Image();
    pngElements.src = `${day}.png`;
    if(`${pngElements.src}`.includes("friday.png")){
      middlesX =1700;
      middlesY =940;
    pngElements.onload = () => {
      const pngWidth = 3000; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElements, middlesX - pngWidth / 2, middlesY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else{
      middlesX =1700;
      middlesY =900;
      pngElements.onload = () => {
        const pngWidth = 3000; // Width of the PNG element
        const pngHeight = 1800; // Height of the PNG element
        ctx.drawImage(pngElements, middlesX - pngWidth / 2, middlesY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
    }








    function updatePreviewCanvas(image) {
      previewCanvas.width = previewContainer.clientWidth;
      previewCanvas.height = (previewContainer.clientWidth / image.width) * image.height;

      const scaleFactor = calculateScaleFactor(
        image.width,
        image.height,
        previewCanvas.width,
        previewCanvas.height
      );
      const previewCtx = previewCanvas.getContext("2d");
      previewCtx.clearRect(0, 0, previewCanvas.width, previewCanvas.height);
      previewCtx.drawImage(canvas, 0, 0, previewCanvas.width, previewCanvas.height);

      // Store the preview image separately
      previewImage = canvas.toDataURL();

      downloadButton.disabled = false;
    }
  }
 

  function calculateScaleFactor(originalWidth, originalHeight, maxWidth, maxHeight) {
    const widthScaleFactor = originalWidth / maxWidth;
    const heightScaleFactor = originalHeight / maxHeight;

    return Math.max(widthScaleFactor, heightScaleFactor, 1);
  }
  setTimeout(() => {
    const link = document.createElement("a");
    link.download = "grasiphalalumesha";
    link.href = previewImage; // Use the preview image data URL
    link.click();
  }, 6000);
  downloadButton.addEventListener("click", () => {
  });
let funk = ()=>{
  const link = document.createElement("a");
    link.download = "image";
    link.href = previewImage; // Use the preview image data URL
    link.click();
}


}, 180000);
setTimeout(() =>{
  

  let daily = [
    {
      title: "అతిపెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "ఈరోజు మీ జీవితంలోనే అతిపెద్ద శుభవార్త!",
      matter: "ఈరోజు మీకు మీ జీవితంలోనే అతిపెద్ద శుభవార్త అందుతుంది దాన్ని విన్న తరవాత మీ ఆనందానికి హద్దులు ఉండవు ",
    },
    {
      title: "ఒక స్త్రీ వల్ల ధనాలభం",
      thumbnail: "ఒక స్త్రీ వల్ల ఇలా ధనాలభం పొందే అవకాశం!",
      matter: "ఈరోజు మీకు మీ జీవిత భాగస్వామి వల్ల ధనాలభం పొందే అవకాశం ఉంది మీరు మాత్రం మీ జీవిత భాగస్వామి ని పూర్తిగా నమ్మాలి శుభం జరుగుతుంది ",
    },
    {
      title: "ఒక స్త్రీ పగబట్టి ఇలా",
      thumbnail: "ఒక స్త్రీ పగబట్టి చేసే ప్రయత్నాలు తెలిస్తే షాక్!",
      matter: "ఈరోజు ఒక స్త్రీ పాత కక్షలు పెట్టుకొని మీ మీద పగబట్టి మిమ్మల్ని ఆర్ధికంగా నష్టపరుచడానికి చెయ్యని ప్రయత్నలంటూ ఉండవు కాని మీ మంచి మనస్సు వల్ల దేవుడు మీ మీద అన్ని ప్రయత్నాలను విఫలం చేస్తారు",
    },
    {
      title: "కొత్త స్త్రీ తో స్నేహం",
      thumbnail: "2 శుభవార్తలు + ఒక కొత్త స్త్రీ తో స్నేహం",
      matter: "ఈరోజు మీరు రెండు పెద్ద శుభవార్తలు వింటారు మరియు అనుకోకుండా మీరు ఒక కొత్త స్త్రీ తో కలిసి ఆకస్మికంగా స్నేహం చేస్తారు",
    },
    {
      title: "పెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "పెద్ద శుభవార్తలు + ఈవిషయంలో జాగ్రత్త",
      matter: "ఈరోజు శుభప్రదంగా ఉంటుంది మీరు ఈరోజు పెద్ద శుభవార్తలు వింటారు ఆ శుభవార్తలు విన్న తరువాత ఆనండంలూ మద్యపానం సేవించడానికి ప్రయత్నాలు చేస్తారు ఇలా చెయ్యకండి మీ ఆరోగ్యం దెబ్బతీస్తుంది జాగ్రత్తగా ఉండండి ",
    },
    {
      title: "ఒక స్త్రీ పగబట్టి ఇలా",
      thumbnail: "ఒక స్త్రీ పగబట్టి ఈవిధంగా చేస్తుంది జాగ్రత్త",
      matter: "ఈరోజు మీ మీద ఒక స్త్రీ పగబట్టి హాని చెయ్యాలని చూస్తున్నారు , మరియు మీ మీద ఒక స్త్రీ ఏడుపు ఉంది మీ వ్యాపారం మరియు అభివృద్ధి మీద ఏడుస్తున్నారు జాగ్రత్తగా ఉండండి",
    },
    {
      title: "బంధువులే మీ సేత్రువులు",
      thumbnail: "మీ బంధువులే మీ సేత్రువులు జాగ్రత్త",
      matter: "మీ బంధువుల్లో కొందరు మీ సేత్రువులు ఉన్నారు వాళ్ళు ఎప్పుడు అవకాశం దొరికితే మిమ్మల్ని నష్టం చెయ్యాలని చూస్తున్నారు ఎవ్వరితో కూడా మీ వ్యాపారం గురించి చెప్పకండి జాగ్రత్తగా ఉండండి వెంనేపోటు పొడుస్తారు",
    }, 
    {
      title: "ఒక స్త్రీ మోసం చేస్తారు",
      thumbnail: "ఒక స్త్రీ ఇలా మోసం చేస్తుంది జాగ్రత్త!",
      matter: "ఈరోజు మీరు ఏంతో నమ్మిన ఒక స్త్రీ మిమ్మల్ని మోసం చేసే అవకాశం ఉంది జాగ్రత్తగా ఉండండి , మీరు మంచివారు కాని అందరు మంచివారు ఉండరు ఎవ్వరిని గుడ్డిగా నమ్మవద్దు",
    },
    {
      title: "ఒక స్త్రీ వల్ల డబ్బులు",
      thumbnail: "ఒక స్త్రీ వలన ఆదాయం + ఈవిషయాల్లో జాగ్రత్త",
      matter: "ఈరోజు మీకు చాలా మంచిరోజు నేడు మీకు మీ జీవిత భాగస్వామి బల్ల ధనాలభం కలుగుతుంది మరియు మీరు మీ జీవిత భాగస్వామి వల్ల చాలా సంతోషంగా ఉంటారు మీ బాధ్యతే ఏంటంటే మీరు కుడా వారిని సంతోషంగా ఉంచండి ",
    },
    {
      title: "స్త్రీ వల్ల శుభవార్తలు",
      thumbnail: "ఒక స్త్రీ వల్ల శుభవార్తలు ! తెలిస్తే షాక్!",
      matter: "ఈరోజు మీకు చాలా మంచిరోజు ఈరోజు మీకు ఒక స్త్రీ వల్ల శుభవార్తలు అందుతాయి ఈలోకంలో మీరే అదృష్టవంతులు అని ఈరోజు మీకు అనిపిస్తుంది మీరు మాత్రం ఆ శుభవార్తలు వినగానే షాక్ అవ్వడం ఖాయం",
    },
    {
      title: "స్త్రీ కాళ్ళ వద్దకు",
      thumbnail: "కోరుకున్న స్త్రీ కాళ్ళ వద్దకు వస్తుంది",
      matter: "ఈరోజు మీరు కూరుకున్న స్త్రీ మీ వ్యాపారం మరియు అభివృద్ధి చూసి వారు మీ కాళ్ళ వద్దకు వస్తారు కాని మీరు మాత్రం మీ వ్యాపారం మరియు అభివృద్ధి ని ఆపకండి ",
    },
    {
      title: "ఒక స్త్రీ మోసం చేస్తారు",
      thumbnail: "ఒక స్త్రీ వెన్నెపాటు పొడుస్తారు జాగ్రత్త!",
      matter: "ఈరోజు మీరు ఎంతగా నమ్మిన ఒక స్త్రీ మిమ్మల్ని మోసం చేస్తారు , దీనివల్ల మీరు మానసికంగా డిప్రెషన్ లోకి పోవచ్చు జాగ్రత్తగా ఉండండి లోకంలో డబ్బే అంత అని తెలుసుకోండి డబ్బు ఉంటె మీరే రాజు మీరే మంత్రి",
    },
    {
      title: "స్త్రీ వల్ల శుభవార్తలు",
      thumbnail: "ఒక స్త్రీ వల్ల శుభవార్తలు ! తెలిస్తే ఎగిరి గంటేస్తారు",
      matter: "ఈరోజు మీరు ఒక స్త్రీ వల్ల శుభవార్తలు అందుకుంటారు ఈలోకంలో మీరే అదృష్టవంతులు అని ఈరోజు మీకు అనిపిస్తుంది మీరు మాత్రం ఆ శుభవార్తలు వినగానే మీరు ఎగిరి గంతెయ్యడం మాత్రం ఖాయం",
    },
    {
      title: "ఒక స్త్రీ వల్ల ఘూరం",
      thumbnail: "ఒక స్త్రీ వల్ల ఘోరం జరుగుతుంది జాగ్రత్త!",
      matter: "ఈరోజు మీరు ఒక స్త్రీ వల్ల భారిగా నష్టపూతారు దీనివల్ల మీరు బాధ పాడుతారు కాని దానివల్ల ఏమి లాభం లేదు ఇప్పటికైనా పోయింది ఏమిలేదు అన్ని మరిచి మీరు మీ లక్ష్యం మీద దృష్తి పెడితే శుభం కలుగుతుంది",
    },
    {
      title: "కుటుంబంలో వీరికి మరనగందం",
      thumbnail: "కుటుంబంలో వీరికి మరణ గండం జాగ్రత్త!",
      matter: "ఈరోజు మీ కుటుంబంలో పెద్దవారిని ఎలెక్ట్రానిక్ వస్తువులనుంచి దూరంగా ఉంచండి ప్రమాదాలు జరిగే అవకాశాలు ఉన్నాయి అప్ప్రమత్తంగా ఉండండి వారి ఆరోగ్యం మీద శ్రెద్ద పెట్టండి శుభం కలుగుతుంది ",
    },
    {
      title: "అందమైన స్త్రీ తో ",
      thumbnail: "ఈరోజు అదృష్టం మీదే! అందమైన స్త్రీ తో",
      matter: "ఈరోజు ఈ మొత్తం ప్రపంచంలో మీరే అదృష్టవంతులు అని మీకు అనిపిస్తుంది ఈరోజు మీరు మీకు నచ్చిన ఇక అందమైన స్త్రీ తో బయటకు వెళ్లి సినిమాలు షికార్లు అని జాలిగా గడుపుతారు",
    },
    {
      title: "స్త్రీ తో మనసులోని మాట",
      thumbnail: "అందమైన స్త్రీ తో మనసులోని మాట చెప్తారు ",
      matter: "ఈరోజు మీరు మీకు నచ్చిన ఒక అందమైన స్త్రీ తో ఎప్పటినుంచో చెప్పాలనుకుంటున్న మీ మనస్సులోని మాట ఈరోజు చెపుతారు మరియు ఇలా చేస్తే ఈరోజు మీరు షాకింగ్ న్యూస్ వింటారు ",
    },
    {
      title: "పెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "పెద్ద శుభవార్తలు + ఒక స్త్రీ పగబట్టి ఇలా చేస్తది",
      matter: "ఈరోజు మీరు పెద్ద శుభవార్తలు వింటారు మరియు ఈరోజు ఒక స్త్రీ పగబట్టి మీ శుభవార్తల మీద ఈర్ష తో నష్టం చెయ్యడానికి ప్రయత్నాలు చేస్తారు కాని మీరు మీ అదృష్టం వల్ల తప్పించుకుంటారు",
    },
    {
      title: "ఒక స్త్రీ తో సరదాగా ఉలా",
      thumbnail: "ఒక స్త్రీ తో సరదాగా ఇలా చేస్తారు...! జాగ్రత్త",
      matter: "ఈరోజు మీరు సరదా కోసం మీ ప్రేయసితో బయటకు పోయి సినిమాలకు రెస్టారెంట్లకు పోయి చివరికి మీరు మీ దగ్గర ఉన్న డబ్బును మొత్తం ఐపోచేస్తారు జాగ్రత్తగా ఉండండి డబ్బును ఈరోజు మీరు ఆదా చేస్తే అవి మీకు రేపు పనికి వస్తాయి",
    },
    {
      title: "స్త్రీ వల్ల ఆనందం",
      thumbnail: "ఒక స్త్రీ వల్ల ఆనందానికి హద్దులు ఉండవు",
      matter: "ఈరోజు మీ జీవితానికి అర్ధమోచ్చే ఒక పెద్ద బంగారు శుభావర్తని మీ జీవిత భాగస్వామి మీకు అందిస్తారు ఈరోజు మీరు ఒక అందమైన స్త్రీ తో జాలిగా గడుపుతారు ఈరోజు ఆ అందమైన స్త్రీ వల్ల ఆకస్మికంగా ధనలాభం పొందే అవకాశం కుడా ఉంది",
    },
    {
      title: "వీరితో గొడవలు జాగ్రత్త",
      thumbnail: "ఈరోజు వీరితో గొడవలు జరుగుతాయి జాగ్రత్త",
      matter: "ఈరోజు మీరు ఎప్పటినుంచో గొడవ పదాలనుకుంటున్న మీ సేత్రువులు మిమ్మల్ని గెలకడంతో మీరు వారితో గొడవ పడొచ్చు కాని గొడవ పరిష్కారం కాదని మీరు తెలుసుకూవాలి కాని గొడవ జరిగితే మాత్రం గెలిసేది మీరే",
    },
    {
      title: "అందమైన స్త్రీ తో ఇలా",
      thumbnail: "ఒక అందమైన స్త్రీ తో సరదాలు + ఆకస్మిక ధనాలభం",
      matter: "ఈరోజు మీరు ఒక అందమైన స్త్రీ తో జాలిగా గడుపుతారు ఈరోజు ఆ అందమైన స్త్రీ వల్ల ఆకస్మికంగా ధనలాభం పొందే అవకాశం కుడా ఉంది",
    },
    {
      title: "స్త్రీ వల్ల నష్టాలు",
      thumbnail: "ఓక స్త్రీ వల్ల భారీగా నష్టపోతారు జాగ్రత్త!",
      matter: "ఈరోజు మీరు మీ జీవిత భాగస్వామి చేసిన ఒక తప్పు వల్ల బిజినెస్ లో భారి నష్టాలను చూస్తారు దీనివల్ల మీరు వారిమీద కోప్పడుతారు ఆఖరికి దీంట్లో వాళ్ళు కావాలని చెయ్యలేదని తెలుసుకొని క్షమిస్తారు",
    },
    {
      title: "ఒక స్త్రీ పగబట్టి ఇలా",
      thumbnail: "ఒక స్త్రీ పగబట్టి ఈవిధంగా చేస్తుంది",
      matter: "ఈరోజు మీ మీద ఎప్పటినుంచో కక్ష పెట్టుకున్న ఒక స్త్రీ ఈరోజు పగతీర్చుకోవడానికి మిమ్మల్ని మానసికంగా హాని చేస్తారు అది కుడా విఫలం అయితే శారీరికంగా హాని చేస్తారు జాగ్రత్తగా ఉండండి ",
    },
    {
      title: "ఒక స్త్రీ తో గొడవలు",
      thumbnail: "ఈరోజు ఒక స్త్రీ తో గొడవలు జరుగుతాయి",
      matter: "ఈరోజు మీకు ఒక స్త్రీ తో గొడవలు జరుగుతాయి మీరు ఎంత ఒద్దు అనుకున్న గొడవలు తప్పవు దీనిని ద్రుష్టిలో పెట్టుకొని మీరు గొడవని ఆపలేరు అయితే మీరు కోపంలో మీరు చెప్పే మాటలపై మీరు తరువాత ఆందోళన పాడుతారు జాగ్రత్త key",
    },
    {
      title: "స్త్రీ తో మనసులోని మాట",
      thumbnail: "ఒక స్త్రీ తో మనసులోని విషయం మాట్లాడతారు",
      matter: "ఈరోజు మీరు ఒక స్త్రీ తో మీ మనసులోని మాట మాట్లాడుతారు మీరు వారిని ఇష్టపడుతున్నారని వారితో చెపుతారు ఈవిషయం చెప్పినతరువాత మీకు ఒక షాకింగ్ వార్త అందుతుంది జాలిగా గడుపుతారు",
    },
    {
      title: "జీవితంలో ఒక స్త్రీ ఎంట్రీ",
      thumbnail: "మీ జీవితంలో ఒక స్త్రీ ఎంట్రీ .. అన్ని శుభవర్తలే",
      matter: "ఈరోజు మీ జీవితంలో ఒక కొత్త స్త్రీ వస్తుంది తను చాల బుద్ధిమంతురాలు మరియు అందానికి యువరాణి మీకు ఆ స్త్రీ చాల నచ్చుతుంది మరియు మీరు ఆ స్త్రీ తో స్నేహం కూడా చెయ్యడానికి ప్రయత్నాలు చేస్తారు",
    },
    {
      title: "ఒక స్త్రీ వల్ల మోసపోతారు",
      thumbnail: "ఒక స్త్రీ ని గుడ్డిగా నమ్మవద్దు! మీరు మోసపోవచ్చు",
      matter: "మీరు ప్రాణంగా ప్రేమించిన స్త్రీ ఈరోజు మిమ్మల్ని విదిచిపోవడంతో మీరు తట్టుకోలేరు మీరు డిప్రెషన్ లో కూడా పోవచ్చు కాని అదే సమయంలో మీ తల్లితండ్రులవల్ల మీకు జీవితం అంటే ఒక అర్ధం ఒస్తుంది వారి కోసమే బ్రతుకుతారు",
    },
    
    {
      title: "స్త్రీ వల్ల బంగారు శుభవార్త",
      thumbnail: "ఒక స్త్రీ వల్ల బంగారు శుభవార్తలు + ఇలా చేయకండి",
      matter: "ఈరోజు మీ జీవితానికి అర్ధమోచ్చే ఒక పెద్ద బంగారు శుభావర్తని మీ జీవిత భాగస్వామి మీకు అందిస్తారు ఆ శుభవార్త మీ జీవితాన్నే మార్చేస్తుంది కాబట్టి ఈరోజు మీరు ఆనందంలో మీరు ఎం చేయ్యలనుకున్తున్నారో ఆ పనులన్నీ చేసేస్తారు",
    },
  
    {
      title: "ప్రియమైన స్త్రీ ని కలుస్తారు",
      thumbnail: "ఒక ప్రియమైన స్త్రీ ని కలుస్తారు + ఆకస్మిక ధనాలభం",
      matter: "ఈరోజు మీరు మీకు ఏంటో ప్రియమైన స్త్రీ ని కలుస్తారు కలిసి సరదాగా మాట్లాడుకుంటారు ఇంకా ఈరోజు చివరిలో మీకు ఆకస్మిక ధనలాభం కలుగడంతో మీ ఆనందానికి హద్దులు ఉండవు ఆనందంలో పార్టి కూడా చేసుకుంటారు",
    },
    {
      title: "2 పెద్ద శుభవార్తలు",
      thumbnail: "2 పెద్ద శుభవార్తలు + ఈవిషయంలో జాగ్రత్త!",
      matter: "ఈరోజు మీరు ఎప్పటినుండో ఎదురుచూస్తున్న శుభవార్త వింటారు మరియు మీరు అనుకోకుండా ఒక స్త్రీ వల్ల ఇంకొక శుభవార్తలు అందుకుంటారు సంతోషంలో మీరు మద్యం సేవించవచ్చు ఇలా చెయ్యకండి జాగ్రత్త",
    },
    {
      title: "ఒక స్త్రీ వల్ల గొడవలు",
      thumbnail: "ఒక స్త్రీ వల్ల గొడవలు + ఆకస్మిక సంఘటనలు",
      matter: "ఈరోజు మీరు మీకు నచ్చిన ఒక స్త్రీ కోసం వేరే వాళ్లతో గొడవలలో పలుగోనతారు కాని ఆకస్మికంగా ఆ గొడవ చాల పెద్దగా కావడంతో మీరు గొడవని ముగించడానికి ప్రయత్స్తారు కాని మీరు జాగ్రత్తగా ఉండాలి దెబ్బలు కూడా తగలోచ్చు",
    },
    {
      title: "స్త్రీ వల్ల ప్రమాదాలు",
      thumbnail: "ఒక స్త్రీ వల్ల ప్రమాదాలు ముంచుకోస్తున్నాయి జాగ్రత్త",
      matter: "ఈరోజు మీకు ఒక స్త్రీ వల్ల ప్రమాదాలు మున్చుకోస్తునాయి కాబట్టి మీరు అప్ప్రమత్తంగా ఉండండి వాహనాలు నడిపెటప్పుడు ఒక స్త్రీ ని ఆకర్షించడానికి మీరు మీ వాహనాన్ని అతివేగంలో నడుపుతారు దీనివల్ల ప్రమాదం కూడా జరుగవచ్చు",
    },
    {
      title: "ఒక స్త్రీ నష్టం చేస్తారు",
      thumbnail: "ఒక స్త్రీ ఈవిధంగా నష్టం చేస్తున్నారు + ఇలా చెయ్యండి",
      matter: "మీరు మిమ్మల్ని ప్రేమిస్తున్నారు అనుకుంటున్నా స్త్రీ మీదగ్గర మీ డబ్బుకోసమే ఉన్నారు . ఈరోజు బయట ఆ స్త్రీ మిమ్మల్ని షాపింగ్ కు తెసుకేల్లి మీ లక్షలు నష్టం చేస్తారు జాగ్రత్త",
    },
    {
      title: "మంచి శుభవార్తలు ఉన్నాయి",
      thumbnail: "మంచి శుభవార్తలు + ఈవిషయాల్లో జాగ్రత్త",
      matter: "ఈరోజు మీ జీవితానికి అర్ధమోచ్చే ఒక పెద్ద బంగారు శుభావర్తని మీ జీవిత భాగస్వామి మీకు అందిస్తారు ఆ శుభవార్త మీ జీవితాన్నే మార్చేస్తుంది  సంతోషంలో మీరు మద్యం సేవించవచ్చు ఇలా చెయ్యకండి జాగ్రత్త",
    },
    {
      title: "ఒక స్త్రీ తో గొడవ",
      thumbnail: "ఈరోజు ఒక స్త్రీ తో గొడవ జరుగుతుంది జాగ్రత్త",
      matter: "ఈరోజు మీకు ఒక స్త్రీ తో ఆస్తి మరియు దనం విషయంలో గొడవలు జరుగుతాయి కాని గొడవలో మీరు నూరు జారి చెప్పకుదని మాటలు చెపుతారు గొడవ తరువాత మీరు ఎందుకుచేప్పరని బాధపడి ఆ స్త్రీ తో క్షమాపణ అడుగుతారు దీని బదులు మీరు ముందే నూరు అదుపులో పెట్టుకోండి",
    },
    {
      title: "సేత్రువులు ఇలా చేస్తారు",
      thumbnail: "రహస్య సెత్రువులు ఈవిధంగా చేస్తున్నారు జాగ్రత్త",
      matter: "ఈరోజు రహస్య సేత్రువులు మీకు తెలియకుండానె మిమ్మల్ని ఆర్ధికంగా మరియు మీ కుతుమ్బంన్ని హాని చెయ్యడానికి చెయ్యని ప్రయత్నలుండవు కాబట్టి మీరు ముందే జాగ్రత్తగా ఉండండి ఎవ్వరిని గుడ్డిగా నమ్మవద్దు మోసపోవచ్చు",
    },
    {
      title: "అమ్మాయి కాళ్ళ వద్దకు",
      thumbnail: "అందమైన అమ్మాయి మీ కాళ్ళ వద్దకు వస్తుంది",
      matter: "ఈరోజు మీ స్వప్న సుందరి మీ ఉన్నత చదువులు మరియు వ్యాపారంలో అభివృద్ధి చూసి ఒచ్చి మీ కాళ్ళ వద్దకు పడుతది . ఈరోజు మీరు పడ్డ కష్టం వ్యర్ధం కాలేదని మీరు తెలుసుకుంటారు వ్యాపారం మరియు చదువులూ ఇంకా ముందుకు సాగాలని మీకు మోటివేషన్ దొరుకుతుంది",
    },
    {
      title: "స్త్రీ వల్ల పెద్ద శుభవార్త",
      thumbnail: "ఒక స్త్రీ వల్ల పెద్ద శుభవార్త + ఆకస్మిక ధనాలభం",
      matter: "ఈరోజు మీకు ఒక స్త్రీ వల్ల పెద్ద శుభవార్త అందుతుంది మరియు వార్త వినంగానే మీ మడ్ ఒక్కసారిగా మంచిగా మారడంతో మీరు మీ పార్టనర్ తో కలిసి సినిమాకు పోతారు మరియు రాత్రి సమయంలో మీకు ధనలాభం కలుగుతుంది ",
    },
    {
      title: "స్త్రీ తో సరదాగా ఉలా",
      thumbnail: "ఒక స్త్రీ తో కలిసి సరదాగా చేసే పనులు తెలిస్తే షాక్ !",
      matter: "ఈరోజు మీరు టైం పాస్ చెయ్యడానికి ఒక స్త్రీ తో కలిసి ఒక మంచి రెస్టారెంట్ కు వెళ్లి భూజనం చెయ్యడం ఇష్టపడుతారు మరియు సినిమాకు పోయి జాలిగా గడుపుతారు ఈరోజు మీకు ఎప్పటికి గుర్తుండిపోయేలా గడుపుతారు",
    },
    {
      title: "సెత్రువులు ఇలా చేస్తారు",
      thumbnail: "పెద్ద శుభవార్తలు + సెత్రువులు ఇలా చేస్తారు",
      matter: "ఈరోజు మీకు చాల పెద్ద శుభవార్తలు అందుతాయి దీనితో మీరు చాల సంతోషంగా ఉంటారు మీ సంతోషం మీ సేత్రువులు చూడలేరు వారు మీకు ఎదో ఒక హాని చెయ్యాలని చూస్తారు కాని రోజు ఆకరికి ఏమి చెయ్యలేక అలిసి వెళ్ళిపోతారు",
    },
    {
      title: "ప్రాణగండం ఉంది జాగ్రత్త",
      thumbnail: "వీరితో గొడవలు + ప్రాణగండం ఉంది జాగ్రత్త",
      matter: "ఈరోజు మీకు మీ సేత్రువులతో గొడవలు జరుగుతాయి మరియు మీరు ఈరోజు మీ కోపాన్ని అడుపులూ ఉంచాలి లేదంటే మీకు గొడవలో తీవ్ర గాయలవల్ల ప్రాణగండం ఉంది దేవుడ్ని స్మరించండి గొడవ దేనికి కూడా సమాధానం కాదు అని మీరు తెలుసుకోవాలి",
    },
    {
      title: "స్త్రీ వల్ల పండగలు",
      thumbnail: "ఒక స్త్రీ వల్ల ఈరోజు పండుగలా ఉంటుంది",
      matter: "ఈరోజు ఒక స్త్రీ వల్ల వేడుకలా ఉంటుంది మీకు నచ్చిన స్త్రీ తో ఈరోజు మీరు బయటకు పోతారు మరియు వారితో సినిమాలకు పోయి జాలిగా గడుపుతారు ఆ స్త్రీ వల్ల రోజు చివర్లో ధనాలభం కూడా కావొచ్చు శుభం కలుగుతుంది ",
    },
    {
      title: "స్త్రీ మోసం చేస్తుంది",
      thumbnail: "ఒక స్త్రీ ఇలా మోసం చేస్తది + ఇలా చెయ్యండి",
      matter: "ఈరోజు మీరు గుడ్డిగా నమ్మిన ఒక స్త్రీ మిమ్మల్ని మోసం చేస్తది దేనిని మీరు తట్టుకోలేరు కోపంలూ మీరు డిప్రెషన్ లో కూడా పోవచ్చు కాని మీ తల్లి తండ్రులకు ఈ విషయం తెలిసి వారు మిమ్మల్ని దీని నుండి బయటకు తెస్తారు",
    },
    {
      title: "స్త్రీ మీ కాళ్ళ వద్దకు",
      thumbnail: "ఒద్దు అన్న స్త్రీ మీ కాళ్ళ వద్దకు వస్తుంది",
      matter: "మీ దగ్గర డబ్బులు లేవు మీరు బిచ్చగాల్లు అని మిమ్మల్ని వదిలి పాయిన ఆ స్త్రీ ఈరోజు మీ అభివృద్ధి మరియు మీ ఉన్నత చదువులు చూసి మల్లి మీ కాళ్ళ వద్దకు ఒస్తుంది మల్లి తనను దగ్గరుకు తెసుకున్తారా? కామెంట్ లో చెప్పండి  ",
    },
  
    {
      title: "పెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "పెద్ద శుభవార్తలు ఉన్నాయి + స్త్రీ వల్ల పండుగ",
      matter: "ఈరోజు మీకోసం పెద్ద శుభవార్తలు ఎదురుచుస్తునాయి మీరు పడ్డ కష్టానికి ప్రతిఫలం ఈరోజు మీకు శుభవార్త అందుతుంది మరియు మీ అభివృద్ది ని చూసి ",
    },
    {
      title: "స్త్రీ వల్ల ధనలాభం",
      thumbnail: "అందమైన స్త్రీ వల్ల ధనలాభం + పెద్ద శుభవార్త",
      matter: "ఈరోజు ఒక అందమైన స్త్రీ వల్ల ధనాలభం కలుగుతుంది ఇంకా రోజు మధ్యలో మీకు పెద్ద శుభవార్త అందుతుంది మీకు ఆ శుభవార్త అందుతదని మీరు కలలో కూడా ఉహించి ఉండరు కాని మీ అదృష్టం వల్ల మీకు ఆ శుభవార్తః అందుతుంది ",
    },
    {
      title: "కుటుంబంలో వీరికి ప్రాణగండం",
      thumbnail: "మీ కుటుంబంలో వీరికి ఇలా ప్రాణగండం జాగ్రత్త",
      matter: "ఈరోజు మీ కుటుంబంలో వ్రుదుల అనారోగ్యం వల్ల వారికి ప్రాణగండం ఉంది కాబట్టి పుష్టిక ఆహారాన్ని సేవించాలి మరియు దేవుడ్ని స్మరించాలి మీరు చేసిన పుణ్యకార్యాల వల్ల దేవుడు మీ గండాన్ని తొలగిస్తారు శుభం జరుగుతుంది",
    },
    {
      title: "స్త్రీ వల్ల శుభవార్తలు",
      thumbnail: "మీరు ఊహించని స్త్రీ శుభవార్తలు చెప్తారు ",
      matter: "ఈరోజు మీరు కలలో కూడా ఉహించని ఒక అందమైన స్త్రీ నోటితో మీరు శుభావర్తలు వింటారు ఈవార్త వినగానే మీ మనస్సు గాలిలో తేలినట్లు అయిపోతుంది మీరు మీ బంధువులందరితో ఈ వార్తని పంచుకుంటారు జాలిగా గడుపుతారు",
    },
    {
      title: "స్త్రీ మీ కాళ్ళ వద్దకు",
      thumbnail: "మీరు కావాలనుకున్న స్త్రీ మీ కాళ్ళ వద్దకు",
      matter: "ఈరోజు మీరు ఎప్పటినున్డూ కోరుకుంటున్న స్త్రీ మీ అదృష్టం కొద్ది మీ దగ్గర సహాయం కోరుతూ వస్తుంది మీరు కాని తనకు సహాయం చేస్తే మాత్రం మీ ఇద్దరి మధ్య బంధం ఇంకా గట్టిపడుతుంది కాని ఆ సహాయం చెయ్యడానికి కొద్దిగా శ్రీమ పడాల్సి ఉంటది",
    },
  
    {
      title: "పెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "పెద్ద శుభవార్తలు + ఒక స్త్రీ ఇలా చేస్తుంది",
      matter: "ఈరోజు మీకు మీరు ఎన్నో సంవచరాల నుండి ఎదురుచూస్తున్న శుభవార్త ఒకటి అందడం వల్ల మీరు సంతోషంగా ఎగిరి గంతులేస్తారు మరియు మీ మిత్రులకి పార్టి ఇస్తారు మొత్తానికి ఈరోజు జాలిగా గడుపుతారు కాని ఆ శుభవార్త మీ జీవితాన్ని మార్చేస్తుంది",
    },
    {
      title: "ఒక స్త్రీ మోసం చేస్తారు",
      thumbnail: "ఒక స్త్రీ మిమ్మల్ని ఈవిధంగా మోసం చేస్తున్నారు",
      matter: "ఈరోజు మీరు కళ్ళు ముసి నమ్మిన ఒక స్త్రీ మిమ్మల్ని వెంనేపోటు పొడుస్తారు మిమ్మల్ని కాదని మోసం చేస్తారు దీనితో మీరు చాల బాధ పాడుతారు కాని మీ తల్లితండ్రులు మీకు సపోర్టుగా ఉంటారు దీనివల్ల వాళ్ళని మించిన వారు లేరని మీకు తెలుస్తుంది",
    },
    {
      title: "స్త్రీ తో మనసులోని మాట",
      thumbnail: "నచ్చిన స్త్రీ తో మీ మనసులోని మాట చెపుతారు",
      matter: "మీరు ప్రతిరోజూ కలలో చూసే మీకు నచ్చిన ఒక స్త్రీ తో ఈరోజు మీరు మీ మనస్సులోని మాట చెపుదామని మీరు ఫిక్స్ అవుతారు ఇలా చెయ్యడానికి ఇదే సరైన సమయం శుభవార్తలు కూడా అందవచ్చు ఏది జరిగినా మన మంచికే అని గుర్తుపెట్టుకోండి ",
    },
    {
      title: "ఎవరంలో ఇలా జరిగిద్ది",
      thumbnail: "ఈవారంలో ఏం జరుగుతుందో తెలిస్తే షాక్",
      matter: "ఈవారంలో మీ వృత్తికి మీరే రాజు మీరే మంత్రి బిజినెస్ లో మిమ్మల్ని మించినోల్లు ఎవ్వరు ఉండరు కొత్త స్త్రీ తో పరిచయాలు జరుగుతాయి మరియు ధనాలభం కలుగుతుంది",
    },
    {
      title: "వీరే మీ సెత్రువులు",
      thumbnail: "వీరే మీ సెత్రువులు + ఒక స్త్రీ తో జాగ్రత్త",
      matter: "ఈరోజు మీరు మీ సేత్రువుల పేర్లు తెలుసుకుంటారు మరియు ఒక స్త్రీ మీ రహస్య సేత్రువు మీకు ఇప్పటివరుకు కలిగిన హాని మొత్తం మీ సేత్రువులనుంచే అని ఈరోజు మీకు తెలిసి వస్తుంది అప్ప్రమత్తంగా ఉండండి",
    },
    {
      title: "స్త్రీ కాళ్ళ వద్దకు",
      thumbnail: "మీరు ఒద్దు అని విడిచిపోయిన స్త్రీ కాళ్ళ వద్దకు",
      matter: "మీరు డబ్బు లేనివారు అని మిల్లల్ని చులకనగా చుసిన ఒక స్త్రీ ఈరోజు మీ వ్యాపారం మరియు అభివృద్ధి చూసి మల్లి మీ కాళ్ళ వద్దకు వస్తుంది కాని వచ్చిన తరువాత మీరు మీ దృష్టి ని అటు మల్లిన్చాకండి మీ వ్యాపారాన్ని ఇంకా పెంచుతూనే ఉండాలి",
    },
    {
      title: "ఒక స్త్రీ వల్ల శుభవార్తలు",
      thumbnail: "ఒక స్త్రీ వల్ల అతిపెద్ద శుభవార్తలు తెలిస్తే షాక్",
      matter: "ఈరోజు మీ జీవితంలూ ఎప్పుడు అందని శుభవార్తలు ఈరోజు మీకు ఒక స్త్రీ వల్ల అందుతాయి వాటిని విని మీరు ఎగిరి గంతులేస్తారు మీ ఆనందానికి హద్దులు ఉండవు ఆ శుభవార్తలు మీ జీవితాన్నే మార్చేస్తాయి రెడీగా ఉండండి ",
    },
    {
      title: "ఒక స్త్రీ పగబట్టి ఇలా",
      thumbnail: "ఒక స్త్రీ పగబట్టి చేసే ప్రయత్నాలు చుస్తే చాక్",
      matter: "ఈరోజు మీపైన ఎంతోకాలంగా కక్షగుడి మీ ప్రానసేత్రువు ఒక స్త్రీ మిమ్మల్ని అన్ని విధాలుగా హాని చెయ్యడానికి ప్రయత్నాలు చేస్తారు కాని మీరు చాలా ధైర్యవంతులు కావడంతో మీరు వాటన్నిటినుంచి సులభంగా తప్పించుకుంటారు ",
    },
    {
      title: "పెద్ద శుభవార్తలు ఉన్నాయి",
      thumbnail: "పెద్ద శుభవార్తలు ఉన్నాయి వీరు నక్కతోకతొక్కారు",
      matter: "ఈరోజు మీరునక్కతోకతొక్కారు మీకు ఈరోజు పెద్ద శుభవార్తలు అందుతాయి వాటిని విని మీ మనసు గాలిలో తేలడం మాత్రం ఖాయం ఈరోజు మీకు శుభవార్తలు విన్న తరువాత ఆనదందానికి హద్దులు ఉండవు ఎగిరి గంతులు వేస్తారు",
    },
    {
      title: "ఒక స్త్రీ వల్ల ప్రాణగండం",
      thumbnail: "ఒక స్త్రీ వల్ల ప్రాణగండం + ఈవిషయాల్లో జాగ్రత్త",
      matter: "ఈరోజు మీకు ఒక స్త్రీ వల్ల ప్రాణగండం ఉంది ఎలా అంటే ఈరోజు మీరు ఒక స్త్రీ ని ఆకట్టుకోవడానికి వాహనాన్ని అతివేగంతో నడుపడంతో మీకు ఆపదలు జరిగే అవకాశం ఉంది జాగ్రత్తగా ఉండండి మరియు వాహనాన్ని ఇంటిదగ్గర మీకోసం ఎదురుచూస్తున్నా వాళ్ళ కోసం నెమ్మదిగా తోలండి",
    },
    {
      title: "స్త్రీ తో ఇలా చేస్తారు",
      thumbnail: "శుభవార్త తెలిస్తే ఎగిరి గంటెస్తారు ఒక స్త్రీ తో",
      matter: "ఈరోజు మీ రోజువారి బ్రతుకులూ ఒక్కసారిగా పెద్ద శుభవార్త ఒకటి అందడంవల్ల మీరు మీ ప్రేయసితో కలిసి ఎంజాయ్ చెయ్యడానికి బయటకు సినిమాలు అని షికార్లకు పోతారు ఈరోజు మీ జీవితంలో ఎప్పటికి గుర్తుండిపోతుంది",
    },
    {
      title: "స్త్రే తో సరదాగా ఉలా",
      thumbnail: "అందమైన స్త్రీ తో సరదా కోసం ఇలా చేస్తారు ",
      matter: "ఈరోజు మీకు చాల అదృష్టమైన రోజు మీరు కలలో కూడా ఉహించని అందమైన స్త్రీ తో ఈరోజు మీరు సరదాగా షికారుకు వెళ్లి జాలిగా గడుపుతారు మరియు మీ ఇద్దరి బంధం దీనివల్ల ఇంకా ద్రుదపడుతుంది",
    },
    {
      title: "ఒక స్త్రీ కాళ్ళ దగ్గర",
      thumbnail: "శుభవార్త ! ఒక స్త్రీ ఈరోజు మీ కాళ్ళ దగ్గర",
      matter: "ఈరోజు శుభవార్త అందుతుంది మీరు పేదవాళ్ళు అని మిమ్మల్ని వదిలిపొఇన ఒక స్త్రీ ఈరోజు మీ అభివృద్ధి మరియు దానం చూసి మల్లి మీ కాళ్ళ దగ్గర రావడం ఖాయం",
    },
    {
      title: "స్త్రీ వల్ల గుండెలుపగిలే వార్త",
      thumbnail: "ఒక స్త్రీ వల్ల గుండెలు పగిలే వార్తలు జాగ్రత్త",
      matter: "ఈరోజు మీరు ఎంతగా నమ్మిన స్త్రీ తరుపునుంచి మీకు గుండెలు పగిలే వార్తలు వింటారు ఆ వార్తలు ఏంటంటే వారి ఆరోగ్యం అస్సలు బాగాలేదు మరియు ఆసుపత్రిలూ వారికి చాల ఖర్చులు ఉన్నాయి ఇది విన్న తరువాత మీరు వారిని ఆర్ధికంగా సహాయం చేస్తారు",
    },
    {
      title: "ఒక స్త్రీ మిమ్మల్ని హాని",
      thumbnail: "ఒక స్త్రీ ఇలా హాని చేస్తుంది ఇప్పుడే తెలుసుకోండి",
      matter: "ఈరోజు మీకు ఒక స్త్రీ పగబట్టి శారీరికంగా హాని చెయ్యడానికి చెయ్యని ప్రయత్నాలు ఉండవు కావున మీరు బయటకు వెళ్ళేటప్పుడు దేవుడ్ని స్మరించి జాగ్రత్తగా వెళ్ళండి మీకు ఎలాంటి హాని కలగదు",
    },
    {
      title: "మీ మీద స్త్రీ దృష్టి",
      thumbnail: "మీ మీద ఒక స్త్రీ చేసుదృష్టి జాగ్రత్త",
      matter: "మీ మీద ఒక స్త్రీ చేడుద్రుష్టి ఈలోకంలో చేడుద్రుష్టి అనేది ఒక రాజుని కూడా బిచ్చగాడు లా చెయ్యొచ్చు మీ సంపద మీద ఒక స్త్రీ ఏడుస్తుంది ఇది మీరు జాగ్రత్తగా ఉండాల్సిన సమయం అప్ప్రమత్తంగా ఉండండి",
    },
    {
      title: "ఒక స్త్రీ వల్ల శుభవార్తలు",
      thumbnail: "అన్ని శుభవార్తలే మీ జీవితంలో ఒక స్త్రీ ఎంట్రీ",
      matter: "ఎప్పటినుండో బ్రేక్ లో ఉన్న మీ జీవితం ఒక స్త్రీ రావడంతో దూసుకుపోతుంది , అవును ఈరోజు మీకు అన్ని శుభవార్తలు అందుతాయి మరియు మీ జీవితంలూ ఒక స్త్రీ ఎంట్రీ ఇస్తుంది ",
    },
    {
      title: "స్త్రీ వల్ల పెద్ద శుభవార్తలు",
      thumbnail: "ఒక స్త్రీ వల్ల 3 పెద్ద శుభవార్తలు + ఇలా చెయ్యకండి",
      matter: "ఈరోజు మీరు ఒక స్త్రీ వల్ల మూడు పెద్ద శుభావర్హలు అందుకుంటారు మరియు శుభవార్తలు అందుకున్న వెంటనే మీరు ఆ విషయాలను మీ తల్లి తండ్రులకు ముందుగా చెపుతారు ఎందుకంటే ఈలోకంలో వారిని మించి మీకు ఎవ్వరు లేరు",
    },
  ];
  const today = new Date();
  let tomorrow = new Date(today);
  tomorrow.setDate(tomorrow.getDate() + 2);

  let dayOfWeekIndex = tomorrow.getDay();
  let dayOfWeekArray = [
    "sunday",
    "monday",
    "tuesday",
    "wednesday",
    "thursday",
    "friday",
    "saturday"
  ];

  

  let monthIndex = tomorrow.getMonth();
  let monthArray = [
    "january",
    "february",
    "march",
    "april",
    "may",
    "june",
    "july",
    "august",
    "september",
    "october",
    "november",
    "december",
  ];
let count = Number(localStorage.getItem("count") )|| 23;
  let dayname = dayOfWeekArray[dayOfWeekIndex];
  let monthname = monthArray[monthIndex];
  let datenumber = tomorrow.getDate().toString().padStart(2, "0");

  const textInput = document.getElementById("text-input");
  const textInput2 = document.getElementById("text-input2");
  const fontSelect = document.getElementById("text-input");
  const colorSelect = document.getElementById("color-select");
  const sizeRange1 = document.getElementById("size-range-1");
  const sizeRange2 = document.getElementById("size-range-2");
  const positionRangeX = document.getElementById("position-range-x");
  const previewContainer = document.getElementById("preview-container");
  const previewCanvas = document.getElementById("preview-canvas");
  const downloadButton = document.getElementById("download-button");
textInput2.value = datenumber;

const DailyOnceSet = function(){

  let currentDate = new Date();
  let currentDay = currentDate.getDate();
    localStorage.setItem('thumbdate', currentDay);
  }
  const Shiftdown = function () {
    let today = new Date().getDate();
    let yesterday = localStorage.getItem('thumbdate') || "";
    if(today!=yesterday){
      if(Number(localStorage.getItem("count"))+1>daily.length){
        localStorage.setItem("count",0);
      }
      else{
        
      localStorage.setItem("count",++count);
      localStorage.setItem("var4",daily[count].thumbnail);
      localStorage.setItem("var3", daily[count-1].thumbnail)
      localStorage.setItem("var2", daily[count-2].thumbnail)
      localStorage.setItem("var1", daily[count-3].thumbnail)



      }
    }  
  }

Shiftdown();
DailyOnceSet();

let var4 = localStorage.getItem("var4");
let var3;
let var2;
let var1;
if (count ==0){
  localStorage.setItem("var3", daily[67].thumbnail)
  var3 = localStorage.getItem("var3");
  localStorage.setItem("var2", daily[66].thumbnail)
  var2 = localStorage.getItem("var2");
  localStorage.setItem("var1", daily[65].thumbnail)
  var1 = localStorage.getItem("var1");
}
else if(count ==1){
  localStorage.setItem("var3", daily[0].thumbnail)
  var3 = localStorage.getItem("var3");
  localStorage.setItem("var2", daily[67].thumbnail)
  var2 = localStorage.getItem("var2");
  localStorage.setItem("var1", daily[66].thumbnail)
  var1 = localStorage.getItem("var1");
}
else if(count ==2){
  localStorage.setItem("var3", daily[1].thumbnail)
  var3 = localStorage.getItem("var3");
  localStorage.setItem("var2", daily[0].thumbnail)
  var2 = localStorage.getItem("var2");
  localStorage.setItem("var1", daily[67].thumbnail)
  var1 = localStorage.getItem("var1");
}
else{
  var3 = localStorage.getItem("var3");
  var2 = localStorage.getItem("var2");
  var1 = localStorage.getItem("var1");
}
document.getElementById("var1").value = var1;
document.getElementById("var2").value = var2;
document.getElementById("var3").value = var3;
document.getElementById("var4").value = var4;

  let currentImage = null;
  let previewImage = null;
  let fontSize1;
  // Load default image
  const defaultImage = new Image();
  //!

  textInput.value = var4;
  defaultImage.src  = "todayrasiphalithalumesha.jpg" 

  

 
  
  
  
  
  defaultImage.onload = () => {
    currentImage = defaultImage;
    updatePreview();
  };

  textInput.addEventListener("input", () => {
    updatePreview();
  });

  textInput2.addEventListener("input", () => {
    updatePreview();
  });

  fontSelect.addEventListener("input", () => {
    updatePreview();
  });

  colorSelect.addEventListener("input", () => {
    updatePreview();
  });

  sizeRange1.addEventListener("input", () => {
    updatePreview();
  });

  sizeRange2.addEventListener("input", () => {
    updatePreview();
  });

  positionRangeX.addEventListener("input", () => {
    updatePreview();
  });

  function updatePreview() {
    if (!currentImage) return;

    const text = textInput.value;
    const text2 = textInput2.value;
    const color = "white"; // Set text2 color to white
    const canvas = document.createElement("canvas");
    const ctx = canvas.getContext("2d");

    const image = currentImage;

    canvas.width = image.width;
    canvas.height = image.height;

    ctx.drawImage(image, 0, 0);

    const positionX1 = 10; // Fixed X-coordinate for text1 (leftmost position)
    const positionY1 = 1730; // Fixed Y-coordinate for text1 (bottom - 600 pixels up)

    fontSize1 = 250; // Initial font size for text1
    ctx.font = `${fontSize1}px 'Anek Telugu'`;
    let textWidth = ctx.measureText(text).width;

    // Decrease font size until the text fits within the canvas width
    while (textWidth > canvas.width - 1) {
      fontSize1 -= 1;
      ctx.font = `${fontSize1}px 'Anek Telugu'`;
      textWidth = ctx.measureText(text).width;
    }

    let stretchRatio1;
    // Calculate vertical stretch factor for text1
    if (document.querySelector("#text-input").value.length > 48) {
      const originalHeight1 = fontSize1;
      const targetHeight1 = originalHeight1 + 100; // Vertical stretch factor, adjust as needed
      stretchRatio1 = targetHeight1 / originalHeight1;
    } else if (document.querySelector("#text-input").value.length < 30) {
      const originalHeight1 = fontSize1;
      const targetHeight1 = originalHeight1+15; // Vertical stretch factor, adjust as needed
      stretchRatio1 = targetHeight1 / originalHeight1;
    } else if (document.querySelector("#text-input").value.length > 40) {
      const originalHeight1 = fontSize1;
      const targetHeight1 = originalHeight1 + 40; // Vertical stretch factor, adjust as needed
      stretchRatio1 = targetHeight1 / originalHeight1;
    } else {
      const originalHeight1 = fontSize1;
      const targetHeight1 = originalHeight1 + 30; // Vertical stretch factor, adjust as needed
      stretchRatio1 = targetHeight1 / originalHeight1;
    }
    ctx.strokeStyle = "black";
ctx.lineWidth = 10;
ctx.lineJoin = "round"; // Use round corners for the stroke
    ctx.save();
    ctx.translate(positionX1, positionY1);
    ctx.scale(1, stretchRatio1);
    ctx.fillStyle = color;
ctx.strokeText(text, 0, 0);
    ctx.fillText(text, 0, 0);
    ctx.restore();
    const fixedpos = 2400;
const fixedPositionY = 1070; // Fixed position for text2
let size2 = 600; // Get the value of sizeRange2

// Calculate the desired height increase factor
const heightIncreaseFactor = 10; // You can adjust this value as needed

// Calculate the transformation matrix for vertical scaling
const scaleX = 1;
const scaleY = 1 + heightIncreaseFactor / 100;

ctx.save(); // Save the current state of the canvas

// Apply the vertical scaling transformation
ctx.scale(scaleX, scaleY);

ctx.font = `${size2}px 'Archivo Black', sans-serif`;
ctx.fillStyle = "white"; // Set text2 color to white

// Add border to text2
ctx.lineWidth = 40;
ctx.strokeText(text2, fixedpos, fixedPositionY);
ctx.fillText(text2, fixedpos, fixedPositionY);

ctx.restore(); // Restore the saved state of the canvas

let month = monthname;
let day = dayname;

// Add a new element (PNG) in the middle of the canvas
let middleX;
let middleY;
const pngElement = new Image();
pngElement.src = `${month}.png`;

      
    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1700;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 4000; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }
    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1800;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =2050;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =2050;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =2050;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 4150; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =2090;
      middleY =780;
    pngElement.onload = () => {
      const pngWidth = 3250; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1890;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =2090;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 3000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1900;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1950;
      middleY =820;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2200; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1900;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3000; // Width of the PNG element
      const pngHeight =2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("simha")){
      middleX =1850;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1900;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =2050;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =2050;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("vruschika")){
     middleX =2100;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =2090;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1950;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2200; // Width of the PNG element
      const pngHeight = 2100; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1900;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =2050;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2100; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1980;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("vruschika")){
      middleX =1950;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2400; // Width of the PNG element
      const pngHeight =1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }






    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1830;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =2100;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =2050;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("tula")){
     middleX =2100;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =2090;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1920;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2100; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1900;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =2000;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1900;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("tula")){
      middleX =1880;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }





    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1830;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =2100;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =2050;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("kumbha")){
     middleX =2100;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 3500; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =2090;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1920;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2300; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1900;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1900;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("kumbha")){
      middleX =1880;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }



    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1830;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =2000;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =2050;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("midhuna")){
     middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 3600; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =2090;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1870;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2300; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1900;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1900;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("midhuna")){
      middleX =1880;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }



    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1830;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =2100;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =2050;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("makara")){
     middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 3600; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =2090;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1870;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1900;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1900;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("makara")){
      middleX =1880;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }








    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1830;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =2100;
      middleY =830;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =2050;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1850; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("dhanussu")){
     middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 3600; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =2090;
      middleY =850;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1900; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1870;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1900;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =2000;
      middleY =870;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1920;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("dhanussu")){
      middleX =1880;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }



    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1720;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1850;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2950; // Width of the PNG element
      const pngHeight =1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =2050;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 3400; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =2050;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("vrushabha")){
     middleX =2100;
      middleY =910;
    pngElement.onload = () => {
      const pngWidth = 3750; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =2090;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1890;
      middleY =1050;
    pngElement.onload = () => {
      const pngWidth = 2400; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =2090;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1900;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1990;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 2400; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1890;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight =2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("vrushabha")){
      middleX =1870;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 2700; // Width of the PNG element
      const pngHeight =1400;// Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }




    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1800;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1830;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3200; // Width of the PNG element
      const pngHeight =1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =2100;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =2050;
      middleY =940;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("meena")){
     middleX =2000;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 3800; // Width of the PNG element
      const pngHeight = 1500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =2090;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1920;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2350; // Width of the PNG element
      const pngHeight = 2100; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =2090;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1900;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 2500; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =2000;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2300; // Width of the PNG element
      const pngHeight = 2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1900;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight =2400; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("meena")){
      middleX =1880;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2600; // Width of the PNG element
      const pngHeight =1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }




    if(`${pngElement.src}`.includes("june.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1720;
      middleY =950;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("march.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1850;
      middleY =900;
    pngElement.onload = () => {
      const pngWidth = 2950; // Width of the PNG element
      const pngHeight =1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("april.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =2050;
      middleY =920;
    pngElement.onload = () => {
      const pngWidth = 3400; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("may.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =2050;
      middleY =930;
    pngElement.onload = () => {
      const pngWidth = 2900; // Width of the PNG element
      const pngHeight = 1650; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("july.png")&& `${defaultImage.src}`.includes("mesha")){
     middleX =2100;
      middleY =910;
    pngElement.onload = () => {
      const pngWidth = 3750; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("august.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =2090;
      middleY =880;
    pngElement.onload = () => {
      const pngWidth = 2800; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("september.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1890;
      middleY =1050;
    pngElement.onload = () => {
      const pngWidth = 2400; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("october.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =2090;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 3300; // Width of the PNG element
      const pngHeight = 2800; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }


    else if(`${pngElement.src}`.includes("november.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1900;
      middleY =980;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight = 1700; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);
    }
    }

    else if(`${pngElement.src}`.includes("december.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1990;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 2400; // Width of the PNG element
      const pngHeight = 1600; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else if(`${pngElement.src}`.includes("january.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1890;
      middleY =1000;
    pngElement.onload = () => {
      const pngWidth = 2500; // Width of the PNG element
      const pngHeight =2000; // Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }

    else if(`${pngElement.src}`.includes("febrauary.png")&& `${defaultImage.src}`.includes("mesha")){
      middleX =1870;
      middleY =960;
    pngElement.onload = () => {
      const pngWidth = 2700; // Width of the PNG element
      const pngHeight =1400;// Height of the PNG element
      ctx.drawImage(pngElement, middleX - pngWidth / 2, middleY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }














    // Add new element (PNG) in the middle of the canvas
    let middlesX ;
    let middlesY;
    const pngElements = new Image();
    pngElements.src = `${day}.png`;
    if(`${pngElements.src}`.includes("friday.png")){
      middlesX =1700;
      middlesY =940;
    pngElements.onload = () => {
      const pngWidth = 3000; // Width of the PNG element
      const pngHeight = 1800; // Height of the PNG element
      ctx.drawImage(pngElements, middlesX - pngWidth / 2, middlesY - pngHeight / 2, pngWidth, pngHeight);
      // Call the function to update the preview
      updatePreviewCanvas(image);}
    }
    else{
      middlesX =1700;
      middlesY =900;
      pngElements.onload = () => {
        const pngWidth = 3000; // Width of the PNG element
        const pngHeight = 1800; // Height of the PNG element
        ctx.drawImage(pngElements, middlesX - pngWidth / 2, middlesY - pngHeight / 2, pngWidth, pngHeight);
        // Call the function to update the preview
        updatePreviewCanvas(image);}
    }








    function updatePreviewCanvas(image) {
      previewCanvas.width = previewContainer.clientWidth;
      previewCanvas.height = (previewContainer.clientWidth / image.width) * image.height;

      const scaleFactor = calculateScaleFactor(
        image.width,
        image.height,
        previewCanvas.width,
        previewCanvas.height
      );
      const previewCtx = previewCanvas.getContext("2d");
      previewCtx.clearRect(0, 0, previewCanvas.width, previewCanvas.height);
      previewCtx.drawImage(canvas, 0, 0, previewCanvas.width, previewCanvas.height);

      // Store the preview image separately
      previewImage = canvas.toDataURL();

      downloadButton.disabled = false;
    }
  }
 

  function calculateScaleFactor(originalWidth, originalHeight, maxWidth, maxHeight) {
    const widthScaleFactor = originalWidth / maxWidth;
    const heightScaleFactor = originalHeight / maxHeight;

    return Math.max(widthScaleFactor, heightScaleFactor, 1);
  }
  setTimeout(() => {
    const link = document.createElement("a");
    link.download = "todayrasiphalithalumesha";
    link.href = previewImage; // Use the preview image data URL
    link.click();
  }, 6000);

  downloadButton.addEventListener("click", () => {
  });
let funk = ()=>{
  const link = document.createElement("a");
    link.download = "todayrasiphalithalumesha";
    link.href = previewImage; // Use the preview image data URL
    link.click();
}


}, 190000);

